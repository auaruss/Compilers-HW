type checker output: @ utilities.rkt:1472
(strip-has-type tsexp):
(ProgramDefsExp
 '()
 (list
  (Def
   'minus
   '((n : Integer) (m : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero
   '((x : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType (Prim 'vector '()) '(Vector))
     (HasType
      (Apply
       (HasType (Var 'zero) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one
   '((x : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two
   '((x : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (Var 'two)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three
   '((x : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))
        (HasType
         (Apply
          (HasType
           (Var 'two)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (Var 'three)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))))
 (HasType
  (Prim
   'vector-ref
   (list
    (HasType
     (Prim
      'vector-ref
      (list
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Prim
            'vector-ref
            (list
             (HasType
              (Prim
               'vector
               (list
                (HasType
                 (Apply
                  (HasType (Var 'zero) '(Integer -> (Vector)))
                  (list (HasType (Int 20) 'Integer)))
                 '(Vector))
                (HasType (Int 42) 'Integer)
                (HasType
                 (Apply
                  (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
                  (list (HasType (Int 20) 'Integer)))
                 '(Vector (Vector) Integer))
                (HasType
                 (Apply
                  (HasType
                   (Var 'two)
                   '(Integer
                     ->
                     (Vector (Vector) Integer (Vector (Vector) Integer))))
                  (list (HasType (Int 20) 'Integer)))
                 '(Vector (Vector) Integer (Vector (Vector) Integer)))
                (HasType
                 (Apply
                  (HasType
                   (Var 'three)
                   '(Integer
                     ->
                     (Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer)))))
                  (list (HasType (Int 20) 'Integer)))
                 '(Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer))))))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer))
                (Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer)))))
             (HasType (Int 4) 'Integer)))
           '(Vector
             (Vector)
             Integer
             (Vector (Vector) Integer)
             (Vector (Vector) Integer (Vector (Vector) Integer))))
          (HasType (Int 3) 'Integer)))
        '(Vector (Vector) Integer (Vector (Vector) Integer)))
       (HasType (Int 2) 'Integer)))
     '(Vector (Vector) Integer))
    (HasType (Int 1) 'Integer)))
  'Integer))


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: shrink @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus
   '((n : Integer) (m : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero
   '((x : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType (Prim 'vector '()) '(Vector))
     (HasType
      (Apply
       (HasType (Var 'zero) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one
   '((x : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two
   '((x : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (Var 'two)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three
   '((x : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim 'eq? (list (HasType (Var 'x) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))
        (HasType
         (Apply
          (HasType
           (Var 'two)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (Var 'three)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Prim
     'vector-ref
     (list
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Prim
                 'vector
                 (list
                  (HasType
                   (Apply
                    (HasType (Var 'zero) '(Integer -> (Vector)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector))
                  (HasType (Int 42) 'Integer)
                  (HasType
                   (Apply
                    (HasType
                     (Var 'one)
                     '(Integer -> (Vector (Vector) Integer)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer))
                  (HasType
                   (Apply
                    (HasType
                     (Var 'two)
                     '(Integer
                       ->
                       (Vector (Vector) Integer (Vector (Vector) Integer))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType
                   (Apply
                    (HasType
                     (Var 'three)
                     '(Integer
                       ->
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 4) 'Integer)))
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 3) 'Integer)))
          '(Vector (Vector) Integer (Vector (Vector) Integer)))
         (HasType (Int 2) 'Integer)))
       '(Vector (Vector) Integer))
      (HasType (Int 1) 'Integer)))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: uniquify @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n4399) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType (Prim 'vector '()) '(Vector))
     (HasType
      (Apply
       (HasType (Var 'zero4395) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4401) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (Var 'one4396) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4402) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (Var 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4403) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (Var 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (Var 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))
        (HasType
         (Apply
          (HasType
           (Var 'two4397)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (Var 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (Var 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4404) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Prim
     'vector-ref
     (list
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Prim
                 'vector
                 (list
                  (HasType
                   (Apply
                    (HasType (Var 'zero4395) '(Integer -> (Vector)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector))
                  (HasType (Int 42) 'Integer)
                  (HasType
                   (Apply
                    (HasType
                     (Var 'one4396)
                     '(Integer -> (Vector (Vector) Integer)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer))
                  (HasType
                   (Apply
                    (HasType
                     (Var 'two4397)
                     '(Integer
                       ->
                       (Vector (Vector) Integer (Vector (Vector) Integer))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType
                   (Apply
                    (HasType
                     (Var 'three4398)
                     '(Integer
                       ->
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 4) 'Integer)))
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 3) 'Integer)))
          '(Vector (Vector) Integer (Vector (Vector) Integer)))
         (HasType (Int 2) 'Integer)))
       '(Vector (Vector) Integer))
      (HasType (Int 1) 'Integer)))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: reveal functions @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n4399) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType (Prim 'vector '()) '(Vector))
     (HasType
      (Apply
       (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4401) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4402) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (FunRef 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4403) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))
        (HasType
         (Apply
          (HasType
           (FunRef 'two4397)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (FunRef 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4404) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Prim
     'vector-ref
     (list
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Prim
                 'vector
                 (list
                  (HasType
                   (Apply
                    (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector))
                  (HasType (Int 42) 'Integer)
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'one4396)
                     '(Integer -> (Vector (Vector) Integer)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer))
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'two4397)
                     '(Integer
                       ->
                       (Vector (Vector) Integer (Vector (Vector) Integer))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'three4398)
                     '(Integer
                       ->
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 4) 'Integer)))
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 3) 'Integer)))
          '(Vector (Vector) Integer (Vector (Vector) Integer)))
         (HasType (Int 2) 'Integer)))
       '(Vector (Vector) Integer))
      (HasType (Int 1) 'Integer)))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: limit functions @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n4399) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType (Prim 'vector '()) '(Vector))
     (HasType
      (Apply
       (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4401) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4402) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (FunRef 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4403) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Prim
       'vector
       (list
        (HasType
         (Apply
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector))
        (HasType (Int 42) 'Integer)
        (HasType
         (Apply
          (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer))
        (HasType
         (Apply
          (HasType
           (FunRef 'two4397)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (FunRef 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Prim 'vector (list (HasType (Var 'x4404) 'Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Prim
     'vector-ref
     (list
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Prim
                 'vector
                 (list
                  (HasType
                   (Apply
                    (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector))
                  (HasType (Int 42) 'Integer)
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'one4396)
                     '(Integer -> (Vector (Vector) Integer)))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer))
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'two4397)
                     '(Integer
                       ->
                       (Vector (Vector) Integer (Vector (Vector) Integer))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType
                   (Apply
                    (HasType
                     (FunRef 'three4398)
                     '(Integer
                       ->
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    (list (HasType (Int 20) 'Integer)))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 4) 'Integer)))
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 3) 'Integer)))
          '(Vector (Vector) Integer (Vector (Vector) Integer)))
         (HasType (Int 2) 'Integer)))
       '(Vector (Vector) Integer))
      (HasType (Int 1) 'Integer)))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: expose allocation @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (HasType
    (Prim
     '+
     (list
      (HasType (Var 'n4399) 'Integer)
      (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer)))
    'Integer))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       '_
       (HasType
        (If
         (HasType
          (Prim
           '<
           (list
            (HasType
             (Prim
              '+
              (list
               (HasType (GlobalValue 'free_ptr) 'Integer)
               (HasType (Int 8) 'Integer)))
             'Integer)
            (HasType (GlobalValue 'fromspace_end) 'Integer)))
          'Boolean)
         (HasType (Void) 'Void)
         (HasType (collect 8) 'Void))
        'Void)
       (HasType
        (Let
         'v
         (HasType (allocate 0 (Vector)) '(Vector))
         (HasType (HasType (Var 'v) '(Vector)) '(Vector)))
        '(Vector)))
      '(Vector))
     (HasType
      (Apply
       (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Let
                'x0
                (HasType (Var 'x4401) 'Integer)
                (HasType
                 (Let
                  '_
                  (HasType
                   (If
                    (HasType
                     (Prim
                      '<
                      (list
                       (HasType
                        (Prim
                         '+
                         (list
                          (HasType (GlobalValue 'free_ptr) 'Integer)
                          (HasType (Int 16) 'Integer)))
                        'Integer)
                       (HasType (GlobalValue 'fromspace_end) 'Integer)))
                     'Boolean)
                    (HasType (Void) 'Void)
                    (HasType (collect 16) 'Void))
                   'Void)
                  (HasType
                   (Let
                    'v
                    (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
                    (HasType
                     (HasType
                      (Let
                       '_
                       (HasType
                        (Prim
                         'vector-set!
                         (list
                          (HasType (Var 'v) '(Vector Integer))
                          (HasType (Int 0) 'Integer)
                          (HasType (Var 'x0) 'Integer)))
                        'Void)
                       (HasType (Var 'v) '(Vector Integer)))
                      '(Vector Integer))
                     '(Vector Integer)))
                   '(Vector Integer)))
                 '(Vector Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector)))
    '(Vector)))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x1
       (HasType (Int 42) 'Integer)
       (HasType
        (Let
         'x0
         (HasType
          (Apply
           (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
           (list (HasType (Int 20) 'Integer)))
          '(Vector))
         (HasType
          (Let
           '_
           (HasType
            (If
             (HasType
              (Prim
               '<
               (list
                (HasType
                 (Prim
                  '+
                  (list
                   (HasType (GlobalValue 'free_ptr) 'Integer)
                   (HasType (Int 24) 'Integer)))
                 'Integer)
                (HasType (GlobalValue 'fromspace_end) 'Integer)))
              'Boolean)
             (HasType (Void) 'Void)
             (HasType (collect 24) 'Void))
            'Void)
           (HasType
            (Let
             'v
             (HasType
              (allocate 2 (Vector (Vector) Integer))
              '(Vector (Vector) Integer))
             (HasType
              (HasType
               (Let
                '_
                (HasType
                 (Prim
                  'vector-set!
                  (list
                   (HasType (Var 'v) '(Vector (Vector) Integer))
                   (HasType (Int 1) 'Integer)
                   (HasType (Var 'x1) 'Integer)))
                 'Void)
                (HasType
                 (Let
                  '_
                  (HasType
                   (Prim
                    'vector-set!
                    (list
                     (HasType (Var 'v) '(Vector (Vector) Integer))
                     (HasType (Int 0) 'Integer)
                     (HasType (Var 'x0) '(Vector))))
                   'Void)
                  (HasType (Var 'v) '(Vector (Vector) Integer)))
                 '(Vector (Vector) Integer)))
               '(Vector (Vector) Integer))
              '(Vector (Vector) Integer)))
            '(Vector (Vector) Integer)))
          '(Vector (Vector) Integer)))
        '(Vector (Vector) Integer)))
      '(Vector (Vector) Integer))
     (HasType
      (Apply
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Let
                'x0
                (HasType (Var 'x4402) 'Integer)
                (HasType
                 (Let
                  '_
                  (HasType
                   (If
                    (HasType
                     (Prim
                      '<
                      (list
                       (HasType
                        (Prim
                         '+
                         (list
                          (HasType (GlobalValue 'free_ptr) 'Integer)
                          (HasType (Int 16) 'Integer)))
                        'Integer)
                       (HasType (GlobalValue 'fromspace_end) 'Integer)))
                     'Boolean)
                    (HasType (Void) 'Void)
                    (HasType (collect 16) 'Void))
                   'Void)
                  (HasType
                   (Let
                    'v
                    (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
                    (HasType
                     (HasType
                      (Let
                       '_
                       (HasType
                        (Prim
                         'vector-set!
                         (list
                          (HasType (Var 'v) '(Vector Integer))
                          (HasType (Int 0) 'Integer)
                          (HasType (Var 'x0) 'Integer)))
                        'Void)
                       (HasType (Var 'v) '(Vector Integer)))
                      '(Vector Integer))
                     '(Vector Integer)))
                   '(Vector Integer)))
                 '(Vector Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer)))
    '(Vector (Vector) Integer)))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x2
       (HasType
        (Apply
         (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
         (list (HasType (Int 20) 'Integer)))
        '(Vector (Vector) Integer))
       (HasType
        (Let
         'x1
         (HasType (Int 42) 'Integer)
         (HasType
          (Let
           'x0
           (HasType
            (Apply
             (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
             (list (HasType (Int 20) 'Integer)))
            '(Vector))
           (HasType
            (Let
             '_
             (HasType
              (If
               (HasType
                (Prim
                 '<
                 (list
                  (HasType
                   (Prim
                    '+
                    (list
                     (HasType (GlobalValue 'free_ptr) 'Integer)
                     (HasType (Int 32) 'Integer)))
                   'Integer)
                  (HasType (GlobalValue 'fromspace_end) 'Integer)))
                'Boolean)
               (HasType (Void) 'Void)
               (HasType (collect 32) 'Void))
              'Void)
             (HasType
              (Let
               'v
               (HasType
                (allocate 3 (Vector (Vector) Integer (Vector (Vector) Integer)))
                '(Vector (Vector) Integer (Vector (Vector) Integer)))
               (HasType
                (HasType
                 (Let
                  '_
                  (HasType
                   (Prim
                    'vector-set!
                    (list
                     (HasType
                      (Var 'v)
                      '(Vector (Vector) Integer (Vector (Vector) Integer)))
                     (HasType (Int 2) 'Integer)
                     (HasType (Var 'x2) '(Vector (Vector) Integer))))
                   'Void)
                  (HasType
                   (Let
                    '_
                    (HasType
                     (Prim
                      'vector-set!
                      (list
                       (HasType
                        (Var 'v)
                        '(Vector (Vector) Integer (Vector (Vector) Integer)))
                       (HasType (Int 1) 'Integer)
                       (HasType (Var 'x1) 'Integer)))
                     'Void)
                    (HasType
                     (Let
                      '_
                      (HasType
                       (Prim
                        'vector-set!
                        (list
                         (HasType
                          (Var 'v)
                          '(Vector (Vector) Integer (Vector (Vector) Integer)))
                         (HasType (Int 0) 'Integer)
                         (HasType (Var 'x0) '(Vector))))
                       'Void)
                      (HasType
                       (Var 'v)
                       '(Vector (Vector) Integer (Vector (Vector) Integer))))
                     '(Vector (Vector) Integer (Vector (Vector) Integer))))
                   '(Vector (Vector) Integer (Vector (Vector) Integer))))
                 '(Vector (Vector) Integer (Vector (Vector) Integer)))
                '(Vector (Vector) Integer (Vector (Vector) Integer))))
              '(Vector (Vector) Integer (Vector (Vector) Integer))))
            '(Vector (Vector) Integer (Vector (Vector) Integer))))
          '(Vector (Vector) Integer (Vector (Vector) Integer))))
        '(Vector (Vector) Integer (Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (HasType
      (Apply
       (HasType
        (FunRef 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Let
                'x0
                (HasType (Var 'x4403) 'Integer)
                (HasType
                 (Let
                  '_
                  (HasType
                   (If
                    (HasType
                     (Prim
                      '<
                      (list
                       (HasType
                        (Prim
                         '+
                         (list
                          (HasType (GlobalValue 'free_ptr) 'Integer)
                          (HasType (Int 16) 'Integer)))
                        'Integer)
                       (HasType (GlobalValue 'fromspace_end) 'Integer)))
                     'Boolean)
                    (HasType (Void) 'Void)
                    (HasType (collect 16) 'Void))
                   'Void)
                  (HasType
                   (Let
                    'v
                    (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
                    (HasType
                     (HasType
                      (Let
                       '_
                       (HasType
                        (Prim
                         'vector-set!
                         (list
                          (HasType (Var 'v) '(Vector Integer))
                          (HasType (Int 0) 'Integer)
                          (HasType (Var 'x0) 'Integer)))
                        'Void)
                       (HasType (Var 'v) '(Vector Integer)))
                      '(Vector Integer))
                     '(Vector Integer)))
                   '(Vector Integer)))
                 '(Vector Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector (Vector) Integer (Vector (Vector) Integer))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x3
       (HasType
        (Apply
         (HasType
          (FunRef 'two4397)
          '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
         (list (HasType (Int 20) 'Integer)))
        '(Vector (Vector) Integer (Vector (Vector) Integer)))
       (HasType
        (Let
         'x2
         (HasType
          (Apply
           (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
           (list (HasType (Int 20) 'Integer)))
          '(Vector (Vector) Integer))
         (HasType
          (Let
           'x1
           (HasType (Int 42) 'Integer)
           (HasType
            (Let
             'x0
             (HasType
              (Apply
               (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
               (list (HasType (Int 20) 'Integer)))
              '(Vector))
             (HasType
              (Let
               '_
               (HasType
                (If
                 (HasType
                  (Prim
                   '<
                   (list
                    (HasType
                     (Prim
                      '+
                      (list
                       (HasType (GlobalValue 'free_ptr) 'Integer)
                       (HasType (Int 40) 'Integer)))
                     'Integer)
                    (HasType (GlobalValue 'fromspace_end) 'Integer)))
                  'Boolean)
                 (HasType (Void) 'Void)
                 (HasType (collect 40) 'Void))
                'Void)
               (HasType
                (Let
                 'v
                 (HasType
                  (allocate 4 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))))
                 (HasType
                  (HasType
                   (Let
                    '_
                    (HasType
                     (Prim
                      'vector-set!
                      (list
                       (HasType
                        (Var 'v)
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))))
                       (HasType (Int 3) 'Integer)
                       (HasType
                        (Var 'x3)
                        '(Vector (Vector) Integer (Vector (Vector) Integer)))))
                     'Void)
                    (HasType
                     (Let
                      '_
                      (HasType
                       (Prim
                        'vector-set!
                        (list
                         (HasType
                          (Var 'v)
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer))))
                         (HasType (Int 2) 'Integer)
                         (HasType (Var 'x2) '(Vector (Vector) Integer))))
                       'Void)
                      (HasType
                       (Let
                        '_
                        (HasType
                         (Prim
                          'vector-set!
                          (list
                           (HasType
                            (Var 'v)
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))))
                           (HasType (Int 1) 'Integer)
                           (HasType (Var 'x1) 'Integer)))
                         'Void)
                        (HasType
                         (Let
                          '_
                          (HasType
                           (Prim
                            'vector-set!
                            (list
                             (HasType
                              (Var 'v)
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))))
                             (HasType (Int 0) 'Integer)
                             (HasType (Var 'x0) '(Vector))))
                           'Void)
                          (HasType
                           (Var 'v)
                           '(Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)))))
                         '(Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector (Vector) Integer (Vector (Vector) Integer)))))
                       '(Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer)))))
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer)))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer)))))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer)))))
          '(Vector
            (Vector)
            Integer
            (Vector (Vector) Integer)
            (Vector (Vector) Integer (Vector (Vector) Integer)))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (HasType
      (Apply
       (HasType
        (FunRef 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list
        (HasType
         (Apply
          (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Let
                'x0
                (HasType (Var 'x4404) 'Integer)
                (HasType
                 (Let
                  '_
                  (HasType
                   (If
                    (HasType
                     (Prim
                      '<
                      (list
                       (HasType
                        (Prim
                         '+
                         (list
                          (HasType (GlobalValue 'free_ptr) 'Integer)
                          (HasType (Int 16) 'Integer)))
                        'Integer)
                       (HasType (GlobalValue 'fromspace_end) 'Integer)))
                     'Boolean)
                    (HasType (Void) 'Void)
                    (HasType (collect 16) 'Void))
                   'Void)
                  (HasType
                   (Let
                    'v
                    (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
                    (HasType
                     (HasType
                      (Let
                       '_
                       (HasType
                        (Prim
                         'vector-set!
                         (list
                          (HasType (Var 'v) '(Vector Integer))
                          (HasType (Int 0) 'Integer)
                          (HasType (Var 'x0) 'Integer)))
                        'Void)
                       (HasType (Var 'v) '(Vector Integer)))
                      '(Vector Integer))
                     '(Vector Integer)))
                   '(Vector Integer)))
                 '(Vector Integer)))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (HasType (Int 1) 'Integer)))
         'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Prim
     'vector-ref
     (list
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Let
                 'x4
                 (HasType
                  (Apply
                   (HasType
                    (FunRef 'three4398)
                    '(Integer
                      ->
                      (Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   (list (HasType (Int 20) 'Integer)))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))))
                 (HasType
                  (Let
                   'x3
                   (HasType
                    (Apply
                     (HasType
                      (FunRef 'two4397)
                      '(Integer
                        ->
                        (Vector (Vector) Integer (Vector (Vector) Integer))))
                     (list (HasType (Int 20) 'Integer)))
                    '(Vector (Vector) Integer (Vector (Vector) Integer)))
                   (HasType
                    (Let
                     'x2
                     (HasType
                      (Apply
                       (HasType
                        (FunRef 'one4396)
                        '(Integer -> (Vector (Vector) Integer)))
                       (list (HasType (Int 20) 'Integer)))
                      '(Vector (Vector) Integer))
                     (HasType
                      (Let
                       'x1
                       (HasType (Int 42) 'Integer)
                       (HasType
                        (Let
                         'x0
                         (HasType
                          (Apply
                           (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
                           (list (HasType (Int 20) 'Integer)))
                          '(Vector))
                         (HasType
                          (Let
                           '_
                           (HasType
                            (If
                             (HasType
                              (Prim
                               '<
                               (list
                                (HasType
                                 (Prim
                                  '+
                                  (list
                                   (HasType (GlobalValue 'free_ptr) 'Integer)
                                   (HasType (Int 48) 'Integer)))
                                 'Integer)
                                (HasType
                                 (GlobalValue 'fromspace_end)
                                 'Integer)))
                              'Boolean)
                             (HasType (Void) 'Void)
                             (HasType (collect 48) 'Void))
                            'Void)
                           (HasType
                            (Let
                             'v
                             (HasType
                              (allocate 5 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)) (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)))))
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)))))
                             (HasType
                              (HasType
                               (Let
                                '_
                                (HasType
                                 (Prim
                                  'vector-set!
                                  (list
                                   (HasType
                                    (Var 'v)
                                    '(Vector
                                      (Vector)
                                      Integer
                                      (Vector (Vector) Integer)
                                      (Vector
                                       (Vector)
                                       Integer
                                       (Vector (Vector) Integer))
                                      (Vector
                                       (Vector)
                                       Integer
                                       (Vector (Vector) Integer)
                                       (Vector
                                        (Vector)
                                        Integer
                                        (Vector (Vector) Integer)))))
                                   (HasType (Int 4) 'Integer)
                                   (HasType
                                    (Var 'x4)
                                    '(Vector
                                      (Vector)
                                      Integer
                                      (Vector (Vector) Integer)
                                      (Vector
                                       (Vector)
                                       Integer
                                       (Vector (Vector) Integer))))))
                                 'Void)
                                (HasType
                                 (Let
                                  '_
                                  (HasType
                                   (Prim
                                    'vector-set!
                                    (list
                                     (HasType
                                      (Var 'v)
                                      '(Vector
                                        (Vector)
                                        Integer
                                        (Vector (Vector) Integer)
                                        (Vector
                                         (Vector)
                                         Integer
                                         (Vector (Vector) Integer))
                                        (Vector
                                         (Vector)
                                         Integer
                                         (Vector (Vector) Integer)
                                         (Vector
                                          (Vector)
                                          Integer
                                          (Vector (Vector) Integer)))))
                                     (HasType (Int 3) 'Integer)
                                     (HasType
                                      (Var 'x3)
                                      '(Vector
                                        (Vector)
                                        Integer
                                        (Vector (Vector) Integer)))))
                                   'Void)
                                  (HasType
                                   (Let
                                    '_
                                    (HasType
                                     (Prim
                                      'vector-set!
                                      (list
                                       (HasType
                                        (Var 'v)
                                        '(Vector
                                          (Vector)
                                          Integer
                                          (Vector (Vector) Integer)
                                          (Vector
                                           (Vector)
                                           Integer
                                           (Vector (Vector) Integer))
                                          (Vector
                                           (Vector)
                                           Integer
                                           (Vector (Vector) Integer)
                                           (Vector
                                            (Vector)
                                            Integer
                                            (Vector (Vector) Integer)))))
                                       (HasType (Int 2) 'Integer)
                                       (HasType
                                        (Var 'x2)
                                        '(Vector (Vector) Integer))))
                                     'Void)
                                    (HasType
                                     (Let
                                      '_
                                      (HasType
                                       (Prim
                                        'vector-set!
                                        (list
                                         (HasType
                                          (Var 'v)
                                          '(Vector
                                            (Vector)
                                            Integer
                                            (Vector (Vector) Integer)
                                            (Vector
                                             (Vector)
                                             Integer
                                             (Vector (Vector) Integer))
                                            (Vector
                                             (Vector)
                                             Integer
                                             (Vector (Vector) Integer)
                                             (Vector
                                              (Vector)
                                              Integer
                                              (Vector (Vector) Integer)))))
                                         (HasType (Int 1) 'Integer)
                                         (HasType (Var 'x1) 'Integer)))
                                       'Void)
                                      (HasType
                                       (Let
                                        '_
                                        (HasType
                                         (Prim
                                          'vector-set!
                                          (list
                                           (HasType
                                            (Var 'v)
                                            '(Vector
                                              (Vector)
                                              Integer
                                              (Vector (Vector) Integer)
                                              (Vector
                                               (Vector)
                                               Integer
                                               (Vector (Vector) Integer))
                                              (Vector
                                               (Vector)
                                               Integer
                                               (Vector (Vector) Integer)
                                               (Vector
                                                (Vector)
                                                Integer
                                                (Vector (Vector) Integer)))))
                                           (HasType (Int 0) 'Integer)
                                           (HasType (Var 'x0) '(Vector))))
                                         'Void)
                                        (HasType
                                         (Var 'v)
                                         '(Vector
                                           (Vector)
                                           Integer
                                           (Vector (Vector) Integer)
                                           (Vector
                                            (Vector)
                                            Integer
                                            (Vector (Vector) Integer))
                                           (Vector
                                            (Vector)
                                            Integer
                                            (Vector (Vector) Integer)
                                            (Vector
                                             (Vector)
                                             Integer
                                             (Vector (Vector) Integer))))))
                                       '(Vector
                                         (Vector)
                                         Integer
                                         (Vector (Vector) Integer)
                                         (Vector
                                          (Vector)
                                          Integer
                                          (Vector (Vector) Integer))
                                         (Vector
                                          (Vector)
                                          Integer
                                          (Vector (Vector) Integer)
                                          (Vector
                                           (Vector)
                                           Integer
                                           (Vector (Vector) Integer))))))
                                     '(Vector
                                       (Vector)
                                       Integer
                                       (Vector (Vector) Integer)
                                       (Vector
                                        (Vector)
                                        Integer
                                        (Vector (Vector) Integer))
                                       (Vector
                                        (Vector)
                                        Integer
                                        (Vector (Vector) Integer)
                                        (Vector
                                         (Vector)
                                         Integer
                                         (Vector (Vector) Integer))))))
                                   '(Vector
                                     (Vector)
                                     Integer
                                     (Vector (Vector) Integer)
                                     (Vector
                                      (Vector)
                                      Integer
                                      (Vector (Vector) Integer))
                                     (Vector
                                      (Vector)
                                      Integer
                                      (Vector (Vector) Integer)
                                      (Vector
                                       (Vector)
                                       Integer
                                       (Vector (Vector) Integer))))))
                                 '(Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer)
                                   (Vector
                                    (Vector)
                                    Integer
                                    (Vector (Vector) Integer))
                                   (Vector
                                    (Vector)
                                    Integer
                                    (Vector (Vector) Integer)
                                    (Vector
                                     (Vector)
                                     Integer
                                     (Vector (Vector) Integer))))))
                               '(Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer))
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)
                                  (Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer)))))
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer))))))
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer))))))
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector (Vector) Integer (Vector (Vector) Integer))
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer))))))
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))
                          (Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer))))))
                      '(Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer))
                        (Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer))))))
                    '(Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer))
                      (Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer))))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))
                    (Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 4) 'Integer)))
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 3) 'Integer)))
          '(Vector (Vector) Integer (Vector (Vector) Integer)))
         (HasType (Int 2) 'Integer)))
       '(Vector (Vector) Integer))
      (HasType (Int 1) 'Integer)))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: remove complex opera* @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (Let
    'tmp4408
    (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer)
    (HasType
     (Prim
      '+
      (list (HasType (Var 'n4399) 'Integer) (HasType (Var 'tmp4408) 'Integer)))
     'Integer)))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       '_
       (HasType
        (If
         (Let
          'tmp4409
          (HasType (GlobalValue 'free_ptr) 'Integer)
          (Let
           'tmp4410
           (HasType
            (Prim
             '+
             (list
              (HasType (Var 'tmp4409) 'Integer)
              (HasType (Int 8) 'Integer)))
            'Integer)
           (Let
            'tmp4411
            (HasType (GlobalValue 'fromspace_end) 'Integer)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4410) 'Integer)
               (HasType (Var 'tmp4411) 'Integer)))
             'Boolean))))
         (HasType (Void) 'Void)
         (HasType (collect 8) 'Void))
        'Void)
       (HasType
        (Let
         'v
         (HasType (allocate 0 (Vector)) '(Vector))
         (HasType (HasType (Var 'v) '(Vector)) '(Vector)))
        '(Vector)))
      '(Vector))
     (Let
      'tmp4416
      (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
      (Let
       'x0
       (HasType (Var 'x4401) 'Integer)
       (Let
        '_
        (HasType
         (If
          (Let
           'tmp4412
           (HasType (GlobalValue 'free_ptr) 'Integer)
           (Let
            'tmp4413
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4412) 'Integer)
               (HasType (Int 16) 'Integer)))
             'Integer)
            (Let
             'tmp4414
             (HasType (GlobalValue 'fromspace_end) 'Integer)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4413) 'Integer)
                (HasType (Var 'tmp4414) 'Integer)))
              'Boolean))))
          (HasType (Void) 'Void)
          (HasType (collect 16) 'Void))
         'Void)
        (Let
         'v
         (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
         (Let
          '_
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          (Let
           'tmp4415
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (HasType
                (HasType
                 (HasType
                  (HasType
                   (HasType (Var 'v) '(Vector Integer))
                   '(Vector Integer))
                  '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (Let
            'tmp4417
            (HasType
             (Apply
              (HasType (Var 'tmp4416) '(Integer Integer -> Integer))
              (list
               (HasType (Var 'tmp4415) 'Integer)
               (HasType (Int 1) 'Integer)))
             'Integer)
            (Let
             'tmp4418
             (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
             (HasType
              (Apply
               (HasType (Var 'tmp4418) '(Integer -> (Vector)))
               (list (HasType (Var 'tmp4417) 'Integer)))
              '(Vector)))))))))))
    '(Vector)))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x1
       (HasType (Int 42) 'Integer)
       (HasType
        (Let
         'x0
         (Let
          'tmp4419
          (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
          (HasType
           (Apply
            (HasType (Var 'tmp4419) '(Integer -> (Vector)))
            (list (HasType (Int 20) 'Integer)))
           '(Vector)))
         (HasType
          (Let
           '_
           (HasType
            (If
             (Let
              'tmp4420
              (HasType (GlobalValue 'free_ptr) 'Integer)
              (Let
               'tmp4421
               (HasType
                (Prim
                 '+
                 (list
                  (HasType (Var 'tmp4420) 'Integer)
                  (HasType (Int 24) 'Integer)))
                'Integer)
               (Let
                'tmp4422
                (HasType (GlobalValue 'fromspace_end) 'Integer)
                (HasType
                 (Prim
                  '<
                  (list
                   (HasType (Var 'tmp4421) 'Integer)
                   (HasType (Var 'tmp4422) 'Integer)))
                 'Boolean))))
             (HasType (Void) 'Void)
             (HasType (collect 24) 'Void))
            'Void)
           (HasType
            (Let
             'v
             (HasType
              (allocate 2 (Vector (Vector) Integer))
              '(Vector (Vector) Integer))
             (HasType
              (HasType
               (Let
                '_
                (HasType
                 (Prim
                  'vector-set!
                  (list
                   (HasType (Var 'v) '(Vector (Vector) Integer))
                   (HasType (Int 1) 'Integer)
                   (HasType (Var 'x1) 'Integer)))
                 'Void)
                (HasType
                 (Let
                  '_
                  (HasType
                   (Prim
                    'vector-set!
                    (list
                     (HasType (Var 'v) '(Vector (Vector) Integer))
                     (HasType (Int 0) 'Integer)
                     (HasType (Var 'x0) '(Vector))))
                   'Void)
                  (HasType (Var 'v) '(Vector (Vector) Integer)))
                 '(Vector (Vector) Integer)))
               '(Vector (Vector) Integer))
              '(Vector (Vector) Integer)))
            '(Vector (Vector) Integer)))
          '(Vector (Vector) Integer)))
        '(Vector (Vector) Integer)))
      '(Vector (Vector) Integer))
     (Let
      'tmp4427
      (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
      (Let
       'x0
       (HasType (Var 'x4402) 'Integer)
       (Let
        '_
        (HasType
         (If
          (Let
           'tmp4423
           (HasType (GlobalValue 'free_ptr) 'Integer)
           (Let
            'tmp4424
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4423) 'Integer)
               (HasType (Int 16) 'Integer)))
             'Integer)
            (Let
             'tmp4425
             (HasType (GlobalValue 'fromspace_end) 'Integer)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4424) 'Integer)
                (HasType (Var 'tmp4425) 'Integer)))
              'Boolean))))
          (HasType (Void) 'Void)
          (HasType (collect 16) 'Void))
         'Void)
        (Let
         'v
         (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
         (Let
          '_
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          (Let
           'tmp4426
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (HasType
                (HasType
                 (HasType
                  (HasType
                   (HasType (Var 'v) '(Vector Integer))
                   '(Vector Integer))
                  '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (Let
            'tmp4428
            (HasType
             (Apply
              (HasType (Var 'tmp4427) '(Integer Integer -> Integer))
              (list
               (HasType (Var 'tmp4426) 'Integer)
               (HasType (Int 1) 'Integer)))
             'Integer)
            (Let
             'tmp4429
             (HasType
              (FunRef 'one4396)
              '(Integer -> (Vector (Vector) Integer)))
             (HasType
              (Apply
               (HasType (Var 'tmp4429) '(Integer -> (Vector (Vector) Integer)))
               (list (HasType (Var 'tmp4428) 'Integer)))
              '(Vector (Vector) Integer)))))))))))
    '(Vector (Vector) Integer)))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x2
       (Let
        'tmp4430
        (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
        (HasType
         (Apply
          (HasType (Var 'tmp4430) '(Integer -> (Vector (Vector) Integer)))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer)))
       (HasType
        (Let
         'x1
         (HasType (Int 42) 'Integer)
         (HasType
          (Let
           'x0
           (Let
            'tmp4431
            (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
            (HasType
             (Apply
              (HasType (Var 'tmp4431) '(Integer -> (Vector)))
              (list (HasType (Int 20) 'Integer)))
             '(Vector)))
           (HasType
            (Let
             '_
             (HasType
              (If
               (Let
                'tmp4432
                (HasType (GlobalValue 'free_ptr) 'Integer)
                (Let
                 'tmp4433
                 (HasType
                  (Prim
                   '+
                   (list
                    (HasType (Var 'tmp4432) 'Integer)
                    (HasType (Int 32) 'Integer)))
                  'Integer)
                 (Let
                  'tmp4434
                  (HasType (GlobalValue 'fromspace_end) 'Integer)
                  (HasType
                   (Prim
                    '<
                    (list
                     (HasType (Var 'tmp4433) 'Integer)
                     (HasType (Var 'tmp4434) 'Integer)))
                   'Boolean))))
               (HasType (Void) 'Void)
               (HasType (collect 32) 'Void))
              'Void)
             (HasType
              (Let
               'v
               (HasType
                (allocate 3 (Vector (Vector) Integer (Vector (Vector) Integer)))
                '(Vector (Vector) Integer (Vector (Vector) Integer)))
               (HasType
                (HasType
                 (Let
                  '_
                  (HasType
                   (Prim
                    'vector-set!
                    (list
                     (HasType
                      (Var 'v)
                      '(Vector (Vector) Integer (Vector (Vector) Integer)))
                     (HasType (Int 2) 'Integer)
                     (HasType (Var 'x2) '(Vector (Vector) Integer))))
                   'Void)
                  (HasType
                   (Let
                    '_
                    (HasType
                     (Prim
                      'vector-set!
                      (list
                       (HasType
                        (Var 'v)
                        '(Vector (Vector) Integer (Vector (Vector) Integer)))
                       (HasType (Int 1) 'Integer)
                       (HasType (Var 'x1) 'Integer)))
                     'Void)
                    (HasType
                     (Let
                      '_
                      (HasType
                       (Prim
                        'vector-set!
                        (list
                         (HasType
                          (Var 'v)
                          '(Vector (Vector) Integer (Vector (Vector) Integer)))
                         (HasType (Int 0) 'Integer)
                         (HasType (Var 'x0) '(Vector))))
                       'Void)
                      (HasType
                       (Var 'v)
                       '(Vector (Vector) Integer (Vector (Vector) Integer))))
                     '(Vector (Vector) Integer (Vector (Vector) Integer))))
                   '(Vector (Vector) Integer (Vector (Vector) Integer))))
                 '(Vector (Vector) Integer (Vector (Vector) Integer)))
                '(Vector (Vector) Integer (Vector (Vector) Integer))))
              '(Vector (Vector) Integer (Vector (Vector) Integer))))
            '(Vector (Vector) Integer (Vector (Vector) Integer))))
          '(Vector (Vector) Integer (Vector (Vector) Integer))))
        '(Vector (Vector) Integer (Vector (Vector) Integer))))
      '(Vector (Vector) Integer (Vector (Vector) Integer)))
     (Let
      'tmp4439
      (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
      (Let
       'x0
       (HasType (Var 'x4403) 'Integer)
       (Let
        '_
        (HasType
         (If
          (Let
           'tmp4435
           (HasType (GlobalValue 'free_ptr) 'Integer)
           (Let
            'tmp4436
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4435) 'Integer)
               (HasType (Int 16) 'Integer)))
             'Integer)
            (Let
             'tmp4437
             (HasType (GlobalValue 'fromspace_end) 'Integer)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4436) 'Integer)
                (HasType (Var 'tmp4437) 'Integer)))
              'Boolean))))
          (HasType (Void) 'Void)
          (HasType (collect 16) 'Void))
         'Void)
        (Let
         'v
         (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
         (Let
          '_
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          (Let
           'tmp4438
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (HasType
                (HasType
                 (HasType
                  (HasType
                   (HasType (Var 'v) '(Vector Integer))
                   '(Vector Integer))
                  '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (Let
            'tmp4440
            (HasType
             (Apply
              (HasType (Var 'tmp4439) '(Integer Integer -> Integer))
              (list
               (HasType (Var 'tmp4438) 'Integer)
               (HasType (Int 1) 'Integer)))
             'Integer)
            (Let
             'tmp4441
             (HasType
              (FunRef 'two4397)
              '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
             (HasType
              (Apply
               (HasType
                (Var 'tmp4441)
                '(Integer
                  ->
                  (Vector (Vector) Integer (Vector (Vector) Integer))))
               (list (HasType (Var 'tmp4440) 'Integer)))
              '(Vector (Vector) Integer (Vector (Vector) Integer))))))))))))
    '(Vector (Vector) Integer (Vector (Vector) Integer))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      'Boolean)
     (HasType
      (Let
       'x3
       (Let
        'tmp4442
        (HasType
         (FunRef 'two4397)
         '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
        (HasType
         (Apply
          (HasType
           (Var 'tmp4442)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
          (list (HasType (Int 20) 'Integer)))
         '(Vector (Vector) Integer (Vector (Vector) Integer))))
       (HasType
        (Let
         'x2
         (Let
          'tmp4443
          (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
          (HasType
           (Apply
            (HasType (Var 'tmp4443) '(Integer -> (Vector (Vector) Integer)))
            (list (HasType (Int 20) 'Integer)))
           '(Vector (Vector) Integer)))
         (HasType
          (Let
           'x1
           (HasType (Int 42) 'Integer)
           (HasType
            (Let
             'x0
             (Let
              'tmp4444
              (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
              (HasType
               (Apply
                (HasType (Var 'tmp4444) '(Integer -> (Vector)))
                (list (HasType (Int 20) 'Integer)))
               '(Vector)))
             (HasType
              (Let
               '_
               (HasType
                (If
                 (Let
                  'tmp4445
                  (HasType (GlobalValue 'free_ptr) 'Integer)
                  (Let
                   'tmp4446
                   (HasType
                    (Prim
                     '+
                     (list
                      (HasType (Var 'tmp4445) 'Integer)
                      (HasType (Int 40) 'Integer)))
                    'Integer)
                   (Let
                    'tmp4447
                    (HasType (GlobalValue 'fromspace_end) 'Integer)
                    (HasType
                     (Prim
                      '<
                      (list
                       (HasType (Var 'tmp4446) 'Integer)
                       (HasType (Var 'tmp4447) 'Integer)))
                     'Boolean))))
                 (HasType (Void) 'Void)
                 (HasType (collect 40) 'Void))
                'Void)
               (HasType
                (Let
                 'v
                 (HasType
                  (allocate 4 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))))
                 (HasType
                  (HasType
                   (Let
                    '_
                    (HasType
                     (Prim
                      'vector-set!
                      (list
                       (HasType
                        (Var 'v)
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))))
                       (HasType (Int 3) 'Integer)
                       (HasType
                        (Var 'x3)
                        '(Vector (Vector) Integer (Vector (Vector) Integer)))))
                     'Void)
                    (HasType
                     (Let
                      '_
                      (HasType
                       (Prim
                        'vector-set!
                        (list
                         (HasType
                          (Var 'v)
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer))))
                         (HasType (Int 2) 'Integer)
                         (HasType (Var 'x2) '(Vector (Vector) Integer))))
                       'Void)
                      (HasType
                       (Let
                        '_
                        (HasType
                         (Prim
                          'vector-set!
                          (list
                           (HasType
                            (Var 'v)
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))))
                           (HasType (Int 1) 'Integer)
                           (HasType (Var 'x1) 'Integer)))
                         'Void)
                        (HasType
                         (Let
                          '_
                          (HasType
                           (Prim
                            'vector-set!
                            (list
                             (HasType
                              (Var 'v)
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))))
                             (HasType (Int 0) 'Integer)
                             (HasType (Var 'x0) '(Vector))))
                           'Void)
                          (HasType
                           (Var 'v)
                           '(Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)))))
                         '(Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector (Vector) Integer (Vector (Vector) Integer)))))
                       '(Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer)))))
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer)))))
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer)))))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer)))))
          '(Vector
            (Vector)
            Integer
            (Vector (Vector) Integer)
            (Vector (Vector) Integer (Vector (Vector) Integer)))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer)))))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
     (Let
      'tmp4452
      (HasType (FunRef 'minus4394) '(Integer Integer -> Integer))
      (Let
       'x0
       (HasType (Var 'x4404) 'Integer)
       (Let
        '_
        (HasType
         (If
          (Let
           'tmp4448
           (HasType (GlobalValue 'free_ptr) 'Integer)
           (Let
            'tmp4449
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4448) 'Integer)
               (HasType (Int 16) 'Integer)))
             'Integer)
            (Let
             'tmp4450
             (HasType (GlobalValue 'fromspace_end) 'Integer)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4449) 'Integer)
                (HasType (Var 'tmp4450) 'Integer)))
              'Boolean))))
          (HasType (Void) 'Void)
          (HasType (collect 16) 'Void))
         'Void)
        (Let
         'v
         (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
         (Let
          '_
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          (Let
           'tmp4451
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (HasType
                (HasType
                 (HasType
                  (HasType
                   (HasType (Var 'v) '(Vector Integer))
                   '(Vector Integer))
                  '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              (HasType (Int 0) 'Integer)))
            'Integer)
           (Let
            'tmp4453
            (HasType
             (Apply
              (HasType (Var 'tmp4452) '(Integer Integer -> Integer))
              (list
               (HasType (Var 'tmp4451) 'Integer)
               (HasType (Int 1) 'Integer)))
             'Integer)
            (Let
             'tmp4454
             (HasType
              (FunRef 'three4398)
              '(Integer
                ->
                (Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer)))))
             (HasType
              (Apply
               (HasType
                (Var 'tmp4454)
                '(Integer
                  ->
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (list (HasType (Var 'tmp4453) 'Integer)))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))))))))))
    '(Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer)))))
  (Def
   'main
   '()
   'Integer
   '()
   (Let
    'x4
    (Let
     'tmp4455
     (HasType
      (FunRef 'three4398)
      '(Integer
        ->
        (Vector
         (Vector)
         Integer
         (Vector (Vector) Integer)
         (Vector (Vector) Integer (Vector (Vector) Integer)))))
     (HasType
      (Apply
       (HasType
        (Var 'tmp4455)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (list (HasType (Int 20) 'Integer)))
      '(Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer)))))
    (Let
     'x3
     (Let
      'tmp4456
      (HasType
       (FunRef 'two4397)
       '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
      (HasType
       (Apply
        (HasType
         (Var 'tmp4456)
         '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer))))
        (list (HasType (Int 20) 'Integer)))
       '(Vector (Vector) Integer (Vector (Vector) Integer))))
     (Let
      'x2
      (Let
       'tmp4457
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer)))
       (HasType
        (Apply
         (HasType (Var 'tmp4457) '(Integer -> (Vector (Vector) Integer)))
         (list (HasType (Int 20) 'Integer)))
        '(Vector (Vector) Integer)))
      (Let
       'x1
       (HasType (Int 42) 'Integer)
       (Let
        'x0
        (Let
         'tmp4458
         (HasType (FunRef 'zero4395) '(Integer -> (Vector)))
         (HasType
          (Apply
           (HasType (Var 'tmp4458) '(Integer -> (Vector)))
           (list (HasType (Int 20) 'Integer)))
          '(Vector)))
        (Let
         '_
         (HasType
          (If
           (Let
            'tmp4459
            (HasType (GlobalValue 'free_ptr) 'Integer)
            (Let
             'tmp4460
             (HasType
              (Prim
               '+
               (list
                (HasType (Var 'tmp4459) 'Integer)
                (HasType (Int 48) 'Integer)))
              'Integer)
             (Let
              'tmp4461
              (HasType (GlobalValue 'fromspace_end) 'Integer)
              (HasType
               (Prim
                '<
                (list
                 (HasType (Var 'tmp4460) 'Integer)
                 (HasType (Var 'tmp4461) 'Integer)))
               'Boolean))))
           (HasType (Void) 'Void)
           (HasType (collect 48) 'Void))
          'Void)
         (Let
          'v
          (HasType
           (allocate 5 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)) (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)))))
           '(Vector
             (Vector)
             Integer
             (Vector (Vector) Integer)
             (Vector (Vector) Integer (Vector (Vector) Integer))
             (Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer)))))
          (Let
           '_
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))
                 (Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer)))))
              (HasType (Int 4) 'Integer)
              (HasType
               (Var 'x4)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))))))
            'Void)
           (Let
            '_
            (HasType
             (Prim
              'vector-set!
              (list
               (HasType
                (Var 'v)
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 3) 'Integer)
               (HasType
                (Var 'x3)
                '(Vector (Vector) Integer (Vector (Vector) Integer)))))
             'Void)
            (Let
             '_
             (HasType
              (Prim
               'vector-set!
               (list
                (HasType
                 (Var 'v)
                 '(Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer))
                   (Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer)))))
                (HasType (Int 2) 'Integer)
                (HasType (Var 'x2) '(Vector (Vector) Integer))))
              'Void)
             (Let
              '_
              (HasType
               (Prim
                'vector-set!
                (list
                 (HasType
                  (Var 'v)
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))
                    (Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer)))))
                 (HasType (Int 1) 'Integer)
                 (HasType (Var 'x1) 'Integer)))
               'Void)
              (Let
               '_
               (HasType
                (Prim
                 'vector-set!
                 (list
                  (HasType
                   (Var 'v)
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))
                     (Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer)))))
                  (HasType (Int 0) 'Integer)
                  (HasType (Var 'x0) '(Vector))))
                'Void)
               (Let
                'tmp4462
                (HasType
                 (Prim
                  'vector-ref
                  (list
                   (HasType
                    (HasType
                     (HasType
                      (HasType
                       (HasType
                        (HasType
                         (HasType
                          (HasType
                           (HasType
                            (HasType
                             (HasType
                              (HasType
                               (HasType
                                (HasType
                                 (Var 'v)
                                 '(Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer)
                                   (Vector
                                    (Vector)
                                    Integer
                                    (Vector (Vector) Integer))
                                   (Vector
                                    (Vector)
                                    Integer
                                    (Vector (Vector) Integer)
                                    (Vector
                                     (Vector)
                                     Integer
                                     (Vector (Vector) Integer)))))
                                '(Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)
                                  (Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer))
                                  (Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer)
                                   (Vector
                                    (Vector)
                                    Integer
                                    (Vector (Vector) Integer)))))
                               '(Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer))
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)
                                  (Vector
                                   (Vector)
                                   Integer
                                   (Vector (Vector) Integer)))))
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)))))
                             '(Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer))
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)))))
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)))))
                           '(Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer))
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)))))
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector (Vector) Integer (Vector (Vector) Integer))
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)))))
                         '(Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector (Vector) Integer (Vector (Vector) Integer))
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)))))
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))
                          (Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)))))
                       '(Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer))
                         (Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer)))))
                      '(Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer))
                        (Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer)))))
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer))
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    '(Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer))
                      (Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   (HasType (Int 4) 'Integer)))
                 '(Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer))))
                (Let
                 'tmp4463
                 (HasType
                  (Prim
                   'vector-ref
                   (list
                    (HasType
                     (Var 'tmp4462)
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer))))
                    (HasType (Int 3) 'Integer)))
                  '(Vector (Vector) Integer (Vector (Vector) Integer)))
                 (Let
                  'tmp4464
                  (HasType
                   (Prim
                    'vector-ref
                    (list
                     (HasType
                      (Var 'tmp4463)
                      '(Vector (Vector) Integer (Vector (Vector) Integer)))
                     (HasType (Int 2) 'Integer)))
                   '(Vector (Vector) Integer))
                  (HasType
                   (Prim
                    'vector-ref
                    (list
                     (HasType (Var 'tmp4464) '(Vector (Vector) Integer))
                     (HasType (Int 1) 'Integer)))
                   'Integer)))))))))))))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: explicate control @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    tmp4408
    _
    v
    tmp4409
    tmp4469
    tmp4410
    tmp4411
    tmp4416
    x0
    _
    v
    _
    tmp4415
    tmp4417
    tmp4418
    tmp4412
    tmp4473
    tmp4413
    tmp4414
    x1
    x0
    _
    v
    _
    _
    tmp4420
    tmp4479
    tmp4421
    tmp4422
    tmp4419
    tmp4427
    x0
    _
    v
    _
    tmp4426
    tmp4428
    tmp4429
    tmp4423
    tmp4483
    tmp4424
    tmp4425
    x2
    x1
    x0
    _
    v
    _
    _
    _
    tmp4432
    tmp4489
    tmp4433
    tmp4434
    tmp4431
    tmp4430
    tmp4439
    x0
    _
    v
    _
    tmp4438
    tmp4440
    tmp4441
    tmp4435
    tmp4493
    tmp4436
    tmp4437
    x3
    x2
    x1
    x0
    _
    v
    _
    _
    _
    _
    tmp4445
    tmp4499
    tmp4446
    tmp4447
    tmp4444
    tmp4443
    tmp4442
    tmp4452
    x0
    _
    v
    _
    tmp4451
    tmp4453
    tmp4454
    tmp4448
    tmp4503
    tmp4449
    tmp4450
    x4
    x3
    x2
    x1
    x0
    _
    v
    _
    _
    _
    _
    _
    tmp4462
    tmp4463
    tmp4464
    tmp4459
    tmp4509
    tmp4460
    tmp4461
    tmp4458
    tmp4457
    tmp4456
    tmp4455))
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '()
   (list
    (cons
     'minus4394start
     (Seq
      (Assign
       (Var 'tmp4408)
       (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer))
      (Return
       (Prim
        '+
        (list
         (HasType (Var 'n4399) 'Integer)
         (HasType (Var 'tmp4408) 'Integer))))))))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '()
   (list
    (cons
     'block4470
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4415)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4417)
          (HasType
           ((HasType (Var 'tmp4416) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4415)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4418)
           (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
          ((HasType (Var 'tmp4418) '(Integer -> (Vector))) (HasType
                                                            (Var 'tmp4417)
                                                            'Integer))))))))
    (cons
     'block4471
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4470)))
    (cons
     'block4474
     (Seq
      (Assign
       (Var 'tmp4409)
       (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
      (Seq
       (Assign
        (Var 'tmp4410)
        (HasType
         (Prim
          '+
          (list (HasType (Var 'tmp4409) 'Integer) (HasType (Int 8) 'Integer)))
         'Integer))
       (Seq
        (Assign (Var 'tmp4411) (HasType (GlobalValue 'fromspace_end) 'Integer))
        (Seq
         (Assign
          (Var 'tmp4469)
          (HasType
           (Prim
            '<
            (list
             (HasType (Var 'tmp4410) 'Integer)
             (HasType (Var 'tmp4411) 'Integer)))
           'Boolean))
         (IfStmt
          (Prim 'eq? (list (Var 'tmp4469) (Bool #t)))
          (Goto 'block4467)
          (Goto 'block4468)))))))
    (cons
     'block4475
     (Seq
      (Assign
       (Var 'tmp4416)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4401) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4412)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4413)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4412) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4414)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4473)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4413) 'Integer)
               (HasType (Var 'tmp4414) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4473) (Bool #t)))
            (Goto 'block4471)
            (Goto 'block4472)))))))))
    (cons 'block4472 (Seq (collect 16) (Goto 'block4470)))
    (cons
     'zero4395start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4474)
      (Goto 'block4475)))
    (cons
     'block4466
     (Seq
      (Assign (Var 'v) (HasType (allocate 0 (Vector)) '(Vector)))
      (Return (Var 'v))))
    (cons
     'block4467
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4466)))
    (cons 'block4468 (Seq (collect 8) (Goto 'block4466)))))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '()
   (list
    (cons
     'block4476
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Vector) Integer))
        '(Vector (Vector) Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Vector) Integer))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Vector) Integer))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Vector))))
          'Void))
        (Return (Var 'v))))))
    (cons
     'block4477
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4476)))
    (cons 'block4478 (Seq (collect 24) (Goto 'block4476)))
    (cons
     'block4480
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4426)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4428)
          (HasType
           ((HasType (Var 'tmp4427) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4426)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4429)
           (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
          ((HasType (Var 'tmp4429) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                             (Var
                                                                              'tmp4428)
                                                                             'Integer))))))))
    (cons
     'block4481
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4480)))
    (cons 'block4482 (Seq (collect 16) (Goto 'block4480)))
    (cons
     'block4484
     (Seq
      (Assign (Var 'x1) (HasType (Int 42) 'Integer))
      (Seq
       (Assign
        (Var 'tmp4419)
        (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
       (Seq
        (Assign
         (Var 'x0)
         (HasType
          ((HasType (Var 'tmp4419) '(Integer -> (Vector))) (HasType
                                                            (Int 20)
                                                            'Integer))
          '(Vector)))
        (Seq
         (Assign
          (Var 'tmp4420)
          (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
         (Seq
          (Assign
           (Var 'tmp4421)
           (HasType
            (Prim
             '+
             (list
              (HasType (Var 'tmp4420) 'Integer)
              (HasType (Int 24) 'Integer)))
            'Integer))
          (Seq
           (Assign
            (Var 'tmp4422)
            (HasType (GlobalValue 'fromspace_end) 'Integer))
           (Seq
            (Assign
             (Var 'tmp4479)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4421) 'Integer)
                (HasType (Var 'tmp4422) 'Integer)))
              'Boolean))
            (IfStmt
             (Prim 'eq? (list (Var 'tmp4479) (Bool #t)))
             (Goto 'block4477)
             (Goto 'block4478))))))))))
    (cons
     'block4485
     (Seq
      (Assign
       (Var 'tmp4427)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4402) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4423)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4424)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4423) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4425)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4483)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4424) 'Integer)
               (HasType (Var 'tmp4425) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4483) (Bool #t)))
            (Goto 'block4481)
            (Goto 'block4482)))))))))
    (cons
     'one4396start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4484)
      (Goto 'block4485)))))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '()
   (list
    (cons
     'block4486
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 3 (Vector (Vector) Integer (Vector (Vector) Integer)))
        '(Vector (Vector) Integer (Vector (Vector) Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector (Vector) Integer (Vector (Vector) Integer)))
           (HasType (Int 2) 'Integer)
           (HasType (Var 'x2) '(Vector (Vector) Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector (Vector) Integer (Vector (Vector) Integer)))
            (HasType (Int 1) 'Integer)
            (HasType (Var 'x1) 'Integer)))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector (Vector) Integer (Vector (Vector) Integer)))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) '(Vector))))
           'Void))
         (Return (Var 'v)))))))
    (cons
     'block4487
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4486)))
    (cons 'block4488 (Seq (collect 32) (Goto 'block4486)))
    (cons
     'block4490
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4438)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4440)
          (HasType
           ((HasType (Var 'tmp4439) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4438)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4441)
           (HasType
            (FunRef 'two4397)
            '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
          ((HasType
            (Var 'tmp4441)
            '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                                (Var
                                                                                 'tmp4440)
                                                                                'Integer))))))))
    (cons
     'block4491
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4490)))
    (cons
     'block4494
     (Seq
      (Assign
       (Var 'tmp4430)
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
      (Seq
       (Assign
        (Var 'x2)
        (HasType
         ((HasType (Var 'tmp4430) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                            (Int
                                                                             20)
                                                                            'Integer))
         '(Vector (Vector) Integer)))
       (Seq
        (Assign (Var 'x1) (HasType (Int 42) 'Integer))
        (Seq
         (Assign
          (Var 'tmp4431)
          (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
         (Seq
          (Assign
           (Var 'x0)
           (HasType
            ((HasType (Var 'tmp4431) '(Integer -> (Vector))) (HasType
                                                              (Int 20)
                                                              'Integer))
            '(Vector)))
          (Seq
           (Assign
            (Var 'tmp4432)
            (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
           (Seq
            (Assign
             (Var 'tmp4433)
             (HasType
              (Prim
               '+
               (list
                (HasType (Var 'tmp4432) 'Integer)
                (HasType (Int 32) 'Integer)))
              'Integer))
            (Seq
             (Assign
              (Var 'tmp4434)
              (HasType (GlobalValue 'fromspace_end) 'Integer))
             (Seq
              (Assign
               (Var 'tmp4489)
               (HasType
                (Prim
                 '<
                 (list
                  (HasType (Var 'tmp4433) 'Integer)
                  (HasType (Var 'tmp4434) 'Integer)))
                'Boolean))
              (IfStmt
               (Prim 'eq? (list (Var 'tmp4489) (Bool #t)))
               (Goto 'block4487)
               (Goto 'block4488))))))))))))
    (cons
     'block4495
     (Seq
      (Assign
       (Var 'tmp4439)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4403) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4435)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4436)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4435) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4437)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4493)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4436) 'Integer)
               (HasType (Var 'tmp4437) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4493) (Bool #t)))
            (Goto 'block4491)
            (Goto 'block4492)))))))))
    (cons
     'two4397start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4494)
      (Goto 'block4495)))
    (cons 'block4492 (Seq (collect 16) (Goto 'block4490)))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '()
   (list
    (cons
     'block4496
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 4 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer)))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))
           (HasType (Int 3) 'Integer)
           (HasType
            (Var 'x3)
            '(Vector (Vector) Integer (Vector (Vector) Integer)))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 2) 'Integer)
            (HasType (Var 'x2) '(Vector (Vector) Integer))))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer))))
             (HasType (Int 1) 'Integer)
             (HasType (Var 'x1) 'Integer)))
           'Void))
         (Seq
          (Assign
           (Var '_)
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))))
              (HasType (Int 0) 'Integer)
              (HasType (Var 'x0) '(Vector))))
            'Void))
          (Return (Var 'v))))))))
    (cons
     'block4497
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4496)))
    (cons 'block4498 (Seq (collect 40) (Goto 'block4496)))
    (cons
     'block4500
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4451)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4453)
          (HasType
           ((HasType (Var 'tmp4452) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4451)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4454)
           (HasType
            (FunRef 'three4398)
            '(Integer
              ->
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))))
          ((HasType
            (Var 'tmp4454)
            '(Integer
              ->
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))) (HasType
                                                                       (Var
                                                                        'tmp4453)
                                                                       'Integer))))))))
    (cons
     'block4501
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4500)))
    (cons 'block4502 (Seq (collect 16) (Goto 'block4500)))
    (cons
     'block4505
     (Seq
      (Assign
       (Var 'tmp4452)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4404) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4448)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4449)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4448) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4450)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4503)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4449) 'Integer)
               (HasType (Var 'tmp4450) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4503) (Bool #t)))
            (Goto 'block4501)
            (Goto 'block4502)))))))))
    (cons
     'block4504
     (Seq
      (Assign
       (Var 'tmp4442)
       (HasType
        (FunRef 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
      (Seq
       (Assign
        (Var 'x3)
        (HasType
         ((HasType
           (Var 'tmp4442)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                               (Int
                                                                                20)
                                                                               'Integer))
         '(Vector (Vector) Integer (Vector (Vector) Integer))))
       (Seq
        (Assign
         (Var 'tmp4443)
         (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
        (Seq
         (Assign
          (Var 'x2)
          (HasType
           ((HasType (Var 'tmp4443) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                              (Int
                                                                               20)
                                                                              'Integer))
           '(Vector (Vector) Integer)))
         (Seq
          (Assign (Var 'x1) (HasType (Int 42) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4444)
            (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
           (Seq
            (Assign
             (Var 'x0)
             (HasType
              ((HasType (Var 'tmp4444) '(Integer -> (Vector))) (HasType
                                                                (Int 20)
                                                                'Integer))
              '(Vector)))
            (Seq
             (Assign
              (Var 'tmp4445)
              (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
             (Seq
              (Assign
               (Var 'tmp4446)
               (HasType
                (Prim
                 '+
                 (list
                  (HasType (Var 'tmp4445) 'Integer)
                  (HasType (Int 40) 'Integer)))
                'Integer))
              (Seq
               (Assign
                (Var 'tmp4447)
                (HasType (GlobalValue 'fromspace_end) 'Integer))
               (Seq
                (Assign
                 (Var 'tmp4499)
                 (HasType
                  (Prim
                   '<
                   (list
                    (HasType (Var 'tmp4446) 'Integer)
                    (HasType (Var 'tmp4447) 'Integer)))
                  'Boolean))
                (IfStmt
                 (Prim 'eq? (list (Var 'tmp4499) (Bool #t)))
                 (Goto 'block4497)
                 (Goto 'block4498))))))))))))))
    (cons
     'three4398start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4504)
      (Goto 'block4505)))))
  (Def
   'main
   '()
   'Integer
   '()
   (list
    (cons
     'block4506
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 5 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)) (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer))
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer))))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer)))))
           (HasType (Int 4) 'Integer)
           (HasType
            (Var 'x4)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))
               (Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            (HasType (Int 3) 'Integer)
            (HasType
             (Var 'x3)
             '(Vector (Vector) Integer (Vector (Vector) Integer)))))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer))
                (Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer)))))
             (HasType (Int 2) 'Integer)
             (HasType (Var 'x2) '(Vector (Vector) Integer))))
           'Void))
         (Seq
          (Assign
           (Var '_)
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))
                 (Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer)))))
              (HasType (Int 1) 'Integer)
              (HasType (Var 'x1) 'Integer)))
            'Void))
          (Seq
           (Assign
            (Var '_)
            (HasType
             (Prim
              'vector-set!
              (list
               (HasType
                (Var 'v)
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 0) 'Integer)
               (HasType (Var 'x0) '(Vector))))
             'Void))
           (Seq
            (Assign
             (Var 'tmp4462)
             (HasType
              (Prim
               'vector-ref
               (list
                (HasType
                 (HasType
                  (HasType
                   (HasType
                    (HasType
                     (HasType
                      (HasType
                       (HasType
                        (HasType
                         (HasType
                          (HasType
                           (HasType
                            (HasType
                             (HasType
                              (Var 'v)
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)))))
                             '(Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer))
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)))))
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)))))
                           '(Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer))
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)))))
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector (Vector) Integer (Vector (Vector) Integer))
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)))))
                         '(Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector (Vector) Integer (Vector (Vector) Integer))
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)))))
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))
                          (Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)))))
                       '(Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer))
                         (Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer)))))
                      '(Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer))
                        (Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer)))))
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer))
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    '(Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer))
                      (Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))
                     (Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer)))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))
                    (Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer)))))
                 '(Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer))
                   (Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer)))))
                (HasType (Int 4) 'Integer)))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            (Seq
             (Assign
              (Var 'tmp4463)
              (HasType
               (Prim
                'vector-ref
                (list
                 (HasType
                  (Var 'tmp4462)
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))))
                 (HasType (Int 3) 'Integer)))
               '(Vector (Vector) Integer (Vector (Vector) Integer))))
             (Seq
              (Assign
               (Var 'tmp4464)
               (HasType
                (Prim
                 'vector-ref
                 (list
                  (HasType
                   (Var 'tmp4463)
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType (Int 2) 'Integer)))
                '(Vector (Vector) Integer)))
              (Return
               (Prim
                'vector-ref
                (list
                 (HasType (Var 'tmp4464) '(Vector (Vector) Integer))
                 (HasType (Int 1) 'Integer))))))))))))))
    (cons
     'block4507
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4506)))
    (cons 'block4508 (Seq (collect 48) (Goto 'block4506)))
    (cons
     'mainstart
     (Seq
      (Assign
       (Var 'tmp4455)
       (HasType
        (FunRef 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer))))))
      (Seq
       (Assign
        (Var 'x4)
        (HasType
         ((HasType
           (Var 'tmp4455)
           '(Integer
             ->
             (Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))) (HasType
                                                                      (Int 20)
                                                                      'Integer))
         '(Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (Seq
        (Assign
         (Var 'tmp4456)
         (HasType
          (FunRef 'two4397)
          '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
        (Seq
         (Assign
          (Var 'x3)
          (HasType
           ((HasType
             (Var 'tmp4456)
             '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                                 (Int
                                                                                  20)
                                                                                 'Integer))
           '(Vector (Vector) Integer (Vector (Vector) Integer))))
         (Seq
          (Assign
           (Var 'tmp4457)
           (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
          (Seq
           (Assign
            (Var 'x2)
            (HasType
             ((HasType (Var 'tmp4457) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                                (Int
                                                                                 20)
                                                                                'Integer))
             '(Vector (Vector) Integer)))
           (Seq
            (Assign (Var 'x1) (HasType (Int 42) 'Integer))
            (Seq
             (Assign
              (Var 'tmp4458)
              (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
             (Seq
              (Assign
               (Var 'x0)
               (HasType
                ((HasType (Var 'tmp4458) '(Integer -> (Vector))) (HasType
                                                                  (Int 20)
                                                                  'Integer))
                '(Vector)))
              (Seq
               (Assign
                (Var 'tmp4459)
                (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
               (Seq
                (Assign
                 (Var 'tmp4460)
                 (HasType
                  (Prim
                   '+
                   (list
                    (HasType (Var 'tmp4459) 'Integer)
                    (HasType (Int 48) 'Integer)))
                  'Integer))
                (Seq
                 (Assign
                  (Var 'tmp4461)
                  (HasType (GlobalValue 'fromspace_end) 'Integer))
                 (Seq
                  (Assign
                   (Var 'tmp4509)
                   (HasType
                    (Prim
                     '<
                     (list
                      (HasType (Var 'tmp4460) 'Integer)
                      (HasType (Var 'tmp4461) 'Integer)))
                    'Boolean))
                  (IfStmt
                   (Prim 'eq? (list (Var 'tmp4509) (Bool #t)))
                   (Goto 'block4507)
                   (Goto 'block4508))))))))))))))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: uncover locals @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (n4399 . Integer)
    (m4400 . Integer)
    (tmp4408 . Integer)
    (x4401 . Integer)
    (v Vector Integer)
    (_ . Void)
    (tmp4415 . Integer)
    (tmp4417 . Integer)
    (tmp4418 Integer -> (Vector))
    (tmp4417 . Integer)
    (_ . Void)
    (tmp4409 . Void)
    (tmp4410 . Integer)
    (tmp4411 . Integer)
    (tmp4469 . Boolean)
    (tmp4416 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4412 . Void)
    (tmp4413 . Integer)
    (tmp4414 . Integer)
    (tmp4473 . Boolean)
    (v Vector)
    (_ . Void)
    (x4402 . Integer)
    (v Vector (Vector) Integer)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4426 . Integer)
    (tmp4428 . Integer)
    (tmp4429 Integer -> (Vector (Vector) Integer))
    (tmp4428 . Integer)
    (_ . Void)
    (x1 . Integer)
    (tmp4419 Integer -> (Vector))
    (x0 Vector)
    (tmp4420 . Void)
    (tmp4421 . Integer)
    (tmp4422 . Integer)
    (tmp4479 . Boolean)
    (tmp4427 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4423 . Void)
    (tmp4424 . Integer)
    (tmp4425 . Integer)
    (tmp4483 . Boolean)
    (x4403 . Integer)
    (v Vector (Vector) Integer (Vector (Vector) Integer))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4438 . Integer)
    (tmp4440 . Integer)
    (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4440 . Integer)
    (_ . Void)
    (tmp4430 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4431 Integer -> (Vector))
    (x0 Vector)
    (tmp4432 . Void)
    (tmp4433 . Integer)
    (tmp4434 . Integer)
    (tmp4489 . Boolean)
    (tmp4439 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4435 . Void)
    (tmp4436 . Integer)
    (tmp4437 . Integer)
    (tmp4493 . Boolean)
    (x4404 . Integer)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4451 . Integer)
    (tmp4453 . Integer)
    (tmp4454
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (tmp4453 . Integer)
    (_ . Void)
    (tmp4452 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4448 . Void)
    (tmp4449 . Integer)
    (tmp4450 . Integer)
    (tmp4503 . Boolean)
    (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4443 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4444 Integer -> (Vector))
    (x0 Vector)
    (tmp4445 . Void)
    (tmp4446 . Integer)
    (tmp4447 . Integer)
    (tmp4499 . Boolean)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer))
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (tmp4462
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4464 Vector (Vector) Integer)
    (_ . Void)
    (tmp4455
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (x4
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4457 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4458 Integer -> (Vector))
    (x0 Vector)
    (tmp4459 . Void)
    (tmp4460 . Integer)
    (tmp4461 . Integer)
    (tmp4509 . Boolean)))
 (list
  (Def
   'minus4394
   '((n4399 : Integer) (m4400 : Integer))
   'Integer
   '((locals (n4399 . Integer) (m4400 . Integer) (tmp4408 . Integer)))
   (list
    (cons
     'minus4394start
     (Seq
      (Assign
       (Var 'tmp4408)
       (HasType (Prim '- (list (HasType (Var 'm4400) 'Integer))) 'Integer))
      (Return
       (Prim
        '+
        (list
         (HasType (Var 'n4399) 'Integer)
         (HasType (Var 'tmp4408) 'Integer))))))))
  (Def
   'zero4395
   '((x4401 : Integer))
   '(Vector)
   '((locals
      (x4401 . Integer)
      (v Vector Integer)
      (_ . Void)
      (tmp4415 . Integer)
      (tmp4417 . Integer)
      (tmp4418 Integer -> (Vector))
      (tmp4417 . Integer)
      (_ . Void)
      (tmp4409 . Void)
      (tmp4410 . Integer)
      (tmp4411 . Integer)
      (tmp4469 . Boolean)
      (tmp4416 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4412 . Void)
      (tmp4413 . Integer)
      (tmp4414 . Integer)
      (tmp4473 . Boolean)
      (v Vector)
      (_ . Void)))
   (list
    (cons
     'block4470
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4415)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4417)
          (HasType
           ((HasType (Var 'tmp4416) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4415)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4418)
           (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
          ((HasType (Var 'tmp4418) '(Integer -> (Vector))) (HasType
                                                            (Var 'tmp4417)
                                                            'Integer))))))))
    (cons
     'block4471
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4470)))
    (cons
     'block4474
     (Seq
      (Assign
       (Var 'tmp4409)
       (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
      (Seq
       (Assign
        (Var 'tmp4410)
        (HasType
         (Prim
          '+
          (list (HasType (Var 'tmp4409) 'Integer) (HasType (Int 8) 'Integer)))
         'Integer))
       (Seq
        (Assign (Var 'tmp4411) (HasType (GlobalValue 'fromspace_end) 'Integer))
        (Seq
         (Assign
          (Var 'tmp4469)
          (HasType
           (Prim
            '<
            (list
             (HasType (Var 'tmp4410) 'Integer)
             (HasType (Var 'tmp4411) 'Integer)))
           'Boolean))
         (IfStmt
          (Prim 'eq? (list (Var 'tmp4469) (Bool #t)))
          (Goto 'block4467)
          (Goto 'block4468)))))))
    (cons
     'block4475
     (Seq
      (Assign
       (Var 'tmp4416)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4401) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4412)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4413)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4412) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4414)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4473)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4413) 'Integer)
               (HasType (Var 'tmp4414) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4473) (Bool #t)))
            (Goto 'block4471)
            (Goto 'block4472)))))))))
    (cons 'block4472 (Seq (collect 16) (Goto 'block4470)))
    (cons
     'zero4395start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4401) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4474)
      (Goto 'block4475)))
    (cons
     'block4466
     (Seq
      (Assign (Var 'v) (HasType (allocate 0 (Vector)) '(Vector)))
      (Return (Var 'v))))
    (cons
     'block4467
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4466)))
    (cons 'block4468 (Seq (collect 8) (Goto 'block4466)))))
  (Def
   'one4396
   '((x4402 : Integer))
   '(Vector (Vector) Integer)
   '((locals
      (x4402 . Integer)
      (v Vector (Vector) Integer)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4426 . Integer)
      (tmp4428 . Integer)
      (tmp4429 Integer -> (Vector (Vector) Integer))
      (tmp4428 . Integer)
      (_ . Void)
      (x1 . Integer)
      (tmp4419 Integer -> (Vector))
      (x0 Vector)
      (tmp4420 . Void)
      (tmp4421 . Integer)
      (tmp4422 . Integer)
      (tmp4479 . Boolean)
      (tmp4427 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4423 . Void)
      (tmp4424 . Integer)
      (tmp4425 . Integer)
      (tmp4483 . Boolean)))
   (list
    (cons
     'block4476
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Vector) Integer))
        '(Vector (Vector) Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Vector) Integer))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Vector) Integer))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Vector))))
          'Void))
        (Return (Var 'v))))))
    (cons
     'block4477
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4476)))
    (cons 'block4478 (Seq (collect 24) (Goto 'block4476)))
    (cons
     'block4480
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4426)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4428)
          (HasType
           ((HasType (Var 'tmp4427) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4426)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4429)
           (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
          ((HasType (Var 'tmp4429) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                             (Var
                                                                              'tmp4428)
                                                                             'Integer))))))))
    (cons
     'block4481
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4480)))
    (cons 'block4482 (Seq (collect 16) (Goto 'block4480)))
    (cons
     'block4484
     (Seq
      (Assign (Var 'x1) (HasType (Int 42) 'Integer))
      (Seq
       (Assign
        (Var 'tmp4419)
        (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
       (Seq
        (Assign
         (Var 'x0)
         (HasType
          ((HasType (Var 'tmp4419) '(Integer -> (Vector))) (HasType
                                                            (Int 20)
                                                            'Integer))
          '(Vector)))
        (Seq
         (Assign
          (Var 'tmp4420)
          (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
         (Seq
          (Assign
           (Var 'tmp4421)
           (HasType
            (Prim
             '+
             (list
              (HasType (Var 'tmp4420) 'Integer)
              (HasType (Int 24) 'Integer)))
            'Integer))
          (Seq
           (Assign
            (Var 'tmp4422)
            (HasType (GlobalValue 'fromspace_end) 'Integer))
           (Seq
            (Assign
             (Var 'tmp4479)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4421) 'Integer)
                (HasType (Var 'tmp4422) 'Integer)))
              'Boolean))
            (IfStmt
             (Prim 'eq? (list (Var 'tmp4479) (Bool #t)))
             (Goto 'block4477)
             (Goto 'block4478))))))))))
    (cons
     'block4485
     (Seq
      (Assign
       (Var 'tmp4427)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4402) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4423)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4424)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4423) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4425)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4483)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4424) 'Integer)
               (HasType (Var 'tmp4425) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4483) (Bool #t)))
            (Goto 'block4481)
            (Goto 'block4482)))))))))
    (cons
     'one4396start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4402) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4484)
      (Goto 'block4485)))))
  (Def
   'two4397
   '((x4403 : Integer))
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '((locals
      (x4403 . Integer)
      (v Vector (Vector) Integer (Vector (Vector) Integer))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4438 . Integer)
      (tmp4440 . Integer)
      (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4440 . Integer)
      (_ . Void)
      (tmp4430 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4431 Integer -> (Vector))
      (x0 Vector)
      (tmp4432 . Void)
      (tmp4433 . Integer)
      (tmp4434 . Integer)
      (tmp4489 . Boolean)
      (tmp4439 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4435 . Void)
      (tmp4436 . Integer)
      (tmp4437 . Integer)
      (tmp4493 . Boolean)))
   (list
    (cons
     'block4486
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 3 (Vector (Vector) Integer (Vector (Vector) Integer)))
        '(Vector (Vector) Integer (Vector (Vector) Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector (Vector) Integer (Vector (Vector) Integer)))
           (HasType (Int 2) 'Integer)
           (HasType (Var 'x2) '(Vector (Vector) Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector (Vector) Integer (Vector (Vector) Integer)))
            (HasType (Int 1) 'Integer)
            (HasType (Var 'x1) 'Integer)))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector (Vector) Integer (Vector (Vector) Integer)))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) '(Vector))))
           'Void))
         (Return (Var 'v)))))))
    (cons
     'block4487
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4486)))
    (cons 'block4488 (Seq (collect 32) (Goto 'block4486)))
    (cons
     'block4490
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4438)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4440)
          (HasType
           ((HasType (Var 'tmp4439) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4438)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4441)
           (HasType
            (FunRef 'two4397)
            '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
          ((HasType
            (Var 'tmp4441)
            '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                                (Var
                                                                                 'tmp4440)
                                                                                'Integer))))))))
    (cons
     'block4491
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4490)))
    (cons
     'block4494
     (Seq
      (Assign
       (Var 'tmp4430)
       (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
      (Seq
       (Assign
        (Var 'x2)
        (HasType
         ((HasType (Var 'tmp4430) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                            (Int
                                                                             20)
                                                                            'Integer))
         '(Vector (Vector) Integer)))
       (Seq
        (Assign (Var 'x1) (HasType (Int 42) 'Integer))
        (Seq
         (Assign
          (Var 'tmp4431)
          (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
         (Seq
          (Assign
           (Var 'x0)
           (HasType
            ((HasType (Var 'tmp4431) '(Integer -> (Vector))) (HasType
                                                              (Int 20)
                                                              'Integer))
            '(Vector)))
          (Seq
           (Assign
            (Var 'tmp4432)
            (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
           (Seq
            (Assign
             (Var 'tmp4433)
             (HasType
              (Prim
               '+
               (list
                (HasType (Var 'tmp4432) 'Integer)
                (HasType (Int 32) 'Integer)))
              'Integer))
            (Seq
             (Assign
              (Var 'tmp4434)
              (HasType (GlobalValue 'fromspace_end) 'Integer))
             (Seq
              (Assign
               (Var 'tmp4489)
               (HasType
                (Prim
                 '<
                 (list
                  (HasType (Var 'tmp4433) 'Integer)
                  (HasType (Var 'tmp4434) 'Integer)))
                'Boolean))
              (IfStmt
               (Prim 'eq? (list (Var 'tmp4489) (Bool #t)))
               (Goto 'block4487)
               (Goto 'block4488))))))))))))
    (cons
     'block4495
     (Seq
      (Assign
       (Var 'tmp4439)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4403) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4435)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4436)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4435) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4437)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4493)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4436) 'Integer)
               (HasType (Var 'tmp4437) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4493) (Bool #t)))
            (Goto 'block4491)
            (Goto 'block4492)))))))))
    (cons
     'two4397start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4403) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4494)
      (Goto 'block4495)))
    (cons 'block4492 (Seq (collect 16) (Goto 'block4490)))))
  (Def
   'three4398
   '((x4404 : Integer))
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '((locals
      (x4404 . Integer)
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4451 . Integer)
      (tmp4453 . Integer)
      (tmp4454
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (tmp4453 . Integer)
      (_ . Void)
      (tmp4452 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4448 . Void)
      (tmp4449 . Integer)
      (tmp4450 . Integer)
      (tmp4503 . Boolean)
      (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4443 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4444 Integer -> (Vector))
      (x0 Vector)
      (tmp4445 . Void)
      (tmp4446 . Integer)
      (tmp4447 . Integer)
      (tmp4499 . Boolean)))
   (list
    (cons
     'block4496
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 4 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer)))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))
           (HasType (Int 3) 'Integer)
           (HasType
            (Var 'x3)
            '(Vector (Vector) Integer (Vector (Vector) Integer)))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))
            (HasType (Int 2) 'Integer)
            (HasType (Var 'x2) '(Vector (Vector) Integer))))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer))))
             (HasType (Int 1) 'Integer)
             (HasType (Var 'x1) 'Integer)))
           'Void))
         (Seq
          (Assign
           (Var '_)
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))))
              (HasType (Int 0) 'Integer)
              (HasType (Var 'x0) '(Vector))))
            'Void))
          (Return (Var 'v))))))))
    (cons
     'block4497
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4496)))
    (cons 'block4498 (Seq (collect 40) (Goto 'block4496)))
    (cons
     'block4500
     (Seq
      (Assign
       (Var 'v)
       (HasType (allocate 1 (Vector Integer)) '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector Integer))
           (HasType (Int 0) 'Integer)
           (HasType (Var 'x0) 'Integer)))
         'Void))
       (Seq
        (Assign
         (Var 'tmp4451)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType (Var 'v) '(Vector Integer))
                 '(Vector Integer))
                '(Vector Integer))
               '(Vector Integer))
              '(Vector Integer))
             '(Vector Integer))
            (HasType (Int 0) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4453)
          (HasType
           ((HasType (Var 'tmp4452) '(Integer Integer -> Integer)) (HasType
                                                                    (Var
                                                                     'tmp4451)
                                                                    'Integer) (HasType
                                                                               (Int
                                                                                1)
                                                                               'Integer))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4454)
           (HasType
            (FunRef 'three4398)
            '(Integer
              ->
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))))
          ((HasType
            (Var 'tmp4454)
            '(Integer
              ->
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))))) (HasType
                                                                       (Var
                                                                        'tmp4453)
                                                                       'Integer))))))))
    (cons
     'block4501
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4500)))
    (cons 'block4502 (Seq (collect 16) (Goto 'block4500)))
    (cons
     'block4505
     (Seq
      (Assign
       (Var 'tmp4452)
       (HasType (FunRef 'minus4394) '(Integer Integer -> Integer)))
      (Seq
       (Assign (Var 'x0) (HasType (Var 'x4404) 'Integer))
       (Seq
        (Assign
         (Var 'tmp4448)
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
        (Seq
         (Assign
          (Var 'tmp4449)
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4448) 'Integer)
             (HasType (Int 16) 'Integer)))
           'Integer))
         (Seq
          (Assign
           (Var 'tmp4450)
           (HasType (GlobalValue 'fromspace_end) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4503)
            (HasType
             (Prim
              '<
              (list
               (HasType (Var 'tmp4449) 'Integer)
               (HasType (Var 'tmp4450) 'Integer)))
             'Boolean))
           (IfStmt
            (Prim 'eq? (list (Var 'tmp4503) (Bool #t)))
            (Goto 'block4501)
            (Goto 'block4502)))))))))
    (cons
     'block4504
     (Seq
      (Assign
       (Var 'tmp4442)
       (HasType
        (FunRef 'two4397)
        '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
      (Seq
       (Assign
        (Var 'x3)
        (HasType
         ((HasType
           (Var 'tmp4442)
           '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                               (Int
                                                                                20)
                                                                               'Integer))
         '(Vector (Vector) Integer (Vector (Vector) Integer))))
       (Seq
        (Assign
         (Var 'tmp4443)
         (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
        (Seq
         (Assign
          (Var 'x2)
          (HasType
           ((HasType (Var 'tmp4443) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                              (Int
                                                                               20)
                                                                              'Integer))
           '(Vector (Vector) Integer)))
         (Seq
          (Assign (Var 'x1) (HasType (Int 42) 'Integer))
          (Seq
           (Assign
            (Var 'tmp4444)
            (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
           (Seq
            (Assign
             (Var 'x0)
             (HasType
              ((HasType (Var 'tmp4444) '(Integer -> (Vector))) (HasType
                                                                (Int 20)
                                                                'Integer))
              '(Vector)))
            (Seq
             (Assign
              (Var 'tmp4445)
              (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
             (Seq
              (Assign
               (Var 'tmp4446)
               (HasType
                (Prim
                 '+
                 (list
                  (HasType (Var 'tmp4445) 'Integer)
                  (HasType (Int 40) 'Integer)))
                'Integer))
              (Seq
               (Assign
                (Var 'tmp4447)
                (HasType (GlobalValue 'fromspace_end) 'Integer))
               (Seq
                (Assign
                 (Var 'tmp4499)
                 (HasType
                  (Prim
                   '<
                   (list
                    (HasType (Var 'tmp4446) 'Integer)
                    (HasType (Var 'tmp4447) 'Integer)))
                  'Boolean))
                (IfStmt
                 (Prim 'eq? (list (Var 'tmp4499) (Bool #t)))
                 (Goto 'block4497)
                 (Goto 'block4498))))))))))))))
    (cons
     'three4398start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'x4404) 'Integer) (HasType (Int 0) 'Integer)))
      (Goto 'block4504)
      (Goto 'block4505)))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer))
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (tmp4462
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4464 Vector (Vector) Integer)
      (_ . Void)
      (tmp4455
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (x4
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4457 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4458 Integer -> (Vector))
      (x0 Vector)
      (tmp4459 . Void)
      (tmp4460 . Integer)
      (tmp4461 . Integer)
      (tmp4509 . Boolean)))
   (list
    (cons
     'block4506
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 5 (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)) (Vector (Vector) Integer (Vector (Vector) Integer) (Vector (Vector) Integer (Vector (Vector) Integer)))))
        '(Vector
          (Vector)
          Integer
          (Vector (Vector) Integer)
          (Vector (Vector) Integer (Vector (Vector) Integer))
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer))))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType
            (Var 'v)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))
              (Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer)))))
           (HasType (Int 4) 'Integer)
           (HasType
            (Var 'x4)
            '(Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType
             (Var 'v)
             '(Vector
               (Vector)
               Integer
               (Vector (Vector) Integer)
               (Vector (Vector) Integer (Vector (Vector) Integer))
               (Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            (HasType (Int 3) 'Integer)
            (HasType
             (Var 'x3)
             '(Vector (Vector) Integer (Vector (Vector) Integer)))))
          'Void))
        (Seq
         (Assign
          (Var '_)
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType
              (Var 'v)
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer))
                (Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer)))))
             (HasType (Int 2) 'Integer)
             (HasType (Var 'x2) '(Vector (Vector) Integer))))
           'Void))
         (Seq
          (Assign
           (Var '_)
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector
                 (Vector)
                 Integer
                 (Vector (Vector) Integer)
                 (Vector (Vector) Integer (Vector (Vector) Integer))
                 (Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer)))))
              (HasType (Int 1) 'Integer)
              (HasType (Var 'x1) 'Integer)))
            'Void))
          (Seq
           (Assign
            (Var '_)
            (HasType
             (Prim
              'vector-set!
              (list
               (HasType
                (Var 'v)
                '(Vector
                  (Vector)
                  Integer
                  (Vector (Vector) Integer)
                  (Vector (Vector) Integer (Vector (Vector) Integer))
                  (Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer)))))
               (HasType (Int 0) 'Integer)
               (HasType (Var 'x0) '(Vector))))
             'Void))
           (Seq
            (Assign
             (Var 'tmp4462)
             (HasType
              (Prim
               'vector-ref
               (list
                (HasType
                 (HasType
                  (HasType
                   (HasType
                    (HasType
                     (HasType
                      (HasType
                       (HasType
                        (HasType
                         (HasType
                          (HasType
                           (HasType
                            (HasType
                             (HasType
                              (Var 'v)
                              '(Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer))
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)
                                 (Vector
                                  (Vector)
                                  Integer
                                  (Vector (Vector) Integer)))))
                             '(Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer))
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)
                                (Vector
                                 (Vector)
                                 Integer
                                 (Vector (Vector) Integer)))))
                            '(Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer))
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)
                               (Vector
                                (Vector)
                                Integer
                                (Vector (Vector) Integer)))))
                           '(Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer))
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)
                              (Vector
                               (Vector)
                               Integer
                               (Vector (Vector) Integer)))))
                          '(Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector (Vector) Integer (Vector (Vector) Integer))
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)
                             (Vector
                              (Vector)
                              Integer
                              (Vector (Vector) Integer)))))
                         '(Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector (Vector) Integer (Vector (Vector) Integer))
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)
                            (Vector
                             (Vector)
                             Integer
                             (Vector (Vector) Integer)))))
                        '(Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer))
                          (Vector
                           (Vector)
                           Integer
                           (Vector (Vector) Integer)
                           (Vector
                            (Vector)
                            Integer
                            (Vector (Vector) Integer)))))
                       '(Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer))
                         (Vector
                          (Vector)
                          Integer
                          (Vector (Vector) Integer)
                          (Vector (Vector) Integer (Vector (Vector) Integer)))))
                      '(Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer))
                        (Vector
                         (Vector)
                         Integer
                         (Vector (Vector) Integer)
                         (Vector (Vector) Integer (Vector (Vector) Integer)))))
                     '(Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer))
                       (Vector
                        (Vector)
                        Integer
                        (Vector (Vector) Integer)
                        (Vector (Vector) Integer (Vector (Vector) Integer)))))
                    '(Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer))
                      (Vector
                       (Vector)
                       Integer
                       (Vector (Vector) Integer)
                       (Vector (Vector) Integer (Vector (Vector) Integer)))))
                   '(Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer))
                     (Vector
                      (Vector)
                      Integer
                      (Vector (Vector) Integer)
                      (Vector (Vector) Integer (Vector (Vector) Integer)))))
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))
                    (Vector
                     (Vector)
                     Integer
                     (Vector (Vector) Integer)
                     (Vector (Vector) Integer (Vector (Vector) Integer)))))
                 '(Vector
                   (Vector)
                   Integer
                   (Vector (Vector) Integer)
                   (Vector (Vector) Integer (Vector (Vector) Integer))
                   (Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer)))))
                (HasType (Int 4) 'Integer)))
              '(Vector
                (Vector)
                Integer
                (Vector (Vector) Integer)
                (Vector (Vector) Integer (Vector (Vector) Integer)))))
            (Seq
             (Assign
              (Var 'tmp4463)
              (HasType
               (Prim
                'vector-ref
                (list
                 (HasType
                  (Var 'tmp4462)
                  '(Vector
                    (Vector)
                    Integer
                    (Vector (Vector) Integer)
                    (Vector (Vector) Integer (Vector (Vector) Integer))))
                 (HasType (Int 3) 'Integer)))
               '(Vector (Vector) Integer (Vector (Vector) Integer))))
             (Seq
              (Assign
               (Var 'tmp4464)
               (HasType
                (Prim
                 'vector-ref
                 (list
                  (HasType
                   (Var 'tmp4463)
                   '(Vector (Vector) Integer (Vector (Vector) Integer)))
                  (HasType (Int 2) 'Integer)))
                '(Vector (Vector) Integer)))
              (Return
               (Prim
                'vector-ref
                (list
                 (HasType (Var 'tmp4464) '(Vector (Vector) Integer))
                 (HasType (Int 1) 'Integer))))))))))))))
    (cons
     'block4507
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4506)))
    (cons 'block4508 (Seq (collect 48) (Goto 'block4506)))
    (cons
     'mainstart
     (Seq
      (Assign
       (Var 'tmp4455)
       (HasType
        (FunRef 'three4398)
        '(Integer
          ->
          (Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer))))))
      (Seq
       (Assign
        (Var 'x4)
        (HasType
         ((HasType
           (Var 'tmp4455)
           '(Integer
             ->
             (Vector
              (Vector)
              Integer
              (Vector (Vector) Integer)
              (Vector (Vector) Integer (Vector (Vector) Integer))))) (HasType
                                                                      (Int 20)
                                                                      'Integer))
         '(Vector
           (Vector)
           Integer
           (Vector (Vector) Integer)
           (Vector (Vector) Integer (Vector (Vector) Integer)))))
       (Seq
        (Assign
         (Var 'tmp4456)
         (HasType
          (FunRef 'two4397)
          '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))))
        (Seq
         (Assign
          (Var 'x3)
          (HasType
           ((HasType
             (Var 'tmp4456)
             '(Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))) (HasType
                                                                                 (Int
                                                                                  20)
                                                                                 'Integer))
           '(Vector (Vector) Integer (Vector (Vector) Integer))))
         (Seq
          (Assign
           (Var 'tmp4457)
           (HasType (FunRef 'one4396) '(Integer -> (Vector (Vector) Integer))))
          (Seq
           (Assign
            (Var 'x2)
            (HasType
             ((HasType (Var 'tmp4457) '(Integer -> (Vector (Vector) Integer))) (HasType
                                                                                (Int
                                                                                 20)
                                                                                'Integer))
             '(Vector (Vector) Integer)))
           (Seq
            (Assign (Var 'x1) (HasType (Int 42) 'Integer))
            (Seq
             (Assign
              (Var 'tmp4458)
              (HasType (FunRef 'zero4395) '(Integer -> (Vector))))
             (Seq
              (Assign
               (Var 'x0)
               (HasType
                ((HasType (Var 'tmp4458) '(Integer -> (Vector))) (HasType
                                                                  (Int 20)
                                                                  'Integer))
                '(Vector)))
              (Seq
               (Assign
                (Var 'tmp4459)
                (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
               (Seq
                (Assign
                 (Var 'tmp4460)
                 (HasType
                  (Prim
                   '+
                   (list
                    (HasType (Var 'tmp4459) 'Integer)
                    (HasType (Int 48) 'Integer)))
                  'Integer))
                (Seq
                 (Assign
                  (Var 'tmp4461)
                  (HasType (GlobalValue 'fromspace_end) 'Integer))
                 (Seq
                  (Assign
                   (Var 'tmp4509)
                   (HasType
                    (Prim
                     '<
                     (list
                      (HasType (Var 'tmp4460) 'Integer)
                      (HasType (Var 'tmp4461) 'Integer)))
                    'Boolean))
                  (IfStmt
                   (Prim 'eq? (list (Var 'tmp4509) (Bool #t)))
                   (Goto 'block4507)
                   (Goto 'block4508))))))))))))))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: instruction selection @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (n4399 . Integer)
    (m4400 . Integer)
    (tmp4408 . Integer)
    (x4401 . Integer)
    (v Vector Integer)
    (_ . Void)
    (tmp4415 . Integer)
    (tmp4417 . Integer)
    (tmp4418 Integer -> (Vector))
    (tmp4417 . Integer)
    (_ . Void)
    (tmp4409 . Void)
    (tmp4410 . Integer)
    (tmp4411 . Integer)
    (tmp4469 . Boolean)
    (tmp4416 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4412 . Void)
    (tmp4413 . Integer)
    (tmp4414 . Integer)
    (tmp4473 . Boolean)
    (v Vector)
    (_ . Void)
    (x4402 . Integer)
    (v Vector (Vector) Integer)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4426 . Integer)
    (tmp4428 . Integer)
    (tmp4429 Integer -> (Vector (Vector) Integer))
    (tmp4428 . Integer)
    (_ . Void)
    (x1 . Integer)
    (tmp4419 Integer -> (Vector))
    (x0 Vector)
    (tmp4420 . Void)
    (tmp4421 . Integer)
    (tmp4422 . Integer)
    (tmp4479 . Boolean)
    (tmp4427 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4423 . Void)
    (tmp4424 . Integer)
    (tmp4425 . Integer)
    (tmp4483 . Boolean)
    (x4403 . Integer)
    (v Vector (Vector) Integer (Vector (Vector) Integer))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4438 . Integer)
    (tmp4440 . Integer)
    (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4440 . Integer)
    (_ . Void)
    (tmp4430 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4431 Integer -> (Vector))
    (x0 Vector)
    (tmp4432 . Void)
    (tmp4433 . Integer)
    (tmp4434 . Integer)
    (tmp4489 . Boolean)
    (tmp4439 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4435 . Void)
    (tmp4436 . Integer)
    (tmp4437 . Integer)
    (tmp4493 . Boolean)
    (x4404 . Integer)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4451 . Integer)
    (tmp4453 . Integer)
    (tmp4454
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (tmp4453 . Integer)
    (_ . Void)
    (tmp4452 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4448 . Void)
    (tmp4449 . Integer)
    (tmp4450 . Integer)
    (tmp4503 . Boolean)
    (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4443 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4444 Integer -> (Vector))
    (x0 Vector)
    (tmp4445 . Void)
    (tmp4446 . Integer)
    (tmp4447 . Integer)
    (tmp4499 . Boolean)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer))
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (tmp4462
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4464 Vector (Vector) Integer)
    (_ . Void)
    (tmp4455
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (x4
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4457 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4458 Integer -> (Vector))
    (x0 Vector)
    (tmp4459 . Void)
    (tmp4460 . Integer)
    (tmp4461 . Integer)
    (tmp4509 . Boolean)))
 (list
  (Def
   'minus4394
   '()
   'Integer
   '((locals (n4399 . Integer) (m4400 . Integer) (tmp4408 . Integer))
     (num-params . 2))
   (list
    (cons
     'minus4394start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4399)))
       (Instr 'movq (list (Reg 'rdx) (Var 'm4400)))
       (Instr 'movq (list (Var 'm4400) (Var 'tmp4408)))
       (Instr 'negq (list (Var 'tmp4408)))
       (Instr 'movq (list (Var 'n4399) (Reg 'rax)))
       (Instr 'addq (list (Var 'tmp4408) (Reg 'rax)))
       (Jmp 'minus4394conclusion))))))
  (Def
   'zero4395
   '()
   '(Vector)
   '((locals
      (x4401 . Integer)
      (v Vector Integer)
      (_ . Void)
      (tmp4415 . Integer)
      (tmp4417 . Integer)
      (tmp4418 Integer -> (Vector))
      (tmp4417 . Integer)
      (_ . Void)
      (tmp4409 . Void)
      (tmp4410 . Integer)
      (tmp4411 . Integer)
      (tmp4469 . Boolean)
      (tmp4416 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4412 . Void)
      (tmp4413 . Integer)
      (tmp4414 . Integer)
      (tmp4473 . Boolean)
      (v Vector)
      (_ . Void))
     (num-params . 1))
   (list
    (cons
     'block4470
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4415)))
       (Instr 'movq (list (Var 'tmp4415) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4416)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4417)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4418)))
       (Instr 'movq (list (Var 'tmp4417) (Reg 'rcx)))
       (TailJmp (Var 'tmp4418)))))
    (cons
     'block4471
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4470))))
    (cons
     'block4474
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4409)))
       (Instr 'movq (list (Var 'tmp4409) (Var 'tmp4410)))
       (Instr 'addq (list (Imm 8) (Var 'tmp4410)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4411)))
       (Instr 'cmpq (list (Var 'tmp4411) (Var 'tmp4410)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4469)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4469)))
       (JmpIf 'e 'block4467)
       (Jmp 'block4468))))
    (cons
     'block4475
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4416)))
       (Instr 'movq (list (Var 'x4401) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4412)))
       (Instr 'movq (list (Var 'tmp4412) (Var 'tmp4413)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4413)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4414)))
       (Instr 'cmpq (list (Var 'tmp4414) (Var 'tmp4413)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4473)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4473)))
       (JmpIf 'e 'block4471)
       (Jmp 'block4472))))
    (cons
     'block4472
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4470))))
    (cons
     'zero4395start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4401)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4401)))
       (JmpIf 'e 'block4474)
       (Jmp 'block4475))))
    (cons
     'block4466
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 8) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'zero4395conclusion))))
    (cons
     'block4467
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4466))))
    (cons
     'block4468
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 8) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4466))))))
  (Def
   'one4396
   '()
   '(Vector (Vector) Integer)
   '((locals
      (x4402 . Integer)
      (v Vector (Vector) Integer)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4426 . Integer)
      (tmp4428 . Integer)
      (tmp4429 Integer -> (Vector (Vector) Integer))
      (tmp4428 . Integer)
      (_ . Void)
      (x1 . Integer)
      (tmp4419 Integer -> (Vector))
      (x0 Vector)
      (tmp4420 . Void)
      (tmp4421 . Integer)
      (tmp4422 . Integer)
      (tmp4479 . Boolean)
      (tmp4427 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4423 . Void)
      (tmp4424 . Integer)
      (tmp4425 . Integer)
      (tmp4483 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4476
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 133) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'one4396conclusion))))
    (cons
     'block4477
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4476))))
    (cons
     'block4478
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4476))))
    (cons
     'block4480
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4426)))
       (Instr 'movq (list (Var 'tmp4426) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4427)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4428)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4429)))
       (Instr 'movq (list (Var 'tmp4428) (Reg 'rcx)))
       (TailJmp (Var 'tmp4429)))))
    (cons
     'block4481
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4480))))
    (cons
     'block4482
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4480))))
    (cons
     'block4484
     (Block
      '()
      (list
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4419)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4419)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4420)))
       (Instr 'movq (list (Var 'tmp4420) (Var 'tmp4421)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4421)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4422)))
       (Instr 'cmpq (list (Var 'tmp4422) (Var 'tmp4421)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4479)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4479)))
       (JmpIf 'e 'block4477)
       (Jmp 'block4478))))
    (cons
     'block4485
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4427)))
       (Instr 'movq (list (Var 'x4402) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4423)))
       (Instr 'movq (list (Var 'tmp4423) (Var 'tmp4424)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4424)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4425)))
       (Instr 'cmpq (list (Var 'tmp4425) (Var 'tmp4424)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4483)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4483)))
       (JmpIf 'e 'block4481)
       (Jmp 'block4482))))
    (cons
     'one4396start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4402)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4402)))
       (JmpIf 'e 'block4484)
       (Jmp 'block4485))))))
  (Def
   'two4397
   '()
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '((locals
      (x4403 . Integer)
      (v Vector (Vector) Integer (Vector (Vector) Integer))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4438 . Integer)
      (tmp4440 . Integer)
      (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4440 . Integer)
      (_ . Void)
      (tmp4430 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4431 Integer -> (Vector))
      (x0 Vector)
      (tmp4432 . Void)
      (tmp4433 . Integer)
      (tmp4434 . Integer)
      (tmp4489 . Boolean)
      (tmp4439 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4435 . Void)
      (tmp4436 . Integer)
      (tmp4437 . Integer)
      (tmp4493 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4486
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 647) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'two4397conclusion))))
    (cons
     'block4487
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4486))))
    (cons
     'block4488
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 32) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4486))))
    (cons
     'block4490
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4438)))
       (Instr 'movq (list (Var 'tmp4438) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4439)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4440)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4441)))
       (Instr 'movq (list (Var 'tmp4440) (Reg 'rcx)))
       (TailJmp (Var 'tmp4441)))))
    (cons
     'block4491
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4490))))
    (cons
     'block4494
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4430)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4430)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4431)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4431)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4432)))
       (Instr 'movq (list (Var 'tmp4432) (Var 'tmp4433)))
       (Instr 'addq (list (Imm 32) (Var 'tmp4433)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4434)))
       (Instr 'cmpq (list (Var 'tmp4434) (Var 'tmp4433)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4489)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4489)))
       (JmpIf 'e 'block4487)
       (Jmp 'block4488))))
    (cons
     'block4495
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4439)))
       (Instr 'movq (list (Var 'x4403) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4435)))
       (Instr 'movq (list (Var 'tmp4435) (Var 'tmp4436)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4436)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4437)))
       (Instr 'cmpq (list (Var 'tmp4437) (Var 'tmp4436)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4493)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4493)))
       (JmpIf 'e 'block4491)
       (Jmp 'block4492))))
    (cons
     'two4397start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4403)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4403)))
       (JmpIf 'e 'block4494)
       (Jmp 'block4495))))
    (cons
     'block4492
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4490))))))
  (Def
   'three4398
   '()
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '((locals
      (x4404 . Integer)
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4451 . Integer)
      (tmp4453 . Integer)
      (tmp4454
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (tmp4453 . Integer)
      (_ . Void)
      (tmp4452 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4448 . Void)
      (tmp4449 . Integer)
      (tmp4450 . Integer)
      (tmp4503 . Boolean)
      (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4443 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4444 Integer -> (Vector))
      (x0 Vector)
      (tmp4445 . Void)
      (tmp4446 . Integer)
      (tmp4447 . Integer)
      (tmp4499 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4496
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1673) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'three4398conclusion))))
    (cons
     'block4497
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4496))))
    (cons
     'block4498
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 40) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4496))))
    (cons
     'block4500
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4451)))
       (Instr 'movq (list (Var 'tmp4451) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4452)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4453)))
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4454)))
       (Instr 'movq (list (Var 'tmp4453) (Reg 'rcx)))
       (TailJmp (Var 'tmp4454)))))
    (cons
     'block4501
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4500))))
    (cons
     'block4502
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4500))))
    (cons
     'block4505
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4452)))
       (Instr 'movq (list (Var 'x4404) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4448)))
       (Instr 'movq (list (Var 'tmp4448) (Var 'tmp4449)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4449)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4450)))
       (Instr 'cmpq (list (Var 'tmp4450) (Var 'tmp4449)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4503)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4503)))
       (JmpIf 'e 'block4501)
       (Jmp 'block4502))))
    (cons
     'block4504
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4442)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4442)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4443)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4443)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4444)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4444)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4445)))
       (Instr 'movq (list (Var 'tmp4445) (Var 'tmp4446)))
       (Instr 'addq (list (Imm 40) (Var 'tmp4446)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4447)))
       (Instr 'cmpq (list (Var 'tmp4447) (Var 'tmp4446)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4499)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4499)))
       (JmpIf 'e 'block4497)
       (Jmp 'block4498))))
    (cons
     'three4398start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4404)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4404)))
       (JmpIf 'e 'block4504)
       (Jmp 'block4505))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer))
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (tmp4462
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4464 Vector (Vector) Integer)
      (_ . Void)
      (tmp4455
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (x4
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4457 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4458 Integer -> (Vector))
      (x0 Vector)
      (tmp4459 . Void)
      (tmp4460 . Integer)
      (tmp4461 . Integer)
      (tmp4509 . Boolean))
     (num-params . 0))
   (list
    (cons
     'block4506
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 48) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3723) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x4) (Deref 'r11 40)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 40) (Var 'tmp4462)))
       (Instr 'movq (list (Var 'tmp4462) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 32) (Var 'tmp4463)))
       (Instr 'movq (list (Var 'tmp4463) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 24) (Var 'tmp4464)))
       (Instr 'movq (list (Var 'tmp4464) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
       (Jmp 'mainconclusion))))
    (cons
     'block4507
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4506))))
    (cons
     'block4508
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 48) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4506))))
    (cons
     'mainstart
     (Block
      '()
      (list
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4455)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4455)
       (Instr 'movq (list (Reg 'rax) (Var 'x4)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4456)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4456)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4457)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4457)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4458)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4458)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4459)))
       (Instr 'movq (list (Var 'tmp4459) (Var 'tmp4460)))
       (Instr 'addq (list (Imm 48) (Var 'tmp4460)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4461)))
       (Instr 'cmpq (list (Var 'tmp4461) (Var 'tmp4460)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4509)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4509)))
       (JmpIf 'e 'block4507)
       (Jmp 'block4508))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: uncover live @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (n4399 . Integer)
    (m4400 . Integer)
    (tmp4408 . Integer)
    (x4401 . Integer)
    (v Vector Integer)
    (_ . Void)
    (tmp4415 . Integer)
    (tmp4417 . Integer)
    (tmp4418 Integer -> (Vector))
    (tmp4417 . Integer)
    (_ . Void)
    (tmp4409 . Void)
    (tmp4410 . Integer)
    (tmp4411 . Integer)
    (tmp4469 . Boolean)
    (tmp4416 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4412 . Void)
    (tmp4413 . Integer)
    (tmp4414 . Integer)
    (tmp4473 . Boolean)
    (v Vector)
    (_ . Void)
    (x4402 . Integer)
    (v Vector (Vector) Integer)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4426 . Integer)
    (tmp4428 . Integer)
    (tmp4429 Integer -> (Vector (Vector) Integer))
    (tmp4428 . Integer)
    (_ . Void)
    (x1 . Integer)
    (tmp4419 Integer -> (Vector))
    (x0 Vector)
    (tmp4420 . Void)
    (tmp4421 . Integer)
    (tmp4422 . Integer)
    (tmp4479 . Boolean)
    (tmp4427 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4423 . Void)
    (tmp4424 . Integer)
    (tmp4425 . Integer)
    (tmp4483 . Boolean)
    (x4403 . Integer)
    (v Vector (Vector) Integer (Vector (Vector) Integer))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4438 . Integer)
    (tmp4440 . Integer)
    (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4440 . Integer)
    (_ . Void)
    (tmp4430 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4431 Integer -> (Vector))
    (x0 Vector)
    (tmp4432 . Void)
    (tmp4433 . Integer)
    (tmp4434 . Integer)
    (tmp4489 . Boolean)
    (tmp4439 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4435 . Void)
    (tmp4436 . Integer)
    (tmp4437 . Integer)
    (tmp4493 . Boolean)
    (x4404 . Integer)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4451 . Integer)
    (tmp4453 . Integer)
    (tmp4454
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (tmp4453 . Integer)
    (_ . Void)
    (tmp4452 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4448 . Void)
    (tmp4449 . Integer)
    (tmp4450 . Integer)
    (tmp4503 . Boolean)
    (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4443 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4444 Integer -> (Vector))
    (x0 Vector)
    (tmp4445 . Void)
    (tmp4446 . Integer)
    (tmp4447 . Integer)
    (tmp4499 . Boolean)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer))
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (tmp4462
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4464 Vector (Vector) Integer)
    (_ . Void)
    (tmp4455
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (x4
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4457 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4458 Integer -> (Vector))
    (x0 Vector)
    (tmp4459 . Void)
    (tmp4460 . Integer)
    (tmp4461 . Integer)
    (tmp4509 . Boolean)))
 (list
  (Def
   'minus4394
   '()
   'Integer
   '((locals (n4399 . Integer) (m4400 . Integer) (tmp4408 . Integer))
     (num-params . 2))
   (list
    (cons
     'minus4394start
     (Block
      (list
       (set 'rcx 'rdx)
       (set 'n4399 'rdx)
       (set 'm4400 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4399)))
       (Instr 'movq (list (Reg 'rdx) (Var 'm4400)))
       (Instr 'movq (list (Var 'm4400) (Var 'tmp4408)))
       (Instr 'negq (list (Var 'tmp4408)))
       (Instr 'movq (list (Var 'n4399) (Reg 'rax)))
       (Instr 'addq (list (Var 'tmp4408) (Reg 'rax)))
       (Jmp 'minus4394conclusion))))))
  (Def
   'zero4395
   '()
   '(Vector)
   '((locals
      (x4401 . Integer)
      (v Vector Integer)
      (_ . Void)
      (tmp4415 . Integer)
      (tmp4417 . Integer)
      (tmp4418 Integer -> (Vector))
      (tmp4417 . Integer)
      (_ . Void)
      (tmp4409 . Void)
      (tmp4410 . Integer)
      (tmp4411 . Integer)
      (tmp4469 . Boolean)
      (tmp4416 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4412 . Void)
      (tmp4413 . Integer)
      (tmp4414 . Integer)
      (tmp4473 . Boolean)
      (v Vector)
      (_ . Void))
     (num-params . 1))
   (list
    (cons
     'block4466
     (Block
      (list (set) (set 'v) (set 'v) (set 'v) (set 'v) (set) (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 8) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'zero4395conclusion))))
    (cons
     'block4468
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 8) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4466))))
    (cons
     'block4467
     (Block
      (list (set) (set) (set))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4466))))
    (cons
     'block4474
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4409 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'tmp4411 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4469 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4409)))
       (Instr 'movq (list (Var 'tmp4409) (Var 'tmp4410)))
       (Instr 'addq (list (Imm 8) (Var 'tmp4410)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4411)))
       (Instr 'cmpq (list (Var 'tmp4411) (Var 'tmp4410)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4469)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4469)))
       (JmpIf 'e 'block4467)
       (Jmp 'block4468))))
    (cons
     'block4470
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'tmp4415 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'tmp4418 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4418 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4415)))
       (Instr 'movq (list (Var 'tmp4415) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4416)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4417)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4418)))
       (Instr 'movq (list (Var 'tmp4417) (Reg 'rcx)))
       (TailJmp (Var 'tmp4418)))))
    (cons
     'block4472
     (Block
      (list
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4470))))
    (cons
     'block4471
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4470))))
    (cons
     'block4475
     (Block
      (list
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x4401
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'tmp4412
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'tmp4414
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x0
        'tmp4473
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4416)))
       (Instr 'movq (list (Var 'x4401) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4412)))
       (Instr 'movq (list (Var 'tmp4412) (Var 'tmp4413)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4413)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4414)))
       (Instr 'cmpq (list (Var 'tmp4414) (Var 'tmp4413)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4473)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4473)))
       (JmpIf 'e 'block4471)
       (Jmp 'block4472))))
    (cons
     'zero4395start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4401)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4401)))
       (JmpIf 'e 'block4474)
       (Jmp 'block4475))))))
  (Def
   'one4396
   '()
   '(Vector (Vector) Integer)
   '((locals
      (x4402 . Integer)
      (v Vector (Vector) Integer)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4426 . Integer)
      (tmp4428 . Integer)
      (tmp4429 Integer -> (Vector (Vector) Integer))
      (tmp4428 . Integer)
      (_ . Void)
      (x1 . Integer)
      (tmp4419 Integer -> (Vector))
      (x0 Vector)
      (tmp4420 . Void)
      (tmp4421 . Integer)
      (tmp4422 . Integer)
      (tmp4479 . Boolean)
      (tmp4427 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4423 . Void)
      (tmp4424 . Integer)
      (tmp4425 . Integer)
      (tmp4483 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4480
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'tmp4426 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4426)))
       (Instr 'movq (list (Var 'tmp4426) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4427)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4428)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4429)))
       (Instr 'movq (list (Var 'tmp4428) (Reg 'rcx)))
       (TailJmp (Var 'tmp4429)))))
    (cons
     'block4482
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4480))))
    (cons
     'block4481
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4480))))
    (cons
     'block4485
     (Block
      (list
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4402
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4423
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'tmp4425
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4483
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4427)))
       (Instr 'movq (list (Var 'x4402) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4423)))
       (Instr 'movq (list (Var 'tmp4423) (Var 'tmp4424)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4424)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4425)))
       (Instr 'cmpq (list (Var 'tmp4425) (Var 'tmp4424)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4483)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4483)))
       (JmpIf 'e 'block4481)
       (Jmp 'block4482))))
    (cons
     'block4476
     (Block
      (list
       (set 'x0 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 133) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'one4396conclusion))))
    (cons
     'block4478
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x1)
       (set 'x0 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4476))))
    (cons
     'block4477
     (Block
      (list (set 'x0 'x1) (set 'x0 'x1) (set 'x0 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4476))))
    (cons
     'block4484
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4420 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4421
        'r8
        'tmp4422
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4479 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4419)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4419)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4420)))
       (Instr 'movq (list (Var 'tmp4420) (Var 'tmp4421)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4421)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4422)))
       (Instr 'cmpq (list (Var 'tmp4422) (Var 'tmp4421)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4479)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4479)))
       (JmpIf 'e 'block4477)
       (Jmp 'block4478))))
    (cons
     'one4396start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4402)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4402)))
       (JmpIf 'e 'block4484)
       (Jmp 'block4485))))))
  (Def
   'two4397
   '()
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '((locals
      (x4403 . Integer)
      (v Vector (Vector) Integer (Vector (Vector) Integer))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4438 . Integer)
      (tmp4440 . Integer)
      (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4440 . Integer)
      (_ . Void)
      (tmp4430 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4431 Integer -> (Vector))
      (x0 Vector)
      (tmp4432 . Void)
      (tmp4433 . Integer)
      (tmp4434 . Integer)
      (tmp4489 . Boolean)
      (tmp4439 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4435 . Void)
      (tmp4436 . Integer)
      (tmp4437 . Integer)
      (tmp4493 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4490
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4438 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'tmp4441 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4441 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4438)))
       (Instr 'movq (list (Var 'tmp4438) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4439)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4440)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4441)))
       (Instr 'movq (list (Var 'tmp4440) (Reg 'rcx)))
       (TailJmp (Var 'tmp4441)))))
    (cons
     'block4492
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4490))))
    (cons
     'block4491
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4490))))
    (cons
     'block4495
     (Block
      (list
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4403
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4435
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'tmp4437
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4493
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4439)))
       (Instr 'movq (list (Var 'x4403) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4435)))
       (Instr 'movq (list (Var 'tmp4435) (Var 'tmp4436)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4436)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4437)))
       (Instr 'cmpq (list (Var 'tmp4437) (Var 'tmp4436)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4493)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4493)))
       (JmpIf 'e 'block4491)
       (Jmp 'block4492))))
    (cons
     'block4486
     (Block
      (list
       (set 'x0 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 647) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'two4397conclusion))))
    (cons
     'block4488
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x2 'x1)
       (set 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 32) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4486))))
    (cons
     'block4487
     (Block
      (list (set 'x0 'x2 'x1) (set 'x0 'x2 'x1) (set 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4486))))
    (cons
     'block4494
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'tmp4431 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4431
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4432 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'x2
        'tmp4433
        'r8
        'tmp4434
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4489 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4430)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4430)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4431)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4431)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4432)))
       (Instr 'movq (list (Var 'tmp4432) (Var 'tmp4433)))
       (Instr 'addq (list (Imm 32) (Var 'tmp4433)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4434)))
       (Instr 'cmpq (list (Var 'tmp4434) (Var 'tmp4433)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4489)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4489)))
       (JmpIf 'e 'block4487)
       (Jmp 'block4488))))
    (cons
     'two4397start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4403)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4403)))
       (JmpIf 'e 'block4494)
       (Jmp 'block4495))))))
  (Def
   'three4398
   '()
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '((locals
      (x4404 . Integer)
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4451 . Integer)
      (tmp4453 . Integer)
      (tmp4454
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (tmp4453 . Integer)
      (_ . Void)
      (tmp4452 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4448 . Void)
      (tmp4449 . Integer)
      (tmp4450 . Integer)
      (tmp4503 . Boolean)
      (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4443 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4444 Integer -> (Vector))
      (x0 Vector)
      (tmp4445 . Void)
      (tmp4446 . Integer)
      (tmp4447 . Integer)
      (tmp4499 . Boolean))
     (num-params . 1))
   (list
    (cons
     'block4500
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'tmp4451 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4451)))
       (Instr 'movq (list (Var 'tmp4451) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4452)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4453)))
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4454)))
       (Instr 'movq (list (Var 'tmp4453) (Reg 'rcx)))
       (TailJmp (Var 'tmp4454)))))
    (cons
     'block4502
     (Block
      (list
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4500))))
    (cons
     'block4501
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4500))))
    (cons
     'block4505
     (Block
      (list
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'rcx
        'r14
        'r10
        'x4404
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4448
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'tmp4450
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4503
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4452)))
       (Instr 'movq (list (Var 'x4404) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4448)))
       (Instr 'movq (list (Var 'tmp4448) (Var 'tmp4449)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4449)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4450)))
       (Instr 'cmpq (list (Var 'tmp4450) (Var 'tmp4449)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4503)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4503)))
       (JmpIf 'e 'block4501)
       (Jmp 'block4502))))
    (cons
     'block4496
     (Block
      (list
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1673) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'three4398conclusion))))
    (cons
     'block4498
     (Block
      (list
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 40) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4496))))
    (cons
     'block4497
     (Block
      (list (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4496))))
    (cons
     'block4504
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4444
        'x3
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4444
        'x3
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4445
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'tmp4447
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4499
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4442)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4442)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4443)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4443)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4444)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4444)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4445)))
       (Instr 'movq (list (Var 'tmp4445) (Var 'tmp4446)))
       (Instr 'addq (list (Imm 40) (Var 'tmp4446)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4447)))
       (Instr 'cmpq (list (Var 'tmp4447) (Var 'tmp4446)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4499)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4499)))
       (JmpIf 'e 'block4497)
       (Jmp 'block4498))))
    (cons
     'three4398start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4404)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4404)))
       (JmpIf 'e 'block4504)
       (Jmp 'block4505))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer))
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (tmp4462
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4464 Vector (Vector) Integer)
      (_ . Void)
      (tmp4455
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (x4
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4457 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4458 Integer -> (Vector))
      (x0 Vector)
      (tmp4459 . Void)
      (tmp4460 . Integer)
      (tmp4461 . Integer)
      (tmp4509 . Boolean))
     (num-params . 0))
   (list
    (cons
     'block4506
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set 'tmp4462)
       (set)
       (set 'tmp4463)
       (set)
       (set 'tmp4464)
       (set)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 48) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3723) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x4) (Deref 'r11 40)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 40) (Var 'tmp4462)))
       (Instr 'movq (list (Var 'tmp4462) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 32) (Var 'tmp4463)))
       (Instr 'movq (list (Var 'tmp4463) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 24) (Var 'tmp4464)))
       (Instr 'movq (list (Var 'tmp4464) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
       (Jmp 'mainconclusion))))
    (cons
     'block4508
     (Block
      (list
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 48) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4506))))
    (cons
     'block4507
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4506))))
    (cons
     'mainstart
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'rcx 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'tmp4457 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'tmp4457
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4459
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'tmp4461
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'tmp4509
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4455)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4455)
       (Instr 'movq (list (Reg 'rax) (Var 'x4)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4456)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4456)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4457)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4457)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4458)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4458)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4459)))
       (Instr 'movq (list (Var 'tmp4459) (Var 'tmp4460)))
       (Instr 'addq (list (Imm 48) (Var 'tmp4460)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4461)))
       (Instr 'cmpq (list (Var 'tmp4461) (Var 'tmp4460)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4509)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4509)))
       (JmpIf 'e 'block4507)
       (Jmp 'block4508))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: build interference @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (n4399 . Integer)
    (m4400 . Integer)
    (tmp4408 . Integer)
    (x4401 . Integer)
    (v Vector Integer)
    (_ . Void)
    (tmp4415 . Integer)
    (tmp4417 . Integer)
    (tmp4418 Integer -> (Vector))
    (tmp4417 . Integer)
    (_ . Void)
    (tmp4409 . Void)
    (tmp4410 . Integer)
    (tmp4411 . Integer)
    (tmp4469 . Boolean)
    (tmp4416 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4412 . Void)
    (tmp4413 . Integer)
    (tmp4414 . Integer)
    (tmp4473 . Boolean)
    (v Vector)
    (_ . Void)
    (x4402 . Integer)
    (v Vector (Vector) Integer)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4426 . Integer)
    (tmp4428 . Integer)
    (tmp4429 Integer -> (Vector (Vector) Integer))
    (tmp4428 . Integer)
    (_ . Void)
    (x1 . Integer)
    (tmp4419 Integer -> (Vector))
    (x0 Vector)
    (tmp4420 . Void)
    (tmp4421 . Integer)
    (tmp4422 . Integer)
    (tmp4479 . Boolean)
    (tmp4427 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4423 . Void)
    (tmp4424 . Integer)
    (tmp4425 . Integer)
    (tmp4483 . Boolean)
    (x4403 . Integer)
    (v Vector (Vector) Integer (Vector (Vector) Integer))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4438 . Integer)
    (tmp4440 . Integer)
    (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4440 . Integer)
    (_ . Void)
    (tmp4430 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4431 Integer -> (Vector))
    (x0 Vector)
    (tmp4432 . Void)
    (tmp4433 . Integer)
    (tmp4434 . Integer)
    (tmp4489 . Boolean)
    (tmp4439 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4435 . Void)
    (tmp4436 . Integer)
    (tmp4437 . Integer)
    (tmp4493 . Boolean)
    (x4404 . Integer)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4451 . Integer)
    (tmp4453 . Integer)
    (tmp4454
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (tmp4453 . Integer)
    (_ . Void)
    (tmp4452 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4448 . Void)
    (tmp4449 . Integer)
    (tmp4450 . Integer)
    (tmp4503 . Boolean)
    (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4443 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4444 Integer -> (Vector))
    (x0 Vector)
    (tmp4445 . Void)
    (tmp4446 . Integer)
    (tmp4447 . Integer)
    (tmp4499 . Boolean)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer))
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (tmp4462
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4464 Vector (Vector) Integer)
    (_ . Void)
    (tmp4455
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (x4
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4457 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4458 Integer -> (Vector))
    (x0 Vector)
    (tmp4459 . Void)
    (tmp4460 . Integer)
    (tmp4461 . Integer)
    (tmp4509 . Boolean)))
 (list
  (Def
   'minus4394
   '()
   'Integer
   '((locals (n4399 . Integer) (m4400 . Integer) (tmp4408 . Integer))
     (num-params . 2)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'minus4394start
     (Block
      (list
       (set 'rcx 'rdx)
       (set 'n4399 'rdx)
       (set 'm4400 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4399)))
       (Instr 'movq (list (Reg 'rdx) (Var 'm4400)))
       (Instr 'movq (list (Var 'm4400) (Var 'tmp4408)))
       (Instr 'negq (list (Var 'tmp4408)))
       (Instr 'movq (list (Var 'n4399) (Reg 'rax)))
       (Instr 'addq (list (Var 'tmp4408) (Reg 'rax)))
       (Jmp 'minus4394conclusion))))))
  (Def
   'zero4395
   '()
   '(Vector)
   '((locals
      (x4401 . Integer)
      (v Vector Integer)
      (_ . Void)
      (tmp4415 . Integer)
      (tmp4417 . Integer)
      (tmp4418 Integer -> (Vector))
      (tmp4417 . Integer)
      (_ . Void)
      (tmp4409 . Void)
      (tmp4410 . Integer)
      (tmp4411 . Integer)
      (tmp4469 . Boolean)
      (tmp4416 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4412 . Void)
      (tmp4413 . Integer)
      (tmp4414 . Integer)
      (tmp4473 . Boolean)
      (v Vector)
      (_ . Void))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4466
     (Block
      (list (set) (set 'v) (set 'v) (set 'v) (set 'v) (set) (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 8) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'zero4395conclusion))))
    (cons
     'block4468
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 8) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4466))))
    (cons
     'block4467
     (Block
      (list (set) (set) (set))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4466))))
    (cons
     'block4474
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4409 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'tmp4411 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4469 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4409)))
       (Instr 'movq (list (Var 'tmp4409) (Var 'tmp4410)))
       (Instr 'addq (list (Imm 8) (Var 'tmp4410)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4411)))
       (Instr 'cmpq (list (Var 'tmp4411) (Var 'tmp4410)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4469)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4469)))
       (JmpIf 'e 'block4467)
       (Jmp 'block4468))))
    (cons
     'block4470
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'tmp4415 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'tmp4418 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4418 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4415)))
       (Instr 'movq (list (Var 'tmp4415) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4416)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4417)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4418)))
       (Instr 'movq (list (Var 'tmp4417) (Reg 'rcx)))
       (TailJmp (Var 'tmp4418)))))
    (cons
     'block4472
     (Block
      (list
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4470))))
    (cons
     'block4471
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4470))))
    (cons
     'block4475
     (Block
      (list
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x4401
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'tmp4412
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'tmp4414
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x0
        'tmp4473
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4416)))
       (Instr 'movq (list (Var 'x4401) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4412)))
       (Instr 'movq (list (Var 'tmp4412) (Var 'tmp4413)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4413)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4414)))
       (Instr 'cmpq (list (Var 'tmp4414) (Var 'tmp4413)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4473)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4473)))
       (JmpIf 'e 'block4471)
       (Jmp 'block4472))))
    (cons
     'zero4395start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4401)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4401)))
       (JmpIf 'e 'block4474)
       (Jmp 'block4475))))))
  (Def
   'one4396
   '()
   '(Vector (Vector) Integer)
   '((locals
      (x4402 . Integer)
      (v Vector (Vector) Integer)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4426 . Integer)
      (tmp4428 . Integer)
      (tmp4429 Integer -> (Vector (Vector) Integer))
      (tmp4428 . Integer)
      (_ . Void)
      (x1 . Integer)
      (tmp4419 Integer -> (Vector))
      (x0 Vector)
      (tmp4420 . Void)
      (tmp4421 . Integer)
      (tmp4422 . Integer)
      (tmp4479 . Boolean)
      (tmp4427 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4423 . Void)
      (tmp4424 . Integer)
      (tmp4425 . Integer)
      (tmp4483 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4480
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'tmp4426 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4426)))
       (Instr 'movq (list (Var 'tmp4426) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4427)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4428)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4429)))
       (Instr 'movq (list (Var 'tmp4428) (Reg 'rcx)))
       (TailJmp (Var 'tmp4429)))))
    (cons
     'block4482
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4480))))
    (cons
     'block4481
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4480))))
    (cons
     'block4485
     (Block
      (list
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4402
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4423
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'tmp4425
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4483
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4427)))
       (Instr 'movq (list (Var 'x4402) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4423)))
       (Instr 'movq (list (Var 'tmp4423) (Var 'tmp4424)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4424)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4425)))
       (Instr 'cmpq (list (Var 'tmp4425) (Var 'tmp4424)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4483)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4483)))
       (JmpIf 'e 'block4481)
       (Jmp 'block4482))))
    (cons
     'block4476
     (Block
      (list
       (set 'x0 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 133) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'one4396conclusion))))
    (cons
     'block4478
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x1)
       (set 'x0 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4476))))
    (cons
     'block4477
     (Block
      (list (set 'x0 'x1) (set 'x0 'x1) (set 'x0 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4476))))
    (cons
     'block4484
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4420 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4421
        'r8
        'tmp4422
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4479 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4419)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4419)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4420)))
       (Instr 'movq (list (Var 'tmp4420) (Var 'tmp4421)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4421)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4422)))
       (Instr 'cmpq (list (Var 'tmp4422) (Var 'tmp4421)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4479)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4479)))
       (JmpIf 'e 'block4477)
       (Jmp 'block4478))))
    (cons
     'one4396start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4402)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4402)))
       (JmpIf 'e 'block4484)
       (Jmp 'block4485))))))
  (Def
   'two4397
   '()
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '((locals
      (x4403 . Integer)
      (v Vector (Vector) Integer (Vector (Vector) Integer))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4438 . Integer)
      (tmp4440 . Integer)
      (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4440 . Integer)
      (_ . Void)
      (tmp4430 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4431 Integer -> (Vector))
      (x0 Vector)
      (tmp4432 . Void)
      (tmp4433 . Integer)
      (tmp4434 . Integer)
      (tmp4489 . Boolean)
      (tmp4439 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4435 . Void)
      (tmp4436 . Integer)
      (tmp4437 . Integer)
      (tmp4493 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4490
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4438 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'tmp4441 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4441 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4438)))
       (Instr 'movq (list (Var 'tmp4438) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4439)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4440)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4441)))
       (Instr 'movq (list (Var 'tmp4440) (Reg 'rcx)))
       (TailJmp (Var 'tmp4441)))))
    (cons
     'block4492
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4490))))
    (cons
     'block4491
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4490))))
    (cons
     'block4495
     (Block
      (list
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4403
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4435
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'tmp4437
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4493
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4439)))
       (Instr 'movq (list (Var 'x4403) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4435)))
       (Instr 'movq (list (Var 'tmp4435) (Var 'tmp4436)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4436)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4437)))
       (Instr 'cmpq (list (Var 'tmp4437) (Var 'tmp4436)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4493)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4493)))
       (JmpIf 'e 'block4491)
       (Jmp 'block4492))))
    (cons
     'block4486
     (Block
      (list
       (set 'x0 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 647) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'two4397conclusion))))
    (cons
     'block4488
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x2 'x1)
       (set 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 32) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4486))))
    (cons
     'block4487
     (Block
      (list (set 'x0 'x2 'x1) (set 'x0 'x2 'x1) (set 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4486))))
    (cons
     'block4494
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'tmp4431 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4431
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4432 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'x2
        'tmp4433
        'r8
        'tmp4434
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4489 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4430)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4430)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4431)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4431)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4432)))
       (Instr 'movq (list (Var 'tmp4432) (Var 'tmp4433)))
       (Instr 'addq (list (Imm 32) (Var 'tmp4433)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4434)))
       (Instr 'cmpq (list (Var 'tmp4434) (Var 'tmp4433)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4489)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4489)))
       (JmpIf 'e 'block4487)
       (Jmp 'block4488))))
    (cons
     'two4397start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4403)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4403)))
       (JmpIf 'e 'block4494)
       (Jmp 'block4495))))))
  (Def
   'three4398
   '()
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '((locals
      (x4404 . Integer)
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4451 . Integer)
      (tmp4453 . Integer)
      (tmp4454
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (tmp4453 . Integer)
      (_ . Void)
      (tmp4452 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4448 . Void)
      (tmp4449 . Integer)
      (tmp4450 . Integer)
      (tmp4503 . Boolean)
      (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4443 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4444 Integer -> (Vector))
      (x0 Vector)
      (tmp4445 . Void)
      (tmp4446 . Integer)
      (tmp4447 . Integer)
      (tmp4499 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4500
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'tmp4451 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4451)))
       (Instr 'movq (list (Var 'tmp4451) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Var 'tmp4452)
       (Instr 'movq (list (Reg 'rax) (Var 'tmp4453)))
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4454)))
       (Instr 'movq (list (Var 'tmp4453) (Reg 'rcx)))
       (TailJmp (Var 'tmp4454)))))
    (cons
     'block4502
     (Block
      (list
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4500))))
    (cons
     'block4501
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4500))))
    (cons
     'block4505
     (Block
      (list
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'rcx
        'r14
        'r10
        'x4404
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4448
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'tmp4450
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4503
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Var 'tmp4452)))
       (Instr 'movq (list (Var 'x4404) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4448)))
       (Instr 'movq (list (Var 'tmp4448) (Var 'tmp4449)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4449)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4450)))
       (Instr 'cmpq (list (Var 'tmp4450) (Var 'tmp4449)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4503)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4503)))
       (JmpIf 'e 'block4501)
       (Jmp 'block4502))))
    (cons
     'block4496
     (Block
      (list
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 1673) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'rax)))
       (Jmp 'three4398conclusion))))
    (cons
     'block4498
     (Block
      (list
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 40) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4496))))
    (cons
     'block4497
     (Block
      (list (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4496))))
    (cons
     'block4504
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4444
        'x3
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4444
        'x3
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4445
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'tmp4447
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4499
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4442)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4442)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4443)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4443)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4444)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4444)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4445)))
       (Instr 'movq (list (Var 'tmp4445) (Var 'tmp4446)))
       (Instr 'addq (list (Imm 40) (Var 'tmp4446)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4447)))
       (Instr 'cmpq (list (Var 'tmp4447) (Var 'tmp4446)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4499)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4499)))
       (JmpIf 'e 'block4497)
       (Jmp 'block4498))))
    (cons
     'three4398start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4404)))
       (Instr 'cmpq (list (Imm 0) (Var 'x4404)))
       (JmpIf 'e 'block4504)
       (Jmp 'block4505))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer))
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (tmp4462
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4464 Vector (Vector) Integer)
      (_ . Void)
      (tmp4455
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (x4
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4457 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4458 Integer -> (Vector))
      (x0 Vector)
      (tmp4459 . Void)
      (tmp4460 . Integer)
      (tmp4461 . Integer)
      (tmp4509 . Boolean))
     (num-params . 0)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4506
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set 'tmp4462)
       (set)
       (set 'tmp4463)
       (set)
       (set 'tmp4464)
       (set)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 48) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3723) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x4) (Deref 'r11 40)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x3) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x2) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 40) (Var 'tmp4462)))
       (Instr 'movq (list (Var 'tmp4462) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 32) (Var 'tmp4463)))
       (Instr 'movq (list (Var 'tmp4463) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 24) (Var 'tmp4464)))
       (Instr 'movq (list (Var 'tmp4464) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
       (Jmp 'mainconclusion))))
    (cons
     'block4508
     (Block
      (list
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 48) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4506))))
    (cons
     'block4507
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4506))))
    (cons
     'mainstart
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'rcx 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'tmp4457 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'tmp4457
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4459
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'tmp4461
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'tmp4509
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'three4398) (Var 'tmp4455)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4455)
       (Instr 'movq (list (Reg 'rax) (Var 'x4)))
       (Instr 'leaq (list (FunRef 'two4397) (Var 'tmp4456)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4456)
       (Instr 'movq (list (Reg 'rax) (Var 'x3)))
       (Instr 'leaq (list (FunRef 'one4396) (Var 'tmp4457)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4457)
       (Instr 'movq (list (Reg 'rax) (Var 'x2)))
       (Instr 'movq (list (Imm 42) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'zero4395) (Var 'tmp4458)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Var 'tmp4458)
       (Instr 'movq (list (Reg 'rax) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4459)))
       (Instr 'movq (list (Var 'tmp4459) (Var 'tmp4460)))
       (Instr 'addq (list (Imm 48) (Var 'tmp4460)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4461)))
       (Instr 'cmpq (list (Var 'tmp4461) (Var 'tmp4460)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Var 'tmp4509)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4509)))
       (JmpIf 'e 'block4507)
       (Jmp 'block4508))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_14"


running pass: allocate registers @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (n4399 . Integer)
    (m4400 . Integer)
    (tmp4408 . Integer)
    (x4401 . Integer)
    (v Vector Integer)
    (_ . Void)
    (tmp4415 . Integer)
    (tmp4417 . Integer)
    (tmp4418 Integer -> (Vector))
    (tmp4417 . Integer)
    (_ . Void)
    (tmp4409 . Void)
    (tmp4410 . Integer)
    (tmp4411 . Integer)
    (tmp4469 . Boolean)
    (tmp4416 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4412 . Void)
    (tmp4413 . Integer)
    (tmp4414 . Integer)
    (tmp4473 . Boolean)
    (v Vector)
    (_ . Void)
    (x4402 . Integer)
    (v Vector (Vector) Integer)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4426 . Integer)
    (tmp4428 . Integer)
    (tmp4429 Integer -> (Vector (Vector) Integer))
    (tmp4428 . Integer)
    (_ . Void)
    (x1 . Integer)
    (tmp4419 Integer -> (Vector))
    (x0 Vector)
    (tmp4420 . Void)
    (tmp4421 . Integer)
    (tmp4422 . Integer)
    (tmp4479 . Boolean)
    (tmp4427 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4423 . Void)
    (tmp4424 . Integer)
    (tmp4425 . Integer)
    (tmp4483 . Boolean)
    (x4403 . Integer)
    (v Vector (Vector) Integer (Vector (Vector) Integer))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4438 . Integer)
    (tmp4440 . Integer)
    (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4440 . Integer)
    (_ . Void)
    (tmp4430 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4431 Integer -> (Vector))
    (x0 Vector)
    (tmp4432 . Void)
    (tmp4433 . Integer)
    (tmp4434 . Integer)
    (tmp4489 . Boolean)
    (tmp4439 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4435 . Void)
    (tmp4436 . Integer)
    (tmp4437 . Integer)
    (tmp4493 . Boolean)
    (x4404 . Integer)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (v Vector Integer)
    (_ . Void)
    (tmp4451 . Integer)
    (tmp4453 . Integer)
    (tmp4454
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (tmp4453 . Integer)
    (_ . Void)
    (tmp4452 Integer Integer -> Integer)
    (x0 . Integer)
    (tmp4448 . Void)
    (tmp4449 . Integer)
    (tmp4450 . Integer)
    (tmp4503 . Boolean)
    (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4443 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4444 Integer -> (Vector))
    (x0 Vector)
    (tmp4445 . Void)
    (tmp4446 . Integer)
    (tmp4447 . Integer)
    (tmp4499 . Boolean)
    (v
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer))
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (_ . Void)
    (tmp4462
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4464 Vector (Vector) Integer)
    (_ . Void)
    (tmp4455
     Integer
     ->
     (Vector
      (Vector)
      Integer
      (Vector (Vector) Integer)
      (Vector (Vector) Integer (Vector (Vector) Integer))))
    (x4
     Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
    (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
    (x3 Vector (Vector) Integer (Vector (Vector) Integer))
    (tmp4457 Integer -> (Vector (Vector) Integer))
    (x2 Vector (Vector) Integer)
    (x1 . Integer)
    (tmp4458 Integer -> (Vector))
    (x0 Vector)
    (tmp4459 . Void)
    (tmp4460 . Integer)
    (tmp4461 . Integer)
    (tmp4509 . Boolean)))
 (list
  (Def
   'minus4394
   '()
   'Integer
   '((stack-space . 0)
     (num-spills 0 . 0)
     (locals (n4399 . Integer) (m4400 . Integer) (tmp4408 . Integer))
     (num-params . 2)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'minus4394start
     (Block
      (list
       (set 'rcx 'rdx)
       (set 'n4399 'rdx)
       (set 'm4400 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408 'n4399)
       (set 'tmp4408)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (Instr 'negq (list (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rsi) (Reg 'rax)))
       (Instr 'addq (list (Reg 'rcx) (Reg 'rax)))
       (Jmp 'minus4394conclusion))))))
  (Def
   'zero4395
   '()
   '(Vector)
   '((stack-space . 32)
     (num-spills 4 . 0)
     (locals
      (x4401 . Integer)
      (v Vector Integer)
      (_ . Void)
      (tmp4415 . Integer)
      (tmp4417 . Integer)
      (tmp4418 Integer -> (Vector))
      (tmp4417 . Integer)
      (_ . Void)
      (tmp4409 . Void)
      (tmp4410 . Integer)
      (tmp4411 . Integer)
      (tmp4469 . Boolean)
      (tmp4416 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4412 . Void)
      (tmp4413 . Integer)
      (tmp4414 . Integer)
      (tmp4473 . Boolean)
      (v Vector)
      (_ . Void))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4466
     (Block
      (list (set) (set 'v) (set 'v) (set 'v) (set 'v) (set) (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 8) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 1) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
       (Jmp 'zero4395conclusion))))
    (cons
     'block4468
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set)
       (set))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 8) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4466))))
    (cons
     'block4467
     (Block
      (list (set) (set) (set))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4466))))
    (cons
     'block4474
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4409 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4410 'tmp4411 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4469 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Deref 'rbp -32)))
       (Instr 'addq (list (Imm 8) (Deref 'rbp -32)))
       (Instr 'movq (list (Global 'fromspace_end) (Reg 'rsi)))
       (Instr 'cmpq (list (Reg 'rsi) (Deref 'rbp -32)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Reg 'rsi)))
       (Instr 'cmpq (list (Imm 1) (Reg 'rsi)))
       (JmpIf 'e 'block4467)
       (Jmp 'block4468))))
    (cons
     'block4470
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'tmp4415 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4417 'tmp4418 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4418 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Reg 'rcx)))
       (Instr 'leaq (list (FunRef 'zero4395) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4472
     (Block
      (list
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4470))))
    (cons
     'block4471
     (Block
      (list
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4416 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4470))))
    (cons
     'block4475
     (Block
      (list
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x4401
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'tmp4412
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4416
        'tmp4413
        'x0
        'tmp4414
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4416
        'x0
        'tmp4473
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4416 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -48)))
       (Instr 'movq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'addq (list (Imm 16) (Deref 'rbp -56)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -48)))
       (Instr 'cmpq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Deref 'rbp -48)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -48)))
       (JmpIf 'e 'block4471)
       (Jmp 'block4472))))
    (cons
     'zero4395start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4401 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Deref 'rbp -40)))
       (Instr 'cmpq (list (Imm 0) (Deref 'rbp -40)))
       (JmpIf 'e 'block4474)
       (Jmp 'block4475))))))
  (Def
   'one4396
   '()
   '(Vector (Vector) Integer)
   '((stack-space . 24)
     (num-spills 3 . 1)
     (locals
      (x4402 . Integer)
      (v Vector (Vector) Integer)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4426 . Integer)
      (tmp4428 . Integer)
      (tmp4429 Integer -> (Vector (Vector) Integer))
      (tmp4428 . Integer)
      (_ . Void)
      (x1 . Integer)
      (tmp4419 Integer -> (Vector))
      (x0 Vector)
      (tmp4420 . Void)
      (tmp4421 . Integer)
      (tmp4422 . Integer)
      (tmp4479 . Boolean)
      (tmp4427 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4423 . Void)
      (tmp4424 . Integer)
      (tmp4425 . Integer)
      (tmp4483 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4480
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4427 'tmp4426 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4428 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'tmp4429 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Reg 'rcx)))
       (Instr 'leaq (list (FunRef 'one4396) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4482
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4480))))
    (cons
     'block4481
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4480))))
    (cons
     'block4485
     (Block
      (list
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4402
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4423
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'tmp4425
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4483
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4427
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4427 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'r15 16)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -40)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'rbp -48)))
       (Instr 'addq (list (Imm 16) (Deref 'rbp -48)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -40)))
       (Instr 'cmpq (list (Deref 'rbp -40) (Deref 'rbp -48)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Deref 'rbp -40)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -40)))
       (JmpIf 'e 'block4481)
       (Jmp 'block4482))))
    (cons
     'block4476
     (Block
      (list
       (set 'x0 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 133) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
       (Jmp 'one4396conclusion))))
    (cons
     'block4478
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x1)
       (set 'x0 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4476))))
    (cons
     'block4477
     (Block
      (list (set 'x0 'x1) (set 'x0 'x1) (set 'x0 'x1))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4476))))
    (cons
     'block4484
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4419 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4420 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4421 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4421
        'r8
        'tmp4422
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4479 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'movq (list (Imm 42) (Deref 'rbp -32)))
       (Instr 'leaq (list (FunRef 'zero4395) (Deref 'rbp -40)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -40)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 16)))
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 24) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'fromspace_end) (Reg 'rsi)))
       (Instr 'cmpq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Reg 'rsi)))
       (Instr 'cmpq (list (Imm 1) (Reg 'rsi)))
       (JmpIf 'e 'block4477)
       (Jmp 'block4478))))
    (cons
     'one4396start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4402 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Deref 'rbp -40)))
       (Instr 'cmpq (list (Imm 0) (Deref 'rbp -40)))
       (JmpIf 'e 'block4484)
       (Jmp 'block4485))))))
  (Def
   'two4397
   '()
   '(Vector (Vector) Integer (Vector (Vector) Integer))
   '((stack-space . 24)
     (num-spills 3 . 2)
     (locals
      (x4403 . Integer)
      (v Vector (Vector) Integer (Vector (Vector) Integer))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4438 . Integer)
      (tmp4440 . Integer)
      (tmp4441 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4440 . Integer)
      (_ . Void)
      (tmp4430 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4431 Integer -> (Vector))
      (x0 Vector)
      (tmp4432 . Void)
      (tmp4433 . Integer)
      (tmp4434 . Integer)
      (tmp4489 . Boolean)
      (tmp4439 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4435 . Void)
      (tmp4436 . Integer)
      (tmp4437 . Integer)
      (tmp4493 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4490
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4438 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4440 'tmp4441 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4441 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Reg 'rcx)))
       (Instr 'leaq (list (FunRef 'two4397) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4492
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4490))))
    (cons
     'block4491
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4490))))
    (cons
     'block4495
     (Block
      (list
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x4403
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4435
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4436
        'tmp4437
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4493
        'rcx
        'r14
        'r10
        'r8
        'r9
        'tmp4439
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'tmp4439 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'r15 16)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -40)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'rbp -48)))
       (Instr 'addq (list (Imm 16) (Deref 'rbp -48)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -40)))
       (Instr 'cmpq (list (Deref 'rbp -40) (Deref 'rbp -48)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Deref 'rbp -40)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -40)))
       (JmpIf 'e 'block4491)
       (Jmp 'block4492))))
    (cons
     'block4486
     (Block
      (list
       (set 'x0 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 647) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 24) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
       (Jmp 'two4397conclusion))))
    (cons
     'block4488
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'x2 'x1)
       (set 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 32) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4486))))
    (cons
     'block4487
     (Block
      (list (set 'x0 'x2 'x1) (set 'x0 'x2 'x1) (set 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4486))))
    (cons
     'block4494
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4430 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'x2 'r8 'r9 'tmp4431 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4431
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'tmp4432 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'tmp4433 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x0
        'rcx
        'r14
        'r10
        'x2
        'tmp4433
        'r8
        'tmp4434
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4489 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'one4396) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 24)))
       (Instr 'movq (list (Imm 42) (Deref 'rbp -32)))
       (Instr 'leaq (list (FunRef 'zero4395) (Deref 'rbp -40)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -40)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 16)))
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 32) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'fromspace_end) (Reg 'rsi)))
       (Instr 'cmpq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Reg 'rsi)))
       (Instr 'cmpq (list (Imm 1) (Reg 'rsi)))
       (JmpIf 'e 'block4487)
       (Jmp 'block4488))))
    (cons
     'two4397start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4403 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Deref 'rbp -40)))
       (Instr 'cmpq (list (Imm 0) (Deref 'rbp -40)))
       (JmpIf 'e 'block4494)
       (Jmp 'block4495))))))
  (Def
   'three4398
   '()
   '(Vector
     (Vector)
     Integer
     (Vector (Vector) Integer)
     (Vector (Vector) Integer (Vector (Vector) Integer)))
   '((stack-space . 32)
     (num-spills 4 . 2)
     (locals
      (x4404 . Integer)
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (v Vector Integer)
      (_ . Void)
      (tmp4451 . Integer)
      (tmp4453 . Integer)
      (tmp4454
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (tmp4453 . Integer)
      (_ . Void)
      (tmp4452 Integer Integer -> Integer)
      (x0 . Integer)
      (tmp4448 . Void)
      (tmp4449 . Integer)
      (tmp4450 . Integer)
      (tmp4503 . Boolean)
      (tmp4442 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4443 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4444 Integer -> (Vector))
      (x0 Vector)
      (tmp4445 . Void)
      (tmp4446 . Integer)
      (tmp4447 . Integer)
      (tmp4499 . Boolean))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4500
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'r14 'r10 'tmp4451 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'tmp4453 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'tmp4454 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (Instr 'movq (list (Imm 1) (Reg 'rdx)))
       callq *(Deref 'rbp -40)
       (Instr 'movq (list (Reg 'rax) (Reg 'rcx)))
       (Instr 'leaq (list (FunRef 'three4398) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4502
     (Block
      (list
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4500))))
    (cons
     'block4501
     (Block
      (list
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4452 'x0 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4500))))
    (cons
     'block4505
     (Block
      (list
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'rcx
        'r14
        'r10
        'x4404
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4448
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4452
        'tmp4449
        'x0
        'tmp4450
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4452
        'tmp4503
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4452 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'leaq (list (FunRef 'minus4394) (Deref 'rbp -40)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'rbp -32)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -48)))
       (Instr 'movq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'addq (list (Imm 16) (Deref 'rbp -56)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -48)))
       (Instr 'cmpq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Deref 'rbp -48)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -48)))
       (JmpIf 'e 'block4501)
       (Jmp 'block4502))))
    (cons
     'block4496
     (Block
      (list
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 1673) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 24) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -40) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
       (Jmp 'three4398conclusion))))
    (cons
     'block4498
     (Block
      (list
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x0 'x2 'x1)
       (set 'x3 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 40) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4496))))
    (cons
     'block4497
     (Block
      (list (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1) (set 'x3 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4496))))
    (cons
     'block4504
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4442 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'tmp4443 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4444
        'x3
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4444
        'x3
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4445
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'tmp4446
        'x0
        'tmp4447
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'tmp4499
        'x3
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'two4397) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 24)))
       (Instr 'leaq (list (FunRef 'one4396) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 16)))
       (Instr 'movq (list (Imm 42) (Deref 'rbp -40)))
       (Instr 'leaq (list (FunRef 'zero4395) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'rbp -32)))
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Deref 'rbp -48)))
       (Instr 'addq (list (Imm 40) (Deref 'rbp -48)))
       (Instr 'movq (list (Global 'fromspace_end) (Reg 'rsi)))
       (Instr 'cmpq (list (Reg 'rsi) (Deref 'rbp -48)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Reg 'rsi)))
       (Instr 'cmpq (list (Imm 1) (Reg 'rsi)))
       (JmpIf 'e 'block4497)
       (Jmp 'block4498))))
    (cons
     'three4398start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'x4404 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Deref 'rbp -32)))
       (Instr 'cmpq (list (Imm 0) (Deref 'rbp -32)))
       (JmpIf 'e 'block4504)
       (Jmp 'block4505))))))
  (Def
   'main
   '()
   'Integer
   '((stack-space . 16)
     (num-spills 2 . 4)
     (locals
      (v
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer))
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (_ . Void)
      (tmp4462
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4463 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4464 Vector (Vector) Integer)
      (_ . Void)
      (tmp4455
       Integer
       ->
       (Vector
        (Vector)
        Integer
        (Vector (Vector) Integer)
        (Vector (Vector) Integer (Vector (Vector) Integer))))
      (x4
       Vector
       (Vector)
       Integer
       (Vector (Vector) Integer)
       (Vector (Vector) Integer (Vector (Vector) Integer)))
      (tmp4456 Integer -> (Vector (Vector) Integer (Vector (Vector) Integer)))
      (x3 Vector (Vector) Integer (Vector (Vector) Integer))
      (tmp4457 Integer -> (Vector (Vector) Integer))
      (x2 Vector (Vector) Integer)
      (x1 . Integer)
      (tmp4458 Integer -> (Vector))
      (x0 Vector)
      (tmp4459 . Void)
      (tmp4460 . Integer)
      (tmp4461 . Integer)
      (tmp4509 . Boolean))
     (num-params . 0)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4506
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x4 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x3 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x2 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v 'x1)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'x0 'v)
       (set 'v)
       (set 'v)
       (set)
       (set 'tmp4462)
       (set)
       (set 'tmp4463)
       (set)
       (set 'tmp4464)
       (set)
       (set)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rbx)))
       (Instr 'addq (list (Imm 48) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Imm 3723) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 24) (Deref 'r11 40)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 32) (Deref 'r11 32)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 24)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 40) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 40) (Reg 'rbx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 32) (Reg 'rbx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 24) (Reg 'rbx)))
       (Instr 'movq (list (Reg 'rbx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
       (Jmp 'mainconclusion))))
    (cons
     'block4508
     (Block
      (list
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 48) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4506))))
    (cons
     'block4507
     (Block
      (list
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1)
       (set 'x3 'x4 'x0 'x2 'x1))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4506))))
    (cons
     'mainstart
     (Block
      (list
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4455 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'rcx 'r14 'r10 'tmp4456 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'tmp4457 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'tmp4457
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x3 'x4 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x3
        'x4
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'x3
        'x4
        'rcx
        'r14
        'r10
        'x2
        'r8
        'tmp4458
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x3 'x4 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'tmp4459
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set
        'x3
        'x4
        'x0
        'rcx
        'r14
        'r10
        'tmp4460
        'x2
        'tmp4461
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set
        'x3
        'tmp4509
        'x4
        'x0
        'rcx
        'r14
        'r10
        'x2
        'r8
        'r9
        'x1
        'rbx
        'r12
        'r13
        'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x3 'x4 'x0 'rcx 'r14 'r10 'x2 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx))
      (list
       (Instr 'leaq (list (FunRef 'three4398) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 24)))
       (Instr 'leaq (list (FunRef 'two4397) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 32)))
       (Instr 'leaq (list (FunRef 'one4396) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -32)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 16)))
       (Instr 'movq (list (Imm 42) (Deref 'rbp -32)))
       (Instr 'leaq (list (FunRef 'zero4395) (Deref 'rbp -40)))
       (Instr 'movq (list (Imm 20) (Reg 'rcx)))
       callq *(Deref 'rbp -40)
       (Instr 'movq (list (Reg 'rax) (Deref 'r15 40)))
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 48) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'fromspace_end) (Reg 'rsi)))
       (Instr 'cmpq (list (Reg 'rsi) (Deref 'rbp -40)))
       (Instr 'set (list 'l %al))
       (Instr 'movzbq (list %al (Reg 'rsi)))
       (Instr 'cmpq (list (Imm 1) (Reg 'rsi)))
       (JmpIf 'e 'block4507)
       (Jmp 'block4508))))))))


encountered exception while testing 'r4`, case r4_14
