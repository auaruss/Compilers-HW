type checker output: @ utilities.rkt:1472
(strip-has-type tsexp):
(ProgramDefsExp
 '()
 (list
  (Def 'id '((x : Integer)) 'Integer '() (HasType (Var 'x) 'Integer))
  (Def
   'f
   '((n : Integer) (clos : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType (Var 'clos) '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (Var 'f)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Prim
          'vector
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 0) 'Integer)))
            '(Integer -> Integer))
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer)))
 (HasType
  (Apply
   (HasType
    (Var 'f)
    '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
   (list
    (HasType (Int 0) 'Integer)
    (HasType
     (Prim
      'vector
      (list
       (HasType (Var 'id) '(Integer -> Integer))
       (HasType
        (Prim 'vector (list (HasType (Int 42) 'Integer)))
        '(Vector Integer))))
     '(Vector (Integer -> Integer) (Vector Integer)))))
  'Integer))


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: shrink @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def 'id '((x : Integer)) 'Integer '() (HasType (Var 'x) 'Integer))
  (Def
   'f
   '((n : Integer) (clos : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType (Var 'clos) '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (Var 'f)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Prim
          'vector
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 0) 'Integer)))
            '(Integer -> Integer))
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Apply
     (HasType
      (Var 'f)
      '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
     (list
      (HasType (Int 0) 'Integer)
      (HasType
       (Prim
        'vector
        (list
         (HasType (Var 'id) '(Integer -> Integer))
         (HasType
          (Prim 'vector (list (HasType (Int 42) 'Integer)))
          '(Vector Integer))))
       '(Vector (Integer -> Integer) (Vector Integer)))))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: uniquify @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (HasType (Var 'x4393) 'Integer))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (Var 'f4392)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Prim
          'vector
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 0) 'Integer)))
            '(Integer -> Integer))
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Apply
     (HasType
      (Var 'f4392)
      '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
     (list
      (HasType (Int 0) 'Integer)
      (HasType
       (Prim
        'vector
        (list
         (HasType (Var 'id4391) '(Integer -> Integer))
         (HasType
          (Prim 'vector (list (HasType (Int 42) 'Integer)))
          '(Vector Integer))))
       '(Vector (Integer -> Integer) (Vector Integer)))))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: reveal functions @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (HasType (Var 'x4393) 'Integer))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (FunRef 'f4392)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Prim
          'vector
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 0) 'Integer)))
            '(Integer -> Integer))
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Apply
     (HasType
      (FunRef 'f4392)
      '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
     (list
      (HasType (Int 0) 'Integer)
      (HasType
       (Prim
        'vector
        (list
         (HasType (FunRef 'id4391) '(Integer -> Integer))
         (HasType
          (Prim 'vector (list (HasType (Int 42) 'Integer)))
          '(Vector Integer))))
       '(Vector (Integer -> Integer) (Vector Integer)))))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: limit functions @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (HasType (Var 'x4393) 'Integer))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (FunRef 'f4392)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Prim
          'vector
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 0) 'Integer)))
            '(Integer -> Integer))
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Apply
     (HasType
      (FunRef 'f4392)
      '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
     (list
      (HasType (Int 0) 'Integer)
      (HasType
       (Prim
        'vector
        (list
         (HasType (FunRef 'id4391) '(Integer -> Integer))
         (HasType
          (Prim 'vector (list (HasType (Int 42) 'Integer)))
          '(Vector Integer))))
       '(Vector (Integer -> Integer) (Vector Integer)))))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: expose allocation @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (HasType (Var 'x4393) 'Integer))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (HasType
      (Apply
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 0) 'Integer)))
        '(Integer -> Integer))
       (list
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Prim
             'vector-ref
             (list
              (HasType
               (Var 'clos4395)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)))
            '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer)))
      'Integer)
     (HasType
      (Apply
       (HasType
        (FunRef 'f4392)
        '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
       (list
        (HasType
         (Prim
          '+
          (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
         'Integer)
        (HasType
         (Let
          'x1
          (HasType
           (Prim
            'vector-ref
            (list
             (HasType
              (Var 'clos4395)
              '(Vector (Integer -> Integer) (Vector Integer)))
             (HasType (Int 1) 'Integer)))
           '(Vector Integer))
          (HasType
           (Let
            'x0
            (HasType
             (Prim
              'vector-ref
              (list
               (HasType
                (Var 'clos4395)
                '(Vector (Integer -> Integer) (Vector Integer)))
               (HasType (Int 0) 'Integer)))
             '(Integer -> Integer))
            (HasType
             (Let
              '_
              (HasType
               (If
                (HasType
                 (Prim
                  '<
                  (list
                   (HasType
                    (Prim
                     '+
                     (list
                      (HasType (GlobalValue 'free_ptr) 'Integer)
                      (HasType (Int 24) 'Integer)))
                    'Integer)
                   (HasType (GlobalValue 'fromspace_end) 'Integer)))
                 'Boolean)
                (HasType (Void) 'Void)
                (HasType (collect 24) 'Void))
               'Void)
              (HasType
               (Let
                'v
                (HasType
                 (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
                 '(Vector (Integer -> Integer) (Vector Integer)))
                (HasType
                 (HasType
                  (Let
                   '_
                   (HasType
                    (Prim
                     'vector-set!
                     (list
                      (HasType
                       (Var 'v)
                       '(Vector (Integer -> Integer) (Vector Integer)))
                      (HasType (Int 1) 'Integer)
                      (HasType (Var 'x1) '(Vector Integer))))
                    'Void)
                   (HasType
                    (Let
                     '_
                     (HasType
                      (Prim
                       'vector-set!
                       (list
                        (HasType
                         (Var 'v)
                         '(Vector (Integer -> Integer) (Vector Integer)))
                        (HasType (Int 0) 'Integer)
                        (HasType (Var 'x0) '(Integer -> Integer))))
                      'Void)
                     (HasType
                      (Var 'v)
                      '(Vector (Integer -> Integer) (Vector Integer))))
                    '(Vector (Integer -> Integer) (Vector Integer))))
                  '(Vector (Integer -> Integer) (Vector Integer)))
                 '(Vector (Integer -> Integer) (Vector Integer))))
               '(Vector (Integer -> Integer) (Vector Integer))))
             '(Vector (Integer -> Integer) (Vector Integer))))
           '(Vector (Integer -> Integer) (Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer)))))
      'Integer))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (HasType
    (Apply
     (HasType
      (FunRef 'f4392)
      '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
     (list
      (HasType (Int 0) 'Integer)
      (HasType
       (Let
        'x1
        (HasType
         (Let
          'x0
          (HasType (Int 42) 'Integer)
          (HasType
           (Let
            '_
            (HasType
             (If
              (HasType
               (Prim
                '<
                (list
                 (HasType
                  (Prim
                   '+
                   (list
                    (HasType (GlobalValue 'free_ptr) 'Integer)
                    (HasType (Int 16) 'Integer)))
                  'Integer)
                 (HasType (GlobalValue 'fromspace_end) 'Integer)))
               'Boolean)
              (HasType (Void) 'Void)
              (HasType (collect 16) 'Void))
             'Void)
            (HasType
             (Let
              'v
              (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
              (HasType
               (HasType
                (Let
                 '_
                 (HasType
                  (Prim
                   'vector-set!
                   (list
                    (HasType (Var 'v) '(Vector Integer))
                    (HasType (Int 0) 'Integer)
                    (HasType (Var 'x0) 'Integer)))
                  'Void)
                 (HasType (Var 'v) '(Vector Integer)))
                '(Vector Integer))
               '(Vector Integer)))
             '(Vector Integer)))
           '(Vector Integer)))
         '(Vector Integer))
        (HasType
         (Let
          'x0
          (HasType (FunRef 'id4391) '(Integer -> Integer))
          (HasType
           (Let
            '_
            (HasType
             (If
              (HasType
               (Prim
                '<
                (list
                 (HasType
                  (Prim
                   '+
                   (list
                    (HasType (GlobalValue 'free_ptr) 'Integer)
                    (HasType (Int 24) 'Integer)))
                  'Integer)
                 (HasType (GlobalValue 'fromspace_end) 'Integer)))
               'Boolean)
              (HasType (Void) 'Void)
              (HasType (collect 24) 'Void))
             'Void)
            (HasType
             (Let
              'v
              (HasType
               (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType
               (HasType
                (Let
                 '_
                 (HasType
                  (Prim
                   'vector-set!
                   (list
                    (HasType
                     (Var 'v)
                     '(Vector (Integer -> Integer) (Vector Integer)))
                    (HasType (Int 1) 'Integer)
                    (HasType (Var 'x1) '(Vector Integer))))
                  'Void)
                 (HasType
                  (Let
                   '_
                   (HasType
                    (Prim
                     'vector-set!
                     (list
                      (HasType
                       (Var 'v)
                       '(Vector (Integer -> Integer) (Vector Integer)))
                      (HasType (Int 0) 'Integer)
                      (HasType (Var 'x0) '(Integer -> Integer))))
                    'Void)
                   (HasType
                    (Var 'v)
                    '(Vector (Integer -> Integer) (Vector Integer))))
                  '(Vector (Integer -> Integer) (Vector Integer))))
                '(Vector (Integer -> Integer) (Vector Integer)))
               '(Vector (Integer -> Integer) (Vector Integer))))
             '(Vector (Integer -> Integer) (Vector Integer))))
           '(Vector (Integer -> Integer) (Vector Integer))))
         '(Vector (Integer -> Integer) (Vector Integer))))
       '(Vector (Integer -> Integer) (Vector Integer)))))
    'Integer))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: remove complex opera* @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '()
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (HasType (Var 'x4393) 'Integer))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (HasType
    (If
     (HasType
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      'Boolean)
     (Let
      'tmp4399
      (HasType
       (Prim
        'vector-ref
        (list
         (HasType
          (Var 'clos4395)
          '(Vector (Integer -> Integer) (Vector Integer)))
         (HasType (Int 1) 'Integer)))
       '(Vector Integer))
      (Let
       'tmp4400
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType (Var 'tmp4399) '(Vector Integer))
          (HasType (Int 0) 'Integer)))
        'Integer)
       (Let
        'tmp4401
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Var 'clos4395)
            '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 0) 'Integer)))
         '(Integer -> Integer))
        (HasType
         (Apply
          (HasType (Var 'tmp4401) '(Integer -> Integer))
          (list (HasType (Var 'tmp4400) 'Integer)))
         'Integer))))
     (Let
      'tmp4402
      (HasType
       (Prim
        '+
        (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
       'Integer)
      (Let
       'x1
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 1) 'Integer)))
        '(Vector Integer))
       (Let
        'x0
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Var 'clos4395)
            '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 0) 'Integer)))
         '(Integer -> Integer))
        (Let
         '_
         (HasType
          (If
           (Let
            'tmp4403
            (HasType (GlobalValue 'free_ptr) 'Integer)
            (Let
             'tmp4404
             (HasType
              (Prim
               '+
               (list
                (HasType (Var 'tmp4403) 'Integer)
                (HasType (Int 24) 'Integer)))
              'Integer)
             (Let
              'tmp4405
              (HasType (GlobalValue 'fromspace_end) 'Integer)
              (HasType
               (Prim
                '<
                (list
                 (HasType (Var 'tmp4404) 'Integer)
                 (HasType (Var 'tmp4405) 'Integer)))
               'Boolean))))
           (HasType (Void) 'Void)
           (HasType (collect 24) 'Void))
          'Void)
         (Let
          'v
          (HasType
           (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
           '(Vector (Integer -> Integer) (Vector Integer)))
          (Let
           '_
           (HasType
            (Prim
             'vector-set!
             (list
              (HasType
               (Var 'v)
               '(Vector (Integer -> Integer) (Vector Integer)))
              (HasType (Int 1) 'Integer)
              (HasType (Var 'x1) '(Vector Integer))))
            'Void)
           (Let
            '_
            (HasType
             (Prim
              'vector-set!
              (list
               (HasType
                (Var 'v)
                '(Vector (Integer -> Integer) (Vector Integer)))
               (HasType (Int 0) 'Integer)
               (HasType (Var 'x0) '(Integer -> Integer))))
             'Void)
            (Let
             'tmp4406
             (HasType
              (FunRef 'f4392)
              '(Integer
                (Vector (Integer -> Integer) (Vector Integer))
                ->
                Integer))
             (HasType
              (Apply
               (HasType
                (Var 'tmp4406)
                '(Integer
                  (Vector (Integer -> Integer) (Vector Integer))
                  ->
                  Integer))
               (list
                (HasType (Var 'tmp4402) 'Integer)
                (HasType
                 (HasType
                  (HasType
                   (HasType
                    (HasType
                     (HasType
                      (HasType
                       (HasType
                        (Var 'v)
                        '(Vector (Integer -> Integer) (Vector Integer)))
                       '(Vector (Integer -> Integer) (Vector Integer)))
                      '(Vector (Integer -> Integer) (Vector Integer)))
                     '(Vector (Integer -> Integer) (Vector Integer)))
                    '(Vector (Integer -> Integer) (Vector Integer)))
                   '(Vector (Integer -> Integer) (Vector Integer)))
                  '(Vector (Integer -> Integer) (Vector Integer)))
                 '(Vector (Integer -> Integer) (Vector Integer)))))
              'Integer))))))))))
    'Integer))
  (Def
   'main
   '()
   'Integer
   '()
   (Let
    'x1
    (HasType
     (Let
      'x0
      (HasType (Int 42) 'Integer)
      (HasType
       (Let
        '_
        (HasType
         (If
          (Let
           'tmp4407
           (HasType (GlobalValue 'free_ptr) 'Integer)
           (Let
            'tmp4408
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4407) 'Integer)
               (HasType (Int 16) 'Integer)))
             'Integer)
            (Let
             'tmp4409
             (HasType (GlobalValue 'fromspace_end) 'Integer)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4408) 'Integer)
                (HasType (Var 'tmp4409) 'Integer)))
              'Boolean))))
          (HasType (Void) 'Void)
          (HasType (collect 16) 'Void))
         'Void)
        (HasType
         (Let
          'v
          (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
          (HasType
           (HasType
            (Let
             '_
             (HasType
              (Prim
               'vector-set!
               (list
                (HasType (Var 'v) '(Vector Integer))
                (HasType (Int 0) 'Integer)
                (HasType (Var 'x0) 'Integer)))
              'Void)
             (HasType (Var 'v) '(Vector Integer)))
            '(Vector Integer))
           '(Vector Integer)))
         '(Vector Integer)))
       '(Vector Integer)))
     '(Vector Integer))
    (Let
     'x0
     (HasType (FunRef 'id4391) '(Integer -> Integer))
     (Let
      '_
      (HasType
       (If
        (Let
         'tmp4410
         (HasType (GlobalValue 'free_ptr) 'Integer)
         (Let
          'tmp4411
          (HasType
           (Prim
            '+
            (list
             (HasType (Var 'tmp4410) 'Integer)
             (HasType (Int 24) 'Integer)))
           'Integer)
          (Let
           'tmp4412
           (HasType (GlobalValue 'fromspace_end) 'Integer)
           (HasType
            (Prim
             '<
             (list
              (HasType (Var 'tmp4411) 'Integer)
              (HasType (Var 'tmp4412) 'Integer)))
            'Boolean))))
        (HasType (Void) 'Void)
        (HasType (collect 24) 'Void))
       'Void)
      (Let
       'v
       (HasType
        (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
        '(Vector (Integer -> Integer) (Vector Integer)))
       (Let
        '_
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) '(Vector Integer))))
         'Void)
        (Let
         '_
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Integer -> Integer))))
          'Void)
         (Let
          'tmp4413
          (HasType
           (FunRef 'f4392)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer))
          (HasType
           (Apply
            (HasType
             (Var 'tmp4413)
             '(Integer
               (Vector (Integer -> Integer) (Vector Integer))
               ->
               Integer))
            (list
             (HasType (Int 0) 'Integer)
             (HasType
              (HasType
               (HasType
                (HasType
                 (HasType
                  (HasType
                   (HasType
                    (HasType
                     (Var 'v)
                     '(Vector (Integer -> Integer) (Vector Integer)))
                    '(Vector (Integer -> Integer) (Vector Integer)))
                   '(Vector (Integer -> Integer) (Vector Integer)))
                  '(Vector (Integer -> Integer) (Vector Integer)))
                 '(Vector (Integer -> Integer) (Vector Integer)))
                '(Vector (Integer -> Integer) (Vector Integer)))
               '(Vector (Integer -> Integer) (Vector Integer)))
              '(Vector (Integer -> Integer) (Vector Integer)))))
           'Integer)))))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: explicate control @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    tmp4399
    tmp4400
    tmp4401
    tmp4402
    x1
    x0
    _
    v
    _
    _
    tmp4406
    tmp4403
    tmp4418
    tmp4404
    tmp4405
    x1
    x0
    _
    v
    _
    _
    tmp4413
    tmp4410
    tmp4424
    tmp4411
    tmp4412
    x0
    _
    v
    _
    tmp4407
    tmp4428
    tmp4408
    tmp4409))
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '()
   (list (cons 'id4391start (Return (Var 'x4393)))))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '()
   (list
    (cons
     'block4420
     (Seq
      (Assign
       (Var 'tmp4402)
       (HasType
        (Prim
         '+
         (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
        'Integer))
      (Seq
       (Assign
        (Var 'x1)
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Var 'clos4395)
            '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)))
         '(Vector Integer)))
       (Seq
        (Assign
         (Var 'x0)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Var 'clos4395)
             '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)))
          '(Integer -> Integer)))
        (Seq
         (Assign
          (Var 'tmp4403)
          (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
         (Seq
          (Assign
           (Var 'tmp4404)
           (HasType
            (Prim
             '+
             (list
              (HasType (Var 'tmp4403) 'Integer)
              (HasType (Int 24) 'Integer)))
            'Integer))
          (Seq
           (Assign
            (Var 'tmp4405)
            (HasType (GlobalValue 'fromspace_end) 'Integer))
           (Seq
            (Assign
             (Var 'tmp4418)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4404) 'Integer)
                (HasType (Var 'tmp4405) 'Integer)))
              'Boolean))
            (IfStmt
             (Prim 'eq? (list (Var 'tmp4418) (Bool #t)))
             (Goto 'block4416)
             (Goto 'block4417))))))))))
    (cons
     'f4392start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      (Goto 'block4419)
      (Goto 'block4420)))
    (cons
     'block4415
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
        '(Vector (Integer -> Integer) (Vector Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) '(Vector Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Integer -> Integer))))
          'Void))
        (Seq
         (Assign
          (Var 'tmp4406)
          (HasType
           (FunRef 'f4392)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)))
         ((HasType
           (Var 'tmp4406)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)) (HasType
                                                                                  (Var
                                                                                   'tmp4402)
                                                                                  'Integer) (HasType
                                                                                             (HasType
                                                                                              (HasType
                                                                                               (HasType
                                                                                                (HasType
                                                                                                 (HasType
                                                                                                  (HasType
                                                                                                   (HasType
                                                                                                    (Var
                                                                                                     'v)
                                                                                                    '(Vector
                                                                                                      (Integer
                                                                                                       ->
                                                                                                       Integer)
                                                                                                      (Vector
                                                                                                       Integer)))
                                                                                                   '(Vector
                                                                                                     (Integer
                                                                                                      ->
                                                                                                      Integer)
                                                                                                     (Vector
                                                                                                      Integer)))
                                                                                                  '(Vector
                                                                                                    (Integer
                                                                                                     ->
                                                                                                     Integer)
                                                                                                    (Vector
                                                                                                     Integer)))
                                                                                                 '(Vector
                                                                                                   (Integer
                                                                                                    ->
                                                                                                    Integer)
                                                                                                   (Vector
                                                                                                    Integer)))
                                                                                                '(Vector
                                                                                                  (Integer
                                                                                                   ->
                                                                                                   Integer)
                                                                                                  (Vector
                                                                                                   Integer)))
                                                                                               '(Vector
                                                                                                 (Integer
                                                                                                  ->
                                                                                                  Integer)
                                                                                                 (Vector
                                                                                                  Integer)))
                                                                                              '(Vector
                                                                                                (Integer
                                                                                                 ->
                                                                                                 Integer)
                                                                                                (Vector
                                                                                                 Integer)))
                                                                                             '(Vector
                                                                                               (Integer
                                                                                                ->
                                                                                                Integer)
                                                                                               (Vector
                                                                                                Integer)))))))))
    (cons
     'block4416
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4415)))
    (cons 'block4417 (Seq (collect 24) (Goto 'block4415)))
    (cons
     'block4419
     (Seq
      (Assign
       (Var 'tmp4399)
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 1) 'Integer)))
        '(Vector Integer)))
      (Seq
       (Assign
        (Var 'tmp4400)
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType (Var 'tmp4399) '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer))
       (Seq
        (Assign
         (Var 'tmp4401)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Var 'clos4395)
             '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)))
          '(Integer -> Integer)))
        ((HasType (Var 'tmp4401) '(Integer -> Integer)) (HasType
                                                         (Var 'tmp4400)
                                                         'Integer))))))))
  (Def
   'main
   '()
   'Integer
   '()
   (list
    (cons
     'mainstart
     (Seq
      (Assign
       (Var 'x0)
       (HasType (HasType (Int 42) 'Integer) '(Vector Integer)))
      (Seq
       (Assign
        (Var 'tmp4407)
        (HasType
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void)
         '(Vector Integer)))
       (Seq
        (Assign
         (Var 'tmp4408)
         (HasType
          (Prim
           '+
           (list (HasType (Var 'tmp4407) 'Integer) (HasType (Int 16) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4409)
          (HasType (GlobalValue 'fromspace_end) 'Integer))
         (Seq
          (Assign
           (Var 'tmp4428)
           (HasType
            (Prim
             '<
             (list
              (HasType (Var 'tmp4408) 'Integer)
              (HasType (Var 'tmp4409) 'Integer)))
            'Boolean))
          (IfStmt
           (Prim 'eq? (list (Var 'tmp4428) (Bool #t)))
           (Goto 'block4426)
           (Goto 'block4427))))))))
    (cons
     'block4421
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
        '(Vector (Integer -> Integer) (Vector Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) '(Vector Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Integer -> Integer))))
          'Void))
        (Seq
         (Assign
          (Var 'tmp4413)
          (HasType
           (FunRef 'f4392)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)))
         ((HasType
           (Var 'tmp4413)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)) (HasType
                                                                                  (Int
                                                                                   0)
                                                                                  'Integer) (HasType
                                                                                             (HasType
                                                                                              (HasType
                                                                                               (HasType
                                                                                                (HasType
                                                                                                 (HasType
                                                                                                  (HasType
                                                                                                   (HasType
                                                                                                    (Var
                                                                                                     'v)
                                                                                                    '(Vector
                                                                                                      (Integer
                                                                                                       ->
                                                                                                       Integer)
                                                                                                      (Vector
                                                                                                       Integer)))
                                                                                                   '(Vector
                                                                                                     (Integer
                                                                                                      ->
                                                                                                      Integer)
                                                                                                     (Vector
                                                                                                      Integer)))
                                                                                                  '(Vector
                                                                                                    (Integer
                                                                                                     ->
                                                                                                     Integer)
                                                                                                    (Vector
                                                                                                     Integer)))
                                                                                                 '(Vector
                                                                                                   (Integer
                                                                                                    ->
                                                                                                    Integer)
                                                                                                   (Vector
                                                                                                    Integer)))
                                                                                                '(Vector
                                                                                                  (Integer
                                                                                                   ->
                                                                                                   Integer)
                                                                                                  (Vector
                                                                                                   Integer)))
                                                                                               '(Vector
                                                                                                 (Integer
                                                                                                  ->
                                                                                                  Integer)
                                                                                                 (Vector
                                                                                                  Integer)))
                                                                                              '(Vector
                                                                                                (Integer
                                                                                                 ->
                                                                                                 Integer)
                                                                                                (Vector
                                                                                                 Integer)))
                                                                                             '(Vector
                                                                                               (Integer
                                                                                                ->
                                                                                                Integer)
                                                                                               (Vector
                                                                                                Integer)))))))))
    (cons
     'block4422
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4421)))
    (cons 'block4423 (Seq (collect 24) (Goto 'block4421)))
    (cons
     'block4425
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
        '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (HasType
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          '(Vector Integer))
         '(Vector Integer)))
       (Seq
        (Assign (Var 'x1) (HasType (Var 'v) '(Vector Integer)))
        (Seq
         (Assign (Var 'x0) (HasType (FunRef 'id4391) '(Integer -> Integer)))
         (Seq
          (Assign
           (Var 'tmp4410)
           (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
          (Seq
           (Assign
            (Var 'tmp4411)
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4410) 'Integer)
               (HasType (Int 24) 'Integer)))
             'Integer))
           (Seq
            (Assign
             (Var 'tmp4412)
             (HasType (GlobalValue 'fromspace_end) 'Integer))
            (Seq
             (Assign
              (Var 'tmp4424)
              (HasType
               (Prim
                '<
                (list
                 (HasType (Var 'tmp4411) 'Integer)
                 (HasType (Var 'tmp4412) 'Integer)))
               'Boolean))
             (IfStmt
              (Prim 'eq? (list (Var 'tmp4424) (Bool #t)))
              (Goto 'block4422)
              (Goto 'block4423)))))))))))
    (cons
     'block4426
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4425)))
    (cons 'block4427 (Seq (collect 16) (Goto 'block4425)))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: uncover locals @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (x4393 . Integer)
    (n4394 . Integer)
    (clos4395 Vector (Integer -> Integer) (Vector Integer))
    (tmp4402 . Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4403 . Void)
    (tmp4404 . Integer)
    (tmp4405 . Integer)
    (tmp4418 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4406 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (tmp4402 . Integer)
    (_ . Void)
    (tmp4399 Vector Integer)
    (tmp4400 . Integer)
    (tmp4401 Integer -> Integer)
    (tmp4400 . Integer)
    (x0 Vector Integer)
    (tmp4407 Vector Integer)
    (tmp4408 . Integer)
    (tmp4409 . Integer)
    (tmp4428 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4413 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (_ . Void)
    (v Vector Integer)
    (_ Vector Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4410 . Void)
    (tmp4411 . Integer)
    (tmp4412 . Integer)
    (tmp4424 . Boolean)
    (_ . Void)))
 (list
  (Def
   'id4391
   '((x4393 : Integer))
   'Integer
   '((locals (x4393 . Integer)))
   (list (cons 'id4391start (Return (Var 'x4393)))))
  (Def
   'f4392
   '((n4394 : Integer)
     (clos4395 : (Vector (Integer -> Integer) (Vector Integer))))
   'Integer
   '((locals
      (n4394 . Integer)
      (clos4395 Vector (Integer -> Integer) (Vector Integer))
      (tmp4402 . Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4403 . Void)
      (tmp4404 . Integer)
      (tmp4405 . Integer)
      (tmp4418 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4406
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (tmp4402 . Integer)
      (_ . Void)
      (tmp4399 Vector Integer)
      (tmp4400 . Integer)
      (tmp4401 Integer -> Integer)
      (tmp4400 . Integer)))
   (list
    (cons
     'block4420
     (Seq
      (Assign
       (Var 'tmp4402)
       (HasType
        (Prim
         '+
         (list (HasType (Var 'n4394) 'Integer) (HasType (Int 1) 'Integer)))
        'Integer))
      (Seq
       (Assign
        (Var 'x1)
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType
            (Var 'clos4395)
            '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)))
         '(Vector Integer)))
       (Seq
        (Assign
         (Var 'x0)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Var 'clos4395)
             '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)))
          '(Integer -> Integer)))
        (Seq
         (Assign
          (Var 'tmp4403)
          (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
         (Seq
          (Assign
           (Var 'tmp4404)
           (HasType
            (Prim
             '+
             (list
              (HasType (Var 'tmp4403) 'Integer)
              (HasType (Int 24) 'Integer)))
            'Integer))
          (Seq
           (Assign
            (Var 'tmp4405)
            (HasType (GlobalValue 'fromspace_end) 'Integer))
           (Seq
            (Assign
             (Var 'tmp4418)
             (HasType
              (Prim
               '<
               (list
                (HasType (Var 'tmp4404) 'Integer)
                (HasType (Var 'tmp4405) 'Integer)))
              'Boolean))
            (IfStmt
             (Prim 'eq? (list (Var 'tmp4418) (Bool #t)))
             (Goto 'block4416)
             (Goto 'block4417))))))))))
    (cons
     'f4392start
     (IfStmt
      (Prim
       'eq?
       (list (HasType (Var 'n4394) 'Integer) (HasType (Int 100) 'Integer)))
      (Goto 'block4419)
      (Goto 'block4420)))
    (cons
     'block4415
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
        '(Vector (Integer -> Integer) (Vector Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) '(Vector Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Integer -> Integer))))
          'Void))
        (Seq
         (Assign
          (Var 'tmp4406)
          (HasType
           (FunRef 'f4392)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)))
         ((HasType
           (Var 'tmp4406)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)) (HasType
                                                                                  (Var
                                                                                   'tmp4402)
                                                                                  'Integer) (HasType
                                                                                             (HasType
                                                                                              (HasType
                                                                                               (HasType
                                                                                                (HasType
                                                                                                 (HasType
                                                                                                  (HasType
                                                                                                   (HasType
                                                                                                    (Var
                                                                                                     'v)
                                                                                                    '(Vector
                                                                                                      (Integer
                                                                                                       ->
                                                                                                       Integer)
                                                                                                      (Vector
                                                                                                       Integer)))
                                                                                                   '(Vector
                                                                                                     (Integer
                                                                                                      ->
                                                                                                      Integer)
                                                                                                     (Vector
                                                                                                      Integer)))
                                                                                                  '(Vector
                                                                                                    (Integer
                                                                                                     ->
                                                                                                     Integer)
                                                                                                    (Vector
                                                                                                     Integer)))
                                                                                                 '(Vector
                                                                                                   (Integer
                                                                                                    ->
                                                                                                    Integer)
                                                                                                   (Vector
                                                                                                    Integer)))
                                                                                                '(Vector
                                                                                                  (Integer
                                                                                                   ->
                                                                                                   Integer)
                                                                                                  (Vector
                                                                                                   Integer)))
                                                                                               '(Vector
                                                                                                 (Integer
                                                                                                  ->
                                                                                                  Integer)
                                                                                                 (Vector
                                                                                                  Integer)))
                                                                                              '(Vector
                                                                                                (Integer
                                                                                                 ->
                                                                                                 Integer)
                                                                                                (Vector
                                                                                                 Integer)))
                                                                                             '(Vector
                                                                                               (Integer
                                                                                                ->
                                                                                                Integer)
                                                                                               (Vector
                                                                                                Integer)))))))))
    (cons
     'block4416
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4415)))
    (cons 'block4417 (Seq (collect 24) (Goto 'block4415)))
    (cons
     'block4419
     (Seq
      (Assign
       (Var 'tmp4399)
       (HasType
        (Prim
         'vector-ref
         (list
          (HasType
           (Var 'clos4395)
           '(Vector (Integer -> Integer) (Vector Integer)))
          (HasType (Int 1) 'Integer)))
        '(Vector Integer)))
      (Seq
       (Assign
        (Var 'tmp4400)
        (HasType
         (Prim
          'vector-ref
          (list
           (HasType (Var 'tmp4399) '(Vector Integer))
           (HasType (Int 0) 'Integer)))
         'Integer))
       (Seq
        (Assign
         (Var 'tmp4401)
         (HasType
          (Prim
           'vector-ref
           (list
            (HasType
             (Var 'clos4395)
             '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)))
          '(Integer -> Integer)))
        ((HasType (Var 'tmp4401) '(Integer -> Integer)) (HasType
                                                         (Var 'tmp4400)
                                                         'Integer))))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (x0 Vector Integer)
      (tmp4407 Vector Integer)
      (tmp4408 . Integer)
      (tmp4409 . Integer)
      (tmp4428 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4413
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (_ . Void)
      (v Vector Integer)
      (_ Vector Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4410 . Void)
      (tmp4411 . Integer)
      (tmp4412 . Integer)
      (tmp4424 . Boolean)
      (_ . Void)))
   (list
    (cons
     'mainstart
     (Seq
      (Assign
       (Var 'x0)
       (HasType (HasType (Int 42) 'Integer) '(Vector Integer)))
      (Seq
       (Assign
        (Var 'tmp4407)
        (HasType
         (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void)
         '(Vector Integer)))
       (Seq
        (Assign
         (Var 'tmp4408)
         (HasType
          (Prim
           '+
           (list (HasType (Var 'tmp4407) 'Integer) (HasType (Int 16) 'Integer)))
          'Integer))
        (Seq
         (Assign
          (Var 'tmp4409)
          (HasType (GlobalValue 'fromspace_end) 'Integer))
         (Seq
          (Assign
           (Var 'tmp4428)
           (HasType
            (Prim
             '<
             (list
              (HasType (Var 'tmp4408) 'Integer)
              (HasType (Var 'tmp4409) 'Integer)))
            'Boolean))
          (IfStmt
           (Prim 'eq? (list (Var 'tmp4428) (Bool #t)))
           (Goto 'block4426)
           (Goto 'block4427))))))))
    (cons
     'block4421
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (allocate 2 (Vector (Integer -> Integer) (Vector Integer)))
        '(Vector (Integer -> Integer) (Vector Integer))))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (Prim
          'vector-set!
          (list
           (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
           (HasType (Int 1) 'Integer)
           (HasType (Var 'x1) '(Vector Integer))))
         'Void))
       (Seq
        (Assign
         (Var '_)
         (HasType
          (Prim
           'vector-set!
           (list
            (HasType (Var 'v) '(Vector (Integer -> Integer) (Vector Integer)))
            (HasType (Int 0) 'Integer)
            (HasType (Var 'x0) '(Integer -> Integer))))
          'Void))
        (Seq
         (Assign
          (Var 'tmp4413)
          (HasType
           (FunRef 'f4392)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)))
         ((HasType
           (Var 'tmp4413)
           '(Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)) (HasType
                                                                                  (Int
                                                                                   0)
                                                                                  'Integer) (HasType
                                                                                             (HasType
                                                                                              (HasType
                                                                                               (HasType
                                                                                                (HasType
                                                                                                 (HasType
                                                                                                  (HasType
                                                                                                   (HasType
                                                                                                    (Var
                                                                                                     'v)
                                                                                                    '(Vector
                                                                                                      (Integer
                                                                                                       ->
                                                                                                       Integer)
                                                                                                      (Vector
                                                                                                       Integer)))
                                                                                                   '(Vector
                                                                                                     (Integer
                                                                                                      ->
                                                                                                      Integer)
                                                                                                     (Vector
                                                                                                      Integer)))
                                                                                                  '(Vector
                                                                                                    (Integer
                                                                                                     ->
                                                                                                     Integer)
                                                                                                    (Vector
                                                                                                     Integer)))
                                                                                                 '(Vector
                                                                                                   (Integer
                                                                                                    ->
                                                                                                    Integer)
                                                                                                   (Vector
                                                                                                    Integer)))
                                                                                                '(Vector
                                                                                                  (Integer
                                                                                                   ->
                                                                                                   Integer)
                                                                                                  (Vector
                                                                                                   Integer)))
                                                                                               '(Vector
                                                                                                 (Integer
                                                                                                  ->
                                                                                                  Integer)
                                                                                                 (Vector
                                                                                                  Integer)))
                                                                                              '(Vector
                                                                                                (Integer
                                                                                                 ->
                                                                                                 Integer)
                                                                                                (Vector
                                                                                                 Integer)))
                                                                                             '(Vector
                                                                                               (Integer
                                                                                                ->
                                                                                                Integer)
                                                                                               (Vector
                                                                                                Integer)))))))))
    (cons
     'block4422
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4421)))
    (cons 'block4423 (Seq (collect 24) (Goto 'block4421)))
    (cons
     'block4425
     (Seq
      (Assign
       (Var 'v)
       (HasType
        (HasType (allocate 1 (Vector Integer)) '(Vector Integer))
        '(Vector Integer)))
      (Seq
       (Assign
        (Var '_)
        (HasType
         (HasType
          (HasType
           (Prim
            'vector-set!
            (list
             (HasType (Var 'v) '(Vector Integer))
             (HasType (Int 0) 'Integer)
             (HasType (Var 'x0) 'Integer)))
           'Void)
          '(Vector Integer))
         '(Vector Integer)))
       (Seq
        (Assign (Var 'x1) (HasType (Var 'v) '(Vector Integer)))
        (Seq
         (Assign (Var 'x0) (HasType (FunRef 'id4391) '(Integer -> Integer)))
         (Seq
          (Assign
           (Var 'tmp4410)
           (HasType (HasType (GlobalValue 'free_ptr) 'Integer) 'Void))
          (Seq
           (Assign
            (Var 'tmp4411)
            (HasType
             (Prim
              '+
              (list
               (HasType (Var 'tmp4410) 'Integer)
               (HasType (Int 24) 'Integer)))
             'Integer))
           (Seq
            (Assign
             (Var 'tmp4412)
             (HasType (GlobalValue 'fromspace_end) 'Integer))
            (Seq
             (Assign
              (Var 'tmp4424)
              (HasType
               (Prim
                '<
                (list
                 (HasType (Var 'tmp4411) 'Integer)
                 (HasType (Var 'tmp4412) 'Integer)))
               'Boolean))
             (IfStmt
              (Prim 'eq? (list (Var 'tmp4424) (Bool #t)))
              (Goto 'block4422)
              (Goto 'block4423)))))))))))
    (cons
     'block4426
     (Seq (Assign (Var '_) (HasType (Void) 'Void)) (Goto 'block4425)))
    (cons 'block4427 (Seq (collect 16) (Goto 'block4425)))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: instruction selection @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (x4393 . Integer)
    (n4394 . Integer)
    (clos4395 Vector (Integer -> Integer) (Vector Integer))
    (tmp4402 . Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4403 . Void)
    (tmp4404 . Integer)
    (tmp4405 . Integer)
    (tmp4418 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4406 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (tmp4402 . Integer)
    (_ . Void)
    (tmp4399 Vector Integer)
    (tmp4400 . Integer)
    (tmp4401 Integer -> Integer)
    (tmp4400 . Integer)
    (x0 Vector Integer)
    (tmp4407 Vector Integer)
    (tmp4408 . Integer)
    (tmp4409 . Integer)
    (tmp4428 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4413 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (_ . Void)
    (v Vector Integer)
    (_ Vector Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4410 . Void)
    (tmp4411 . Integer)
    (tmp4412 . Integer)
    (tmp4424 . Boolean)
    (_ . Void)))
 (list
  (Def
   'id4391
   '()
   'Integer
   '((locals (x4393 . Integer)) (num-params . 1))
   (list
    (cons
     'id4391start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4393)))
       (Instr 'movq (list (Var 'x4393) (Reg 'rax)))
       (Jmp 'id4391conclusion))))))
  (Def
   'f4392
   '()
   'Integer
   '((locals
      (n4394 . Integer)
      (clos4395 Vector (Integer -> Integer) (Vector Integer))
      (tmp4402 . Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4403 . Void)
      (tmp4404 . Integer)
      (tmp4405 . Integer)
      (tmp4418 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4406
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (tmp4402 . Integer)
      (_ . Void)
      (tmp4399 Vector Integer)
      (tmp4400 . Integer)
      (tmp4401 Integer -> Integer)
      (tmp4400 . Integer))
     (num-params . 2))
   (list
    (cons
     'block4420
     (Block
      '()
      (list
       (Instr 'movq (list (Var 'n4394) (Var 'tmp4402)))
       (Instr 'addq (list (Imm 1) (Var 'tmp4402)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'x1)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4403)))
       (Instr 'movq (list (Var 'tmp4403) (Var 'tmp4404)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4404)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4405)))
       (Instr 'cmpq (list (Var 'tmp4405) (Var 'tmp4404)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4418)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4418)))
       (JmpIf 'e 'block4416)
       (Jmp 'block4417))))
    (cons
     'f4392start
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4394)))
       (Instr 'movq (list (Reg 'rdx) (Var 'clos4395)))
       (Instr 'cmpq (list (Imm 100) (Var 'n4394)))
       (JmpIf 'e 'block4419)
       (Jmp 'block4420))))
    (cons
     'block4415
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4406)))
       (Instr 'movq (list (Var 'tmp4402) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4406)))))
    (cons
     'block4416
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4415))))
    (cons
     'block4417
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4415))))
    (cons
     'block4419
     (Block
      '()
      (list
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'tmp4399)))
       (Instr 'movq (list (Var 'tmp4399) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4400)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4401)))
       (Instr 'movq (list (Var 'tmp4400) (Reg 'rcx)))
       (TailJmp (Var 'tmp4401)))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (x0 Vector Integer)
      (tmp4407 Vector Integer)
      (tmp4408 . Integer)
      (tmp4409 . Integer)
      (tmp4428 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4413
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (_ . Void)
      (v Vector Integer)
      (_ Vector Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4410 . Void)
      (tmp4411 . Integer)
      (tmp4412 . Integer)
      (tmp4424 . Boolean)
      (_ . Void))
     (num-params . 0))
   (list
    (cons
     'mainstart
     (Block
      '()
      (list
       (Instr 'movq (list (Imm 42) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4407)))
       (Instr 'movq (list (Var 'tmp4407) (Var 'tmp4408)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4408)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4409)))
       (Instr 'cmpq (list (Var 'tmp4409) (Var 'tmp4408)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4428)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4428)))
       (JmpIf 'e 'block4426)
       (Jmp 'block4427))))
    (cons
     'block4421
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4413)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4413)))))
    (cons
     'block4422
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4421))))
    (cons
     'block4423
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4421))))
    (cons
     'block4425
     (Block
      '()
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'id4391) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4410)))
       (Instr 'movq (list (Var 'tmp4410) (Var 'tmp4411)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4411)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4412)))
       (Instr 'cmpq (list (Var 'tmp4412) (Var 'tmp4411)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4424)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4424)))
       (JmpIf 'e 'block4422)
       (Jmp 'block4423))))
    (cons
     'block4426
     (Block '() (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4425))))
    (cons
     'block4427
     (Block
      '()
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4425))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: uncover live @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (x4393 . Integer)
    (n4394 . Integer)
    (clos4395 Vector (Integer -> Integer) (Vector Integer))
    (tmp4402 . Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4403 . Void)
    (tmp4404 . Integer)
    (tmp4405 . Integer)
    (tmp4418 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4406 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (tmp4402 . Integer)
    (_ . Void)
    (tmp4399 Vector Integer)
    (tmp4400 . Integer)
    (tmp4401 Integer -> Integer)
    (tmp4400 . Integer)
    (x0 Vector Integer)
    (tmp4407 Vector Integer)
    (tmp4408 . Integer)
    (tmp4409 . Integer)
    (tmp4428 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4413 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (_ . Void)
    (v Vector Integer)
    (_ Vector Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4410 . Void)
    (tmp4411 . Integer)
    (tmp4412 . Integer)
    (tmp4424 . Boolean)
    (_ . Void)))
 (list
  (Def
   'id4391
   '()
   'Integer
   '((locals (x4393 . Integer)) (num-params . 1))
   (list
    (cons
     'id4391start
     (Block
      (list (set 'rcx) (set 'x4393) (set) (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4393)))
       (Instr 'movq (list (Var 'x4393) (Reg 'rax)))
       (Jmp 'id4391conclusion))))))
  (Def
   'f4392
   '()
   'Integer
   '((locals
      (n4394 . Integer)
      (clos4395 Vector (Integer -> Integer) (Vector Integer))
      (tmp4402 . Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4403 . Void)
      (tmp4404 . Integer)
      (tmp4405 . Integer)
      (tmp4418 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4406
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (tmp4402 . Integer)
      (_ . Void)
      (tmp4399 Vector Integer)
      (tmp4400 . Integer)
      (tmp4401 Integer -> Integer)
      (tmp4400 . Integer))
     (num-params . 2))
   (list
    (cons
     'block4419
     (Block
      (list
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'tmp4399 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'tmp4399)))
       (Instr 'movq (list (Var 'tmp4399) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4400)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4401)))
       (Instr 'movq (list (Var 'tmp4400) (Reg 'rcx)))
       (TailJmp (Var 'tmp4401)))))
    (cons
     'block4415
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'tmp4406 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4406)))
       (Instr 'movq (list (Var 'tmp4402) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4406)))))
    (cons
     'block4416
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4415))))
    (cons
     'block4417
     (Block
      (list
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4415))))
    (cons
     'block4420
     (Block
      (list
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'tmp4403
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'tmp4405
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'tmp4418
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Var 'n4394) (Var 'tmp4402)))
       (Instr 'addq (list (Imm 1) (Var 'tmp4402)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'x1)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4403)))
       (Instr 'movq (list (Var 'tmp4403) (Var 'tmp4404)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4404)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4405)))
       (Instr 'cmpq (list (Var 'tmp4405) (Var 'tmp4404)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4418)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4418)))
       (JmpIf 'e 'block4416)
       (Jmp 'block4417))))
    (cons
     'f4392start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'n4394 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4394)))
       (Instr 'movq (list (Reg 'rdx) (Var 'clos4395)))
       (Instr 'cmpq (list (Imm 100) (Var 'n4394)))
       (JmpIf 'e 'block4419)
       (Jmp 'block4420))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (x0 Vector Integer)
      (tmp4407 Vector Integer)
      (tmp4408 . Integer)
      (tmp4409 . Integer)
      (tmp4428 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4413
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (_ . Void)
      (v Vector Integer)
      (_ Vector Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4410 . Void)
      (tmp4411 . Integer)
      (tmp4412 . Integer)
      (tmp4424 . Boolean)
      (_ . Void))
     (num-params . 0))
   (list
    (cons
     'block4421
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4413)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4413)))))
    (cons
     'block4423
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4421))))
    (cons
     'block4422
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4421))))
    (cons
     'block4425
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4410
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'tmp4412
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'id4391) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4410)))
       (Instr 'movq (list (Var 'tmp4410) (Var 'tmp4411)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4411)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4412)))
       (Instr 'cmpq (list (Var 'tmp4412) (Var 'tmp4411)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4424)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4424)))
       (JmpIf 'e 'block4422)
       (Jmp 'block4423))))
    (cons
     'block4427
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4425))))
    (cons
     'block4426
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4425))))
    (cons
     'mainstart
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4407 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4408
        'tmp4409
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'tmp4428 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Imm 42) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4407)))
       (Instr 'movq (list (Var 'tmp4407) (Var 'tmp4408)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4408)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4409)))
       (Instr 'cmpq (list (Var 'tmp4409) (Var 'tmp4408)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4428)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4428)))
       (JmpIf 'e 'block4426)
       (Jmp 'block4427))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: build interference @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (x4393 . Integer)
    (n4394 . Integer)
    (clos4395 Vector (Integer -> Integer) (Vector Integer))
    (tmp4402 . Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4403 . Void)
    (tmp4404 . Integer)
    (tmp4405 . Integer)
    (tmp4418 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4406 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (tmp4402 . Integer)
    (_ . Void)
    (tmp4399 Vector Integer)
    (tmp4400 . Integer)
    (tmp4401 Integer -> Integer)
    (tmp4400 . Integer)
    (x0 Vector Integer)
    (tmp4407 Vector Integer)
    (tmp4408 . Integer)
    (tmp4409 . Integer)
    (tmp4428 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4413 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (_ . Void)
    (v Vector Integer)
    (_ Vector Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4410 . Void)
    (tmp4411 . Integer)
    (tmp4412 . Integer)
    (tmp4424 . Boolean)
    (_ . Void)))
 (list
  (Def
   'id4391
   '()
   'Integer
   '((locals (x4393 . Integer))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'id4391start
     (Block
      (list (set 'rcx) (set 'x4393) (set) (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'x4393)))
       (Instr 'movq (list (Var 'x4393) (Reg 'rax)))
       (Jmp 'id4391conclusion))))))
  (Def
   'f4392
   '()
   'Integer
   '((locals
      (n4394 . Integer)
      (clos4395 Vector (Integer -> Integer) (Vector Integer))
      (tmp4402 . Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4403 . Void)
      (tmp4404 . Integer)
      (tmp4405 . Integer)
      (tmp4418 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4406
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (tmp4402 . Integer)
      (_ . Void)
      (tmp4399 Vector Integer)
      (tmp4400 . Integer)
      (tmp4401 Integer -> Integer)
      (tmp4400 . Integer))
     (num-params . 2)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4419
     (Block
      (list
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'tmp4399 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'tmp4399)))
       (Instr 'movq (list (Var 'tmp4399) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4400)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'tmp4401)))
       (Instr 'movq (list (Var 'tmp4400) (Reg 'rcx)))
       (TailJmp (Var 'tmp4401)))))
    (cons
     'block4415
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'tmp4406 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4406)))
       (Instr 'movq (list (Var 'tmp4402) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4406)))))
    (cons
     'block4416
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4415))))
    (cons
     'block4417
     (Block
      (list
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4415))))
    (cons
     'block4420
     (Block
      (list
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'tmp4403
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'tmp4405
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'tmp4418
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Var 'n4394) (Var 'tmp4402)))
       (Instr 'addq (list (Imm 1) (Var 'tmp4402)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Var 'x1)))
       (Instr 'movq (list (Var 'clos4395) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4403)))
       (Instr 'movq (list (Var 'tmp4403) (Var 'tmp4404)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4404)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4405)))
       (Instr 'cmpq (list (Var 'tmp4405) (Var 'tmp4404)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4418)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4418)))
       (JmpIf 'e 'block4416)
       (Jmp 'block4417))))
    (cons
     'f4392start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'n4394 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Var 'n4394)))
       (Instr 'movq (list (Reg 'rdx) (Var 'clos4395)))
       (Instr 'cmpq (list (Imm 100) (Var 'n4394)))
       (JmpIf 'e 'block4419)
       (Jmp 'block4420))))))
  (Def
   'main
   '()
   'Integer
   '((locals
      (x0 Vector Integer)
      (tmp4407 Vector Integer)
      (tmp4408 . Integer)
      (tmp4409 . Integer)
      (tmp4428 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4413
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (_ . Void)
      (v Vector Integer)
      (_ Vector Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4410 . Void)
      (tmp4411 . Integer)
      (tmp4412 . Integer)
      (tmp4424 . Boolean)
      (_ . Void))
     (num-params . 0)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4421
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x1) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'leaq (list (FunRef 'f4392) (Var 'tmp4413)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Var 'v) (Reg 'rdx)))
       (TailJmp (Var 'tmp4413)))))
    (cons
     'block4423
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4421))))
    (cons
     'block4422
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4421))))
    (cons
     'block4425
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4410
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'tmp4412
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Var 'v)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Var 'v) (Reg 'r11)))
       (Instr 'movq (list (Var 'x0) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Var '_)))
       (Instr 'movq (list (Var 'v) (Var 'x1)))
       (Instr 'leaq (list (FunRef 'id4391) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4410)))
       (Instr 'movq (list (Var 'tmp4410) (Var 'tmp4411)))
       (Instr 'addq (list (Imm 24) (Var 'tmp4411)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4412)))
       (Instr 'cmpq (list (Var 'tmp4412) (Var 'tmp4411)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4424)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4424)))
       (JmpIf 'e 'block4422)
       (Jmp 'block4423))))
    (cons
     'block4427
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4425))))
    (cons
     'block4426
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list (Instr 'movq (list (Imm 0) (Var '_))) (Jmp 'block4425))))
    (cons
     'mainstart
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4407 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4408
        'tmp4409
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'tmp4428 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Imm 42) (Var 'x0)))
       (Instr 'movq (list (Global 'free_ptr) (Var 'tmp4407)))
       (Instr 'movq (list (Var 'tmp4407) (Var 'tmp4408)))
       (Instr 'addq (list (Imm 16) (Var 'tmp4408)))
       (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp4409)))
       (Instr 'cmpq (list (Var 'tmp4409) (Var 'tmp4408)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Var 'tmp4428)))
       (Instr 'cmpq (list (Imm 1) (Var 'tmp4428)))
       (JmpIf 'e 'block4426)
       (Jmp 'block4427))))))))


running output  @ utilities.rkt:1503
new-result:
42


testing @ utilities.rkt:1489
test-name:
"r4_12"


running pass: allocate registers @ utilities.rkt:1493

pass output:  @ utilities.rkt:1496
(strip-has-type new-p):
(ProgramDefs
 '((locals
    (x4393 . Integer)
    (n4394 . Integer)
    (clos4395 Vector (Integer -> Integer) (Vector Integer))
    (tmp4402 . Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4403 . Void)
    (tmp4404 . Integer)
    (tmp4405 . Integer)
    (tmp4418 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4406 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (tmp4402 . Integer)
    (_ . Void)
    (tmp4399 Vector Integer)
    (tmp4400 . Integer)
    (tmp4401 Integer -> Integer)
    (tmp4400 . Integer)
    (x0 Vector Integer)
    (tmp4407 Vector Integer)
    (tmp4408 . Integer)
    (tmp4409 . Integer)
    (tmp4428 . Boolean)
    (v Vector (Integer -> Integer) (Vector Integer))
    (_ . Void)
    (_ . Void)
    (tmp4413 Integer (Vector (Integer -> Integer) (Vector Integer)) -> Integer)
    (_ . Void)
    (v Vector Integer)
    (_ Vector Integer)
    (x1 Vector Integer)
    (x0 Integer -> Integer)
    (tmp4410 . Void)
    (tmp4411 . Integer)
    (tmp4412 . Integer)
    (tmp4424 . Boolean)
    (_ . Void)))
 (list
  (Def
   'id4391
   '()
   'Integer
   '((stack-space . 0)
     (num-spills 0 . 0)
     (locals (x4393 . Integer))
     (num-params . 1)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'id4391start
     (Block
      (list (set 'rcx) (set 'x4393) (set) (set))
      (list
       (Instr 'movq (list (Reg 'rcx) (Reg 'rsi)))
       (Instr 'movq (list (Reg 'rsi) (Reg 'rax)))
       (Jmp 'id4391conclusion))))))
  (Def
   'f4392
   '()
   'Integer
   '((stack-space . 32)
     (num-spills 4 . 2)
     (locals
      (n4394 . Integer)
      (clos4395 Vector (Integer -> Integer) (Vector Integer))
      (tmp4402 . Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4403 . Void)
      (tmp4404 . Integer)
      (tmp4405 . Integer)
      (tmp4418 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4406
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (tmp4402 . Integer)
      (_ . Void)
      (tmp4399 Vector Integer)
      (tmp4400 . Integer)
      (tmp4401 Integer -> Integer)
      (tmp4400 . Integer))
     (num-params . 2)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4419
     (Block
      (list
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'tmp4399 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'clos4395 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'r14 'r10 'r8 'r9 'tmp4400 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'tmp4401 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Deref 'r15 24) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Deref 'r15 16)))
       (Instr 'movq (list (Deref 'r15 16) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
       (Instr 'movq (list (Deref 'r15 24) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4415
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'tmp4406 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4406 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'r11)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'leaq (list (FunRef 'f4392) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'rbp -40) (Reg 'rcx)))
       (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4416
     (Block
      (list
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block4415))))
    (cons
     'block4417
     (Block
      (list
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'tmp4402 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4402 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4415))))
    (cons
     'block4420
     (Block
      (list
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'tmp4402 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'tmp4403
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'tmp4404
        'tmp4405
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'tmp4418
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4402
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 1) (Deref 'rbp -40)))
       (Instr 'movq (list (Deref 'r15 24) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 16) (Deref 'r15 16)))
       (Instr 'movq (list (Deref 'r15 24) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r11 8) (Deref 'rbp -32)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -48)))
       (Instr 'movq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'addq (list (Imm 24) (Deref 'rbp -56)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -48)))
       (Instr 'cmpq (list (Deref 'rbp -48) (Deref 'rbp -56)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Deref 'rbp -48)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -48)))
       (JmpIf 'e 'block4416)
       (Jmp 'block4417))))
    (cons
     'f4392start
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'n4394 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'n4394
        'clos4395
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi))
      (list
       (Instr 'movq (list (Reg 'rcx) (Deref 'rbp -32)))
       (Instr 'movq (list (Reg 'rdx) (Deref 'r15 24)))
       (Instr 'cmpq (list (Imm 100) (Deref 'rbp -32)))
       (JmpIf 'e 'block4419)
       (Jmp 'block4420))))))
  (Def
   'main
   '()
   'Integer
   '((stack-space . 16)
     (num-spills 2 . 3)
     (locals
      (x0 Vector Integer)
      (tmp4407 Vector Integer)
      (tmp4408 . Integer)
      (tmp4409 . Integer)
      (tmp4428 . Boolean)
      (v Vector (Integer -> Integer) (Vector Integer))
      (_ . Void)
      (_ . Void)
      (tmp4413
       Integer
       (Vector (Integer -> Integer) (Vector Integer))
       ->
       Integer)
      (_ . Void)
      (v Vector Integer)
      (_ Vector Integer)
      (x1 Vector Integer)
      (x0 Integer -> Integer)
      (tmp4410 . Void)
      (tmp4411 . Integer)
      (tmp4412 . Integer)
      (tmp4424 . Boolean)
      (_ . Void))
     (num-params . 0)
     (conflicts . #<unweighted-graph>))
   (list
    (cons
     'block4421
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'tmp4413 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Deref 'r15 32)))
       (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'r11)))
       (Instr 'movq (list (Imm 261) (Deref 'r11 0)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'r11 16)))
       (Instr 'movq (list (Imm 0) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 24) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Deref 'rbp -32)))
       (Instr 'leaq (list (FunRef 'f4392) (Deref 'rbp -32)))
       (Instr 'movq (list (Imm 0) (Reg 'rcx)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'rdx)))
       (TailJmp (Deref 'rbp -32)))))
    (cons
     'block4423
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 24) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4421))))
    (cons
     'block4422
     (Block
      (list
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi)
       (set 'x0 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rsi))
      (list (Instr 'movq (list (Imm 0) (Deref 'rbp -32))) (Jmp 'block4421))))
    (cons
     'block4425
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'v 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'tmp4410
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set
        'tmp4411
        'x0
        'tmp4412
        'rcx
        'r14
        'r10
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'rcx
        'r14
        'r10
        'tmp4424
        'r8
        'r9
        'x1
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'x1 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Global 'free_ptr) (Deref 'r15 32)))
       (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'r11)))
       (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
       (Instr 'movq (list (Deref 'r15 32) (Reg 'r11)))
       (Instr 'movq (list (Deref 'r15 24) (Deref 'r11 8)))
       (Instr 'movq (list (Imm 0) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'r15 32) (Deref 'r15 16)))
       (Instr 'leaq (list (FunRef 'id4391) (Deref 'r15 24)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'rbp -32)))
       (Instr 'movq (list (Deref 'rbp -32) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 24) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -32)))
       (Instr 'cmpq (list (Deref 'rbp -32) (Deref 'rbp -40)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Deref 'rbp -32)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -32)))
       (JmpIf 'e 'block4422)
       (Jmp 'block4423))))
    (cons
     'block4427
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
       (Instr 'movq (list (Imm 16) (Reg 'rsi)))
       (Callq 'collect)
       (Jmp 'block4425))))
    (cons
     'block4426
     (Block
      (list
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list (Instr 'movq (list (Imm 0) (Deref 'rbp -32))) (Jmp 'block4425))))
    (cons
     'mainstart
     (Block
      (list
       (set 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'tmp4407 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'tmp4408 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set
        'x0
        'tmp4408
        'tmp4409
        'rcx
        'r14
        'r10
        'r8
        'r9
        'rbx
        'r12
        'rdi
        'r13
        'rdx
        'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'tmp4428 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi)
       (set 'x0 'rcx 'r14 'r10 'r8 'r9 'rbx 'r12 'rdi 'r13 'rdx 'rsi))
      (list
       (Instr 'movq (list (Imm 42) (Deref 'r15 24)))
       (Instr 'movq (list (Global 'free_ptr) (Deref 'r15 16)))
       (Instr 'movq (list (Deref 'r15 16) (Deref 'rbp -40)))
       (Instr 'addq (list (Imm 16) (Deref 'rbp -40)))
       (Instr 'movq (list (Global 'fromspace_end) (Deref 'rbp -32)))
       (Instr 'cmpq (list (Deref 'rbp -32) (Deref 'rbp -40)))
       (Instr 'set (list 'l (Reg 'al)))
       (Instr 'movzbq (list (Reg 'al) (Deref 'rbp -32)))
       (Instr 'cmpq (list (Imm 1) (Deref 'rbp -32)))
       (JmpIf 'e 'block4426)
       (Jmp 'block4427))))))))


encountered exception while testing 'r4`, case r4_12
